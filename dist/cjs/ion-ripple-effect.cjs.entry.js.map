{"file":"ion-ripple-effect.entry.cjs.js","mappings":"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","names":["readTask","writeTask","getIonMode","h","Host"],"sources":["node_modules/@ionic/core/dist/collection/components/ripple-effect/ripple-effect.css?tag=ion-ripple-effect&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/ripple-effect/ripple-effect.js"],"sourcesContent":["/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  position: absolute;\n  contain: strict;\n  pointer-events: none;\n}\n\n:host(.unbounded) {\n  contain: layout size style;\n}\n\n.ripple-effect {\n  border-radius: 50%;\n  position: absolute;\n  background-color: currentColor;\n  color: inherit;\n  contain: strict;\n  opacity: 0;\n  animation: 225ms rippleAnimation forwards, 75ms fadeInAnimation forwards;\n  will-change: transform, opacity;\n  pointer-events: none;\n}\n\n.fade-out {\n  transform: translate(var(--translate-end)) scale(var(--final-scale, 1));\n  animation: 150ms fadeOutAnimation forwards;\n}\n\n@keyframes rippleAnimation {\n  from {\n    animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n    transform: scale(1);\n  }\n  to {\n    transform: translate(var(--translate-end)) scale(var(--final-scale, 1));\n  }\n}\n@keyframes fadeInAnimation {\n  from {\n    animation-timing-function: linear;\n    opacity: 0;\n  }\n  to {\n    opacity: 0.16;\n  }\n}\n@keyframes fadeOutAnimation {\n  from {\n    animation-timing-function: linear;\n    opacity: 0.16;\n  }\n  to {\n    opacity: 0;\n  }\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h, readTask, writeTask } from \"@stencil/core\";\nimport { getIonMode } from \"../../global/ionic-global\";\nexport class RippleEffect {\n    constructor() {\n        this.type = 'bounded';\n    }\n    /**\n     * Adds the ripple effect to the parent element.\n     *\n     * @param x The horizontal coordinate of where the ripple should start.\n     * @param y The vertical coordinate of where the ripple should start.\n     */\n    async addRipple(x, y) {\n        return new Promise((resolve) => {\n            readTask(() => {\n                const rect = this.el.getBoundingClientRect();\n                const width = rect.width;\n                const height = rect.height;\n                const hypotenuse = Math.sqrt(width * width + height * height);\n                const maxDim = Math.max(height, width);\n                const maxRadius = this.unbounded ? maxDim : hypotenuse + PADDING;\n                const initialSize = Math.floor(maxDim * INITIAL_ORIGIN_SCALE);\n                const finalScale = maxRadius / initialSize;\n                let posX = x - rect.left;\n                let posY = y - rect.top;\n                if (this.unbounded) {\n                    posX = width * 0.5;\n                    posY = height * 0.5;\n                }\n                const styleX = posX - initialSize * 0.5;\n                const styleY = posY - initialSize * 0.5;\n                const moveX = width * 0.5 - posX;\n                const moveY = height * 0.5 - posY;\n                writeTask(() => {\n                    const div = document.createElement('div');\n                    div.classList.add('ripple-effect');\n                    const style = div.style;\n                    style.top = styleY + 'px';\n                    style.left = styleX + 'px';\n                    style.width = style.height = initialSize + 'px';\n                    style.setProperty('--final-scale', `${finalScale}`);\n                    style.setProperty('--translate-end', `${moveX}px, ${moveY}px`);\n                    const container = this.el.shadowRoot || this.el;\n                    container.appendChild(div);\n                    setTimeout(() => {\n                        resolve(() => {\n                            removeRipple(div);\n                        });\n                    }, 225 + 100);\n                });\n            });\n        });\n    }\n    get unbounded() {\n        return this.type === 'unbounded';\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { key: '7ae559bda5d2c1856a45bfa150c2cb4f83373f8e', role: \"presentation\", class: {\n                [mode]: true,\n                unbounded: this.unbounded,\n            } }));\n    }\n    static get is() { return \"ion-ripple-effect\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"ripple-effect.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"ripple-effect.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"type\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'bounded' | 'unbounded'\",\n                    \"resolved\": \"\\\"bounded\\\" | \\\"unbounded\\\"\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Sets the type of ripple-effect:\\n\\n- `bounded`: the ripple effect expands from the user's click position\\n- `unbounded`: the ripple effect expands from the center of the button and overflows the container.\\n\\nNOTE: Surfaces for bounded ripples should have the overflow property set to hidden,\\nwhile surfaces for unbounded ripples should have it set to visible.\"\n                },\n                \"attribute\": \"type\",\n                \"reflect\": false,\n                \"defaultValue\": \"'bounded'\"\n            }\n        };\n    }\n    static get methods() {\n        return {\n            \"addRipple\": {\n                \"complexType\": {\n                    \"signature\": \"(x: number, y: number) => Promise<() => void>\",\n                    \"parameters\": [{\n                            \"name\": \"x\",\n                            \"type\": \"number\",\n                            \"docs\": \"The horizontal coordinate of where the ripple should start.\"\n                        }, {\n                            \"name\": \"y\",\n                            \"type\": \"number\",\n                            \"docs\": \"The vertical coordinate of where the ripple should start.\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<() => void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Adds the ripple effect to the parent element.\",\n                    \"tags\": [{\n                            \"name\": \"param\",\n                            \"text\": \"x The horizontal coordinate of where the ripple should start.\"\n                        }, {\n                            \"name\": \"param\",\n                            \"text\": \"y The vertical coordinate of where the ripple should start.\"\n                        }]\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n}\nconst removeRipple = (ripple) => {\n    ripple.classList.add('fade-out');\n    setTimeout(() => {\n        ripple.remove();\n    }, 200);\n};\nconst PADDING = 10;\nconst INITIAL_ORIGIN_SCALE = 0.5;\n"],"version":3}