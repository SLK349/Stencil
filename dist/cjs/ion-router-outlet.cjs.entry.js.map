{"file":"ion-router-outlet.entry.cjs.js","mappings":"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","names":["createLockController","getIonMode","getTimeGivenProgression","shallowEqualStringMap","attachComponent","detachComponent","config","transition","hasLazyBuild","h"],"sources":["node_modules/@ionic/core/dist/collection/components/router-outlet/router-outlet.css?tag=ion-router-outlet&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/router-outlet/router-outlet.js"],"sourcesContent":["/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  position: absolute;\n  contain: layout size style;\n  z-index: 0;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { h } from \"@stencil/core\";\nimport { getTimeGivenProgression } from \"../../utils/animation/cubic-bezier\";\nimport { attachComponent, detachComponent } from \"../../utils/framework-delegate\";\nimport { shallowEqualStringMap, hasLazyBuild } from \"../../utils/helpers\";\nimport { createLockController } from \"../../utils/lock-controller\";\nimport { transition } from \"../../utils/transition/index\";\nimport { config } from \"../../global/config\";\nimport { getIonMode } from \"../../global/ionic-global\";\nexport class RouterOutlet {\n    constructor() {\n        this.lockController = createLockController();\n        this.gestureOrAnimationInProgress = false;\n        this.mode = getIonMode(this);\n        this.delegate = undefined;\n        this.animated = true;\n        this.animation = undefined;\n        this.swipeHandler = undefined;\n    }\n    swipeHandlerChanged() {\n        if (this.gesture) {\n            this.gesture.enable(this.swipeHandler !== undefined);\n        }\n    }\n    async connectedCallback() {\n        const onStart = () => {\n            this.gestureOrAnimationInProgress = true;\n            if (this.swipeHandler) {\n                this.swipeHandler.onStart();\n            }\n        };\n        this.gesture = (await import('../../utils/gesture/swipe-back')).createSwipeBackGesture(this.el, () => !this.gestureOrAnimationInProgress && !!this.swipeHandler && this.swipeHandler.canStart(), () => onStart(), (step) => { var _a; return (_a = this.ani) === null || _a === void 0 ? void 0 : _a.progressStep(step); }, (shouldComplete, step, dur) => {\n            if (this.ani) {\n                this.ani.onFinish(() => {\n                    this.gestureOrAnimationInProgress = false;\n                    if (this.swipeHandler) {\n                        this.swipeHandler.onEnd(shouldComplete);\n                    }\n                }, { oneTimeCallback: true });\n                // Account for rounding errors in JS\n                let newStepValue = shouldComplete ? -0.001 : 0.001;\n                /**\n                 * Animation will be reversed here, so need to\n                 * reverse the easing curve as well\n                 *\n                 * Additionally, we need to account for the time relative\n                 * to the new easing curve, as `stepValue` is going to be given\n                 * in terms of a linear curve.\n                 */\n                if (!shouldComplete) {\n                    this.ani.easing('cubic-bezier(1, 0, 0.68, 0.28)');\n                    newStepValue += getTimeGivenProgression([0, 0], [1, 0], [0.68, 0.28], [1, 1], step)[0];\n                }\n                else {\n                    newStepValue += getTimeGivenProgression([0, 0], [0.32, 0.72], [0, 1], [1, 1], step)[0];\n                }\n                this.ani.progressEnd(shouldComplete ? 1 : 0, newStepValue, dur);\n            }\n            else {\n                this.gestureOrAnimationInProgress = false;\n            }\n        });\n        this.swipeHandlerChanged();\n    }\n    componentWillLoad() {\n        this.ionNavWillLoad.emit();\n    }\n    disconnectedCallback() {\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n    }\n    /** @internal */\n    async commit(enteringEl, leavingEl, opts) {\n        const unlock = await this.lockController.lock();\n        let changed = false;\n        try {\n            changed = await this.transition(enteringEl, leavingEl, opts);\n        }\n        catch (e) {\n            console.error(e);\n        }\n        unlock();\n        return changed;\n    }\n    /** @internal */\n    async setRouteId(id, params, direction, animation) {\n        const changed = await this.setRoot(id, params, {\n            duration: direction === 'root' ? 0 : undefined,\n            direction: direction === 'back' ? 'back' : 'forward',\n            animationBuilder: animation,\n        });\n        return {\n            changed,\n            element: this.activeEl,\n        };\n    }\n    /** @internal */\n    async getRouteId() {\n        const active = this.activeEl;\n        return active\n            ? {\n                id: active.tagName,\n                element: active,\n                params: this.activeParams,\n            }\n            : undefined;\n    }\n    async setRoot(component, params, opts) {\n        if (this.activeComponent === component && shallowEqualStringMap(params, this.activeParams)) {\n            return false;\n        }\n        // attach entering view to DOM\n        const leavingEl = this.activeEl;\n        const enteringEl = await attachComponent(this.delegate, this.el, component, ['ion-page', 'ion-page-invisible'], params);\n        this.activeComponent = component;\n        this.activeEl = enteringEl;\n        this.activeParams = params;\n        // commit animation\n        await this.commit(enteringEl, leavingEl, opts);\n        await detachComponent(this.delegate, leavingEl);\n        return true;\n    }\n    async transition(enteringEl, leavingEl, opts = {}) {\n        if (leavingEl === enteringEl) {\n            return false;\n        }\n        // emit nav will change event\n        this.ionNavWillChange.emit();\n        const { el, mode } = this;\n        const animated = this.animated && config.getBoolean('animated', true);\n        const animationBuilder = opts.animationBuilder || this.animation || config.get('navAnimation');\n        await transition(Object.assign(Object.assign({ mode,\n            animated,\n            enteringEl,\n            leavingEl, baseEl: el,\n            /**\n             * We need to wait for all Stencil components\n             * to be ready only when using the lazy\n             * loaded bundle.\n             */\n            deepWait: hasLazyBuild(el), progressCallback: opts.progressAnimation\n                ? (ani) => {\n                    /**\n                     * Because this progress callback is called asynchronously\n                     * it is possible for the gesture to start and end before\n                     * the animation is ever set. In that scenario, we should\n                     * immediately call progressEnd so that the transition promise\n                     * resolves and the gesture does not get locked up.\n                     */\n                    if (ani !== undefined && !this.gestureOrAnimationInProgress) {\n                        this.gestureOrAnimationInProgress = true;\n                        ani.onFinish(() => {\n                            this.gestureOrAnimationInProgress = false;\n                            if (this.swipeHandler) {\n                                this.swipeHandler.onEnd(false);\n                            }\n                        }, { oneTimeCallback: true });\n                        /**\n                         * Playing animation to beginning\n                         * with a duration of 0 prevents\n                         * any flickering when the animation\n                         * is later cleaned up.\n                         */\n                        ani.progressEnd(0, 0, 0);\n                    }\n                    else {\n                        this.ani = ani;\n                    }\n                }\n                : undefined }, opts), { animationBuilder }));\n        // emit nav changed event\n        this.ionNavDidChange.emit();\n        return true;\n    }\n    render() {\n        return h(\"slot\", { key: 'a70341f58d19df55de1dad00e3464388e446aa2a' });\n    }\n    static get is() { return \"ion-router-outlet\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"router-outlet.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"router-outlet.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"mode\": {\n                \"type\": \"string\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"\\\"ios\\\" | \\\"md\\\"\",\n                    \"resolved\": \"\\\"ios\\\" | \\\"md\\\"\",\n                    \"references\": {\n                        \"Mode\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Mode\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The mode determines which platform styles to use.\"\n                },\n                \"attribute\": \"mode\",\n                \"reflect\": false,\n                \"defaultValue\": \"getIonMode(this)\"\n            },\n            \"delegate\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"FrameworkDelegate\",\n                    \"resolved\": \"FrameworkDelegate | undefined\",\n                    \"references\": {\n                        \"FrameworkDelegate\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::FrameworkDelegate\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                }\n            },\n            \"animated\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the router-outlet should animate the transition of components.\"\n                },\n                \"attribute\": \"animated\",\n                \"reflect\": false,\n                \"defaultValue\": \"true\"\n            },\n            \"animation\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"AnimationBuilder\",\n                    \"resolved\": \"((baseEl: any, opts?: any) => Animation) | undefined\",\n                    \"references\": {\n                        \"AnimationBuilder\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::AnimationBuilder\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"This property allows to create custom transition using AnimationBuilder functions.\"\n                }\n            },\n            \"swipeHandler\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"SwipeGestureHandler\",\n                    \"resolved\": \"SwipeGestureHandler | undefined\",\n                    \"references\": {\n                        \"SwipeGestureHandler\": {\n                            \"location\": \"import\",\n                            \"path\": \"../nav/nav-interface\",\n                            \"id\": \"src/components/nav/nav-interface.ts::SwipeGestureHandler\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                }\n            }\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"ionNavWillLoad\",\n                \"name\": \"ionNavWillLoad\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"ionNavWillChange\",\n                \"name\": \"ionNavWillChange\",\n                \"bubbles\": false,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"ionNavDidChange\",\n                \"name\": \"ionNavDidChange\",\n                \"bubbles\": false,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }];\n    }\n    static get methods() {\n        return {\n            \"commit\": {\n                \"complexType\": {\n                    \"signature\": \"(enteringEl: HTMLElement, leavingEl: HTMLElement | undefined, opts?: RouterOutletOptions) => Promise<boolean>\",\n                    \"parameters\": [{\n                            \"name\": \"enteringEl\",\n                            \"type\": \"HTMLElement\",\n                            \"docs\": \"\"\n                        }, {\n                            \"name\": \"leavingEl\",\n                            \"type\": \"HTMLElement | undefined\",\n                            \"docs\": \"\"\n                        }, {\n                            \"name\": \"opts\",\n                            \"type\": \"RouterOutletOptions | undefined\",\n                            \"docs\": \"\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        },\n                        \"HTMLElement\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::HTMLElement\"\n                        },\n                        \"RouterOutletOptions\": {\n                            \"location\": \"import\",\n                            \"path\": \"../nav/nav-interface\",\n                            \"id\": \"src/components/nav/nav-interface.ts::RouterOutletOptions\"\n                        }\n                    },\n                    \"return\": \"Promise<boolean>\"\n                },\n                \"docs\": {\n                    \"text\": \"\",\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }]\n                }\n            },\n            \"setRouteId\": {\n                \"complexType\": {\n                    \"signature\": \"(id: string, params: ComponentProps | undefined, direction: RouterDirection, animation?: AnimationBuilder) => Promise<RouteWrite>\",\n                    \"parameters\": [{\n                            \"name\": \"id\",\n                            \"type\": \"string\",\n                            \"docs\": \"\"\n                        }, {\n                            \"name\": \"params\",\n                            \"type\": \"ComponentProps | undefined\",\n                            \"docs\": \"\"\n                        }, {\n                            \"name\": \"direction\",\n                            \"type\": \"\\\"root\\\" | \\\"back\\\" | \\\"forward\\\"\",\n                            \"docs\": \"\"\n                        }, {\n                            \"name\": \"animation\",\n                            \"type\": \"AnimationBuilder | undefined\",\n                            \"docs\": \"\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        },\n                        \"RouteWrite\": {\n                            \"location\": \"import\",\n                            \"path\": \"../router/utils/interface\",\n                            \"id\": \"src/components/router/utils/interface.ts::RouteWrite\"\n                        },\n                        \"ComponentProps\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::ComponentProps\"\n                        },\n                        \"RouterDirection\": {\n                            \"location\": \"import\",\n                            \"path\": \"../router/utils/interface\",\n                            \"id\": \"src/components/router/utils/interface.ts::RouterDirection\"\n                        },\n                        \"AnimationBuilder\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::AnimationBuilder\"\n                        }\n                    },\n                    \"return\": \"Promise<RouteWrite>\"\n                },\n                \"docs\": {\n                    \"text\": \"\",\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }]\n                }\n            },\n            \"getRouteId\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<RouteID | undefined>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        },\n                        \"RouteID\": {\n                            \"location\": \"import\",\n                            \"path\": \"../router/utils/interface\",\n                            \"id\": \"src/components/router/utils/interface.ts::RouteID\"\n                        }\n                    },\n                    \"return\": \"Promise<RouteID | undefined>\"\n                },\n                \"docs\": {\n                    \"text\": \"\",\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }]\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"swipeHandler\",\n                \"methodName\": \"swipeHandlerChanged\"\n            }];\n    }\n}\n"],"version":3}