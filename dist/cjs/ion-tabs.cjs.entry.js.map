{"file":"ion-tabs.entry.cjs.js","mappings":"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","names":["h","Host"],"sources":["node_modules/@ionic/core/dist/collection/components/tabs/tabs.css?tag=ion-tabs&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/tabs/tabs.js"],"sourcesContent":["/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  position: absolute;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  contain: layout size style;\n  z-index: 0;\n}\n\n.tabs-inner {\n  position: relative;\n  flex: 1;\n  contain: layout size style;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\n/**\n * @slot - Content is placed between the named slots if provided without a slot.\n * @slot top - Content is placed at the top of the screen.\n * @slot bottom - Content is placed at the bottom of the screen.\n */\nexport class Tabs {\n    constructor() {\n        this.transitioning = false;\n        this.onTabClicked = (ev) => {\n            const { href, tab } = ev.detail;\n            if (this.useRouter && href !== undefined) {\n                const router = document.querySelector('ion-router');\n                if (router) {\n                    router.push(href);\n                }\n            }\n            else {\n                this.select(tab);\n            }\n        };\n        this.selectedTab = undefined;\n        this.useRouter = false;\n    }\n    async componentWillLoad() {\n        if (!this.useRouter) {\n            this.useRouter = !!document.querySelector('ion-router') && !this.el.closest('[no-router]');\n        }\n        if (!this.useRouter) {\n            const tabs = this.tabs;\n            if (tabs.length > 0) {\n                await this.select(tabs[0]);\n            }\n        }\n        this.ionNavWillLoad.emit();\n    }\n    componentWillRender() {\n        const tabBar = this.el.querySelector('ion-tab-bar');\n        if (tabBar) {\n            const tab = this.selectedTab ? this.selectedTab.tab : undefined;\n            tabBar.selectedTab = tab;\n        }\n    }\n    /**\n     * Select a tab by the value of its `tab` property or an element reference. This method is only available for vanilla JavaScript projects. The Angular, React, and Vue implementations of tabs are coupled to each framework's router.\n     *\n     * @param tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\n     */\n    async select(tab) {\n        const selectedTab = getTab(this.tabs, tab);\n        if (!this.shouldSwitch(selectedTab)) {\n            return false;\n        }\n        await this.setActive(selectedTab);\n        await this.notifyRouter();\n        this.tabSwitch();\n        return true;\n    }\n    /**\n     * Get a specific tab by the value of its `tab` property or an element reference. This method is only available for vanilla JavaScript projects. The Angular, React, and Vue implementations of tabs are coupled to each framework's router.\n     *\n     * @param tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\n     */\n    async getTab(tab) {\n        return getTab(this.tabs, tab);\n    }\n    /**\n     * Get the currently selected tab. This method is only available for vanilla JavaScript projects. The Angular, React, and Vue implementations of tabs are coupled to each framework's router.\n     */\n    getSelected() {\n        return Promise.resolve(this.selectedTab ? this.selectedTab.tab : undefined);\n    }\n    /** @internal */\n    async setRouteId(id) {\n        const selectedTab = getTab(this.tabs, id);\n        if (!this.shouldSwitch(selectedTab)) {\n            return { changed: false, element: this.selectedTab };\n        }\n        await this.setActive(selectedTab);\n        return {\n            changed: true,\n            element: this.selectedTab,\n            markVisible: () => this.tabSwitch(),\n        };\n    }\n    /** @internal */\n    async getRouteId() {\n        var _a;\n        const tabId = (_a = this.selectedTab) === null || _a === void 0 ? void 0 : _a.tab;\n        return tabId !== undefined ? { id: tabId, element: this.selectedTab } : undefined;\n    }\n    setActive(selectedTab) {\n        if (this.transitioning) {\n            return Promise.reject('transitioning already happening');\n        }\n        this.transitioning = true;\n        this.leavingTab = this.selectedTab;\n        this.selectedTab = selectedTab;\n        this.ionTabsWillChange.emit({ tab: selectedTab.tab });\n        selectedTab.active = true;\n        return Promise.resolve();\n    }\n    tabSwitch() {\n        const selectedTab = this.selectedTab;\n        const leavingTab = this.leavingTab;\n        this.leavingTab = undefined;\n        this.transitioning = false;\n        if (!selectedTab) {\n            return;\n        }\n        if (leavingTab !== selectedTab) {\n            if (leavingTab) {\n                leavingTab.active = false;\n            }\n            this.ionTabsDidChange.emit({ tab: selectedTab.tab });\n        }\n    }\n    notifyRouter() {\n        if (this.useRouter) {\n            const router = document.querySelector('ion-router');\n            if (router) {\n                return router.navChanged('forward');\n            }\n        }\n        return Promise.resolve(false);\n    }\n    shouldSwitch(selectedTab) {\n        const leavingTab = this.selectedTab;\n        return selectedTab !== undefined && selectedTab !== leavingTab && !this.transitioning;\n    }\n    get tabs() {\n        return Array.from(this.el.querySelectorAll('ion-tab'));\n    }\n    render() {\n        return (h(Host, { key: '13d9b30a83eb565b635ec7c547bd99da8c96aaa0', onIonTabButtonClick: this.onTabClicked }, h(\"slot\", { key: 'd885dbf0134cd5d256f7e3e9fc4844636c2c6cbf', name: \"top\" }), h(\"div\", { key: '2f48887902d47c0e29afb8da450da22b874b0e76', class: \"tabs-inner\" }, h(\"slot\", { key: 'bcdb41418edc7d176e570c37bb6a6ba1dc123f7d' })), h(\"slot\", { key: '85101e7c57cf8cda04bd3a125f1207faf85110d2', name: \"bottom\" })));\n    }\n    static get is() { return \"ion-tabs\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"tabs.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"tabs.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"useRouter\": {\n                \"type\": \"boolean\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                },\n                \"attribute\": \"use-router\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"selectedTab\": {}\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"ionNavWillLoad\",\n                \"name\": \"ionNavWillLoad\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Emitted when the navigation will load a component.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"ionTabsWillChange\",\n                \"name\": \"ionTabsWillChange\",\n                \"bubbles\": false,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the navigation is about to transition to a new component.\"\n                },\n                \"complexType\": {\n                    \"original\": \"{ tab: string }\",\n                    \"resolved\": \"{ tab: string; }\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"ionTabsDidChange\",\n                \"name\": \"ionTabsDidChange\",\n                \"bubbles\": false,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the navigation has finished transitioning to a new component.\"\n                },\n                \"complexType\": {\n                    \"original\": \"{ tab: string }\",\n                    \"resolved\": \"{ tab: string; }\",\n                    \"references\": {}\n                }\n            }];\n    }\n    static get methods() {\n        return {\n            \"select\": {\n                \"complexType\": {\n                    \"signature\": \"(tab: string | HTMLIonTabElement) => Promise<boolean>\",\n                    \"parameters\": [{\n                            \"name\": \"tab\",\n                            \"type\": \"string | HTMLIonTabElement\",\n                            \"docs\": \"The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        },\n                        \"HTMLIonTabElement\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::HTMLIonTabElement\"\n                        }\n                    },\n                    \"return\": \"Promise<boolean>\"\n                },\n                \"docs\": {\n                    \"text\": \"Select a tab by the value of its `tab` property or an element reference. This method is only available for vanilla JavaScript projects. The Angular, React, and Vue implementations of tabs are coupled to each framework's router.\",\n                    \"tags\": [{\n                            \"name\": \"param\",\n                            \"text\": \"tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\"\n                        }]\n                }\n            },\n            \"getTab\": {\n                \"complexType\": {\n                    \"signature\": \"(tab: string | HTMLIonTabElement) => Promise<HTMLIonTabElement | undefined>\",\n                    \"parameters\": [{\n                            \"name\": \"tab\",\n                            \"type\": \"string | HTMLIonTabElement\",\n                            \"docs\": \"The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        },\n                        \"HTMLIonTabElement\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::HTMLIonTabElement\"\n                        }\n                    },\n                    \"return\": \"Promise<HTMLIonTabElement | undefined>\"\n                },\n                \"docs\": {\n                    \"text\": \"Get a specific tab by the value of its `tab` property or an element reference. This method is only available for vanilla JavaScript projects. The Angular, React, and Vue implementations of tabs are coupled to each framework's router.\",\n                    \"tags\": [{\n                            \"name\": \"param\",\n                            \"text\": \"tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\"\n                        }]\n                }\n            },\n            \"getSelected\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<string | undefined>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<string | undefined>\"\n                },\n                \"docs\": {\n                    \"text\": \"Get the currently selected tab. This method is only available for vanilla JavaScript projects. The Angular, React, and Vue implementations of tabs are coupled to each framework's router.\",\n                    \"tags\": []\n                }\n            },\n            \"setRouteId\": {\n                \"complexType\": {\n                    \"signature\": \"(id: string) => Promise<RouteWrite>\",\n                    \"parameters\": [{\n                            \"name\": \"id\",\n                            \"type\": \"string\",\n                            \"docs\": \"\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        },\n                        \"RouteWrite\": {\n                            \"location\": \"import\",\n                            \"path\": \"../router/utils/interface\",\n                            \"id\": \"src/components/router/utils/interface.ts::RouteWrite\"\n                        }\n                    },\n                    \"return\": \"Promise<RouteWrite>\"\n                },\n                \"docs\": {\n                    \"text\": \"\",\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }]\n                }\n            },\n            \"getRouteId\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<RouteID | undefined>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        },\n                        \"RouteID\": {\n                            \"location\": \"import\",\n                            \"path\": \"../router/utils/interface\",\n                            \"id\": \"src/components/router/utils/interface.ts::RouteID\"\n                        }\n                    },\n                    \"return\": \"Promise<RouteID | undefined>\"\n                },\n                \"docs\": {\n                    \"text\": \"\",\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }]\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n}\nconst getTab = (tabs, tab) => {\n    const tabEl = typeof tab === 'string' ? tabs.find((t) => t.tab === tab) : tab;\n    if (!tabEl) {\n        console.error(`tab with id: \"${tabEl}\" does not exist`);\n    }\n    return tabEl;\n};\n"],"version":3}