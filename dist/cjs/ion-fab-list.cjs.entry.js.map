{"file":"ion-fab-list.entry.cjs.js","mappings":";;;;;;;AAAA,MAAM,UAAU,GAAG,0gDAA0gD,CAAC;AAC9hD,yBAAe,UAAU;;MCIZ,OAAO;IAChB;;QACI,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;KACxB;IACD,gBAAgB,CAAC,SAAS;QACtB,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,CAAC,CAAC;;QAEpE,MAAM,OAAO,GAAG,SAAS,GAAG,EAAE,GAAG,CAAC,CAAC;QACnC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC;YAChB,UAAU,CAAC,OAAO,GAAG,CAAC,IAAI,GAAG,SAAS,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,CAAC;SACzD,CAAC,CAAC;KACN;IACD,MAAM;QACF,MAAM,IAAI,GAAGA,sBAAU,CAAC,IAAI,CAAC,CAAC;QAC9B,QAAQC,OAAC,CAACC,UAAI,EAAE,EAAE,GAAG,EAAE,0CAA0C,EAAE,KAAK,EAAE;gBAClE,CAAC,IAAI,GAAG,IAAI;gBACZ,iBAAiB,EAAE,IAAI,CAAC,SAAS;gBACjC,CAAC,iBAAiB,IAAI,CAAC,IAAI,EAAE,GAAG,IAAI;aACvC,EAAE,EAAED,OAAC,CAAC,MAAM,EAAE,EAAE,GAAG,EAAE,0CAA0C,EAAE,CAAC,CAAC,EAAE;KAC7E;;;;;;;;;;","names":["getIonMode","h","Host"],"sources":["node_modules/@ionic/core/dist/collection/components/fab-list/fab-list.css?tag=ion-fab-list&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/fab-list/fab-list.js"],"sourcesContent":["/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: calc(100% + 10px);\n  margin-bottom: calc(100% + 10px);\n  display: none;\n  position: absolute;\n  top: 0;\n  flex-direction: column;\n  align-items: center;\n  /**\n   * The list should be centered relative to the parent\n   * FAB button. We set minimum dimensions so the\n   * FAB list can be centered relative to the small FAB button.\n   * However, the small FAB button adds start/end margin, so we need\n   * to account for that in the FAB list dimensions.\n   */\n  min-width: 56px;\n  min-height: 56px;\n}\n\n:host(.fab-list-active) {\n  display: flex;\n}\n\n::slotted(.fab-button-in-list) {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 8px;\n  margin-bottom: 8px;\n  width: 40px;\n  height: 40px;\n  transform: scale(0);\n  opacity: 0;\n  visibility: hidden;\n}\n\n:host(.fab-list-side-top) ::slotted(.fab-button-in-list),\n:host(.fab-list-side-bottom) ::slotted(.fab-button-in-list) {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 5px;\n  margin-bottom: 5px;\n}\n\n:host(.fab-list-side-start) ::slotted(.fab-button-in-list),\n:host(.fab-list-side-end) ::slotted(.fab-button-in-list) {\n  -webkit-margin-start: 5px;\n  margin-inline-start: 5px;\n  -webkit-margin-end: 5px;\n  margin-inline-end: 5px;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n::slotted(.fab-button-in-list.fab-button-show) {\n  transform: scale(1);\n  opacity: 1;\n  visibility: visible;\n}\n\n:host(.fab-list-side-top) {\n  top: auto;\n  bottom: 0;\n  flex-direction: column-reverse;\n}\n\n:host(.fab-list-side-start) {\n  -webkit-margin-start: calc(100% + 10px);\n  margin-inline-start: calc(100% + 10px);\n  -webkit-margin-end: calc(100% + 10px);\n  margin-inline-end: calc(100% + 10px);\n  margin-top: 0;\n  margin-bottom: 0;\n  flex-direction: row-reverse;\n}\n:host(.fab-list-side-start) {\n  inset-inline-end: 0;\n}\n\n:host(.fab-list-side-end) {\n  -webkit-margin-start: calc(100% + 10px);\n  margin-inline-start: calc(100% + 10px);\n  -webkit-margin-end: calc(100% + 10px);\n  margin-inline-end: calc(100% + 10px);\n  margin-top: 0;\n  margin-bottom: 0;\n  flex-direction: row;\n}\n:host(.fab-list-side-end) {\n  inset-inline-start: 0;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { getIonMode } from \"../../global/ionic-global\";\nexport class FabList {\n    constructor() {\n        this.activated = false;\n        this.side = 'bottom';\n    }\n    activatedChanged(activated) {\n        const fabs = Array.from(this.el.querySelectorAll('ion-fab-button'));\n        // if showing the fabs add a timeout, else show immediately\n        const timeout = activated ? 30 : 0;\n        fabs.forEach((fab, i) => {\n            setTimeout(() => (fab.show = activated), i * timeout);\n        });\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { key: '64b33366447f66c7f979cfac56307fbb1a6fac1c', class: {\n                [mode]: true,\n                'fab-list-active': this.activated,\n                [`fab-list-side-${this.side}`]: true,\n            } }, h(\"slot\", { key: 'd9f474f7f20fd7e813db358fddc720534ca05bb6' })));\n    }\n    static get is() { return \"ion-fab-list\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"fab-list.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"fab-list.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"activated\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the fab list will show all fab buttons in the list.\"\n                },\n                \"attribute\": \"activated\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"side\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'start' | 'end' | 'top' | 'bottom'\",\n                    \"resolved\": \"\\\"bottom\\\" | \\\"end\\\" | \\\"start\\\" | \\\"top\\\"\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The side the fab list will show on relative to the main fab button.\"\n                },\n                \"attribute\": \"side\",\n                \"reflect\": false,\n                \"defaultValue\": \"'bottom'\"\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"activated\",\n                \"methodName\": \"activatedChanged\"\n            }];\n    }\n}\n"],"version":3}