{"file":"ion-tab-button.entry.cjs.js","mappings":"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","names":["inheritAttributes","config","getIonMode","h","Host"],"sources":["node_modules/@ionic/core/dist/collection/components/tab-button/tab-button.ios.css?tag=ion-tab-button&mode=ios&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/tab-button/tab-button.md.css?tag=ion-tab-button&mode=md&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/tab-button/tab-button.js"],"sourcesContent":["/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the tab button\n   * @prop --background-focused: Background of the tab button when focused with the tab key\n   * @prop --background-focused-opacity: Opacity of the tab button background when focused with the tab key\n   *\n   * @prop --color: Color of the tab button\n   * @prop --color-focused: Color of the tab button when focused with the tab key\n   * @prop --color-selected: Color of the selected tab button\n   *\n   * @prop --padding-top: Top padding of the tab button\n   * @prop --padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the tab button\n   * @prop --padding-bottom: Bottom padding of the tab button\n   * @prop --padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the tab button\n   *\n   * @prop --ripple-color: Color of the button ripple effect\n   */\n  --ripple-color: var(--color-selected);\n  --background-focused-opacity: 1;\n  flex: 1;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  outline: none;\n  background: var(--background);\n  color: var(--color);\n}\n\n.button-native {\n  border-radius: inherit;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  -webkit-padding-start: var(--padding-start);\n  padding-inline-start: var(--padding-start);\n  -webkit-padding-end: var(--padding-end);\n  padding-inline-end: var(--padding-end);\n  padding-top: var(--padding-top);\n  padding-bottom: var(--padding-bottom);\n  font-family: inherit;\n  font-size: inherit;\n  font-style: inherit;\n  font-weight: inherit;\n  letter-spacing: inherit;\n  text-decoration: inherit;\n  text-indent: inherit;\n  text-overflow: inherit;\n  text-transform: inherit;\n  text-align: inherit;\n  white-space: inherit;\n  color: inherit;\n  display: flex;\n  position: relative;\n  flex-direction: inherit;\n  align-items: inherit;\n  justify-content: inherit;\n  width: 100%;\n  height: 100%;\n  border: 0;\n  outline: none;\n  background: transparent;\n  text-decoration: none;\n  cursor: pointer;\n  overflow: hidden;\n  box-sizing: border-box;\n  -webkit-user-drag: none;\n}\n\n.button-native::after {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  position: absolute;\n  content: \"\";\n  opacity: 0;\n}\n\n.button-inner {\n  display: flex;\n  position: relative;\n  flex-flow: inherit;\n  align-items: inherit;\n  justify-content: inherit;\n  width: 100%;\n  height: 100%;\n  z-index: 1;\n}\n\n:host(.ion-focused) .button-native {\n  color: var(--color-focused);\n}\n:host(.ion-focused) .button-native::after {\n  background: var(--background-focused);\n  opacity: var(--background-focused-opacity);\n}\n\n@media (any-hover: hover) {\n  a:hover {\n    color: var(--color-selected);\n  }\n}\n:host(.tab-selected) {\n  color: var(--color-selected);\n}\n\n:host(.tab-hidden) {\n  /* stylelint-disable-next-line declaration-no-important */\n  display: none !important;\n}\n\n:host(.tab-disabled) {\n  pointer-events: none;\n  opacity: 0.4;\n}\n\n::slotted(ion-label),\n::slotted(ion-icon) {\n  display: block;\n  align-self: center;\n  max-width: 100%;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n  box-sizing: border-box;\n}\n\n::slotted(ion-label) {\n  order: 0;\n}\n\n::slotted(ion-icon) {\n  order: -1;\n  height: 1em;\n}\n\n:host(.tab-has-label-only) ::slotted(ion-label) {\n  white-space: normal;\n}\n\n::slotted(ion-badge) {\n  box-sizing: border-box;\n  position: absolute;\n  z-index: 1;\n}\n\n:host(.tab-layout-icon-start) {\n  flex-direction: row;\n}\n\n:host(.tab-layout-icon-end) {\n  flex-direction: row-reverse;\n}\n\n:host(.tab-layout-icon-bottom) {\n  flex-direction: column-reverse;\n}\n\n:host(.tab-layout-icon-hide) ::slotted(ion-icon) {\n  display: none;\n}\n\n:host(.tab-layout-label-hide) ::slotted(ion-label) {\n  display: none;\n}\n\nion-ripple-effect {\n  color: var(--ripple-color);\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --padding-top: 0;\n  --padding-end: 2px;\n  --padding-bottom: 0;\n  --padding-start: 2px;\n  max-width: 240px;\n  font-size: 10px;\n}\n\n::slotted(ion-badge) {\n  -webkit-padding-start: 6px;\n  padding-inline-start: 6px;\n  -webkit-padding-end: 6px;\n  padding-inline-end: 6px;\n  padding-top: 1px;\n  padding-bottom: 1px;\n  top: 4px;\n  height: auto;\n  font-size: 12px;\n  line-height: 16px;\n}\n::slotted(ion-badge) {\n  inset-inline-start: calc(50% + 6px);\n}\n\n::slotted(ion-icon) {\n  margin-top: 2px;\n  margin-bottom: 2px;\n  font-size: 24px;\n}\n\n::slotted(ion-icon::before) {\n  vertical-align: top;\n}\n\n::slotted(ion-label) {\n  margin-top: 0;\n  margin-bottom: 1px;\n  min-height: 11px;\n  font-weight: 500;\n}\n\n:host(.tab-has-label-only) ::slotted(ion-label) {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 2px;\n  margin-bottom: 2px;\n  font-size: 12px;\n  font-size: 14px;\n  line-height: 1.1;\n}\n\n:host(.tab-layout-icon-end) ::slotted(ion-label),\n:host(.tab-layout-icon-start) ::slotted(ion-label),\n:host(.tab-layout-icon-hide) ::slotted(ion-label) {\n  margin-top: 2px;\n  margin-bottom: 2px;\n  font-size: 14px;\n  line-height: 1.1;\n}\n\n:host(.tab-layout-icon-end) ::slotted(ion-icon),\n:host(.tab-layout-icon-start) ::slotted(ion-icon) {\n  min-width: 24px;\n  height: 26px;\n  margin-top: 2px;\n  margin-bottom: 1px;\n  font-size: 24px;\n}\n\n:host(.tab-layout-icon-bottom) ::slotted(ion-badge) {\n  inset-inline-start: calc(50% + 12px);\n}\n\n:host(.tab-layout-icon-bottom) ::slotted(ion-icon) {\n  margin-top: 0;\n  margin-bottom: 1px;\n}\n\n:host(.tab-layout-icon-bottom) ::slotted(ion-label) {\n  margin-top: 4px;\n}\n\n:host(.tab-layout-icon-start) ::slotted(ion-badge),\n:host(.tab-layout-icon-end) ::slotted(ion-badge) {\n  top: 10px;\n}\n:host(.tab-layout-icon-start) ::slotted(ion-badge),\n:host(.tab-layout-icon-end) ::slotted(ion-badge) {\n  inset-inline-start: calc(50% + 35px);\n}\n\n:host(.tab-layout-icon-hide) ::slotted(ion-badge),\n:host(.tab-has-label-only) ::slotted(ion-badge) {\n  top: 10px;\n}\n:host(.tab-layout-icon-hide) ::slotted(ion-badge),\n:host(.tab-has-label-only) ::slotted(ion-badge) {\n  inset-inline-start: calc(50% + 30px);\n}\n\n:host(.tab-layout-label-hide) ::slotted(ion-badge),\n:host(.tab-has-icon-only) ::slotted(ion-badge) {\n  top: 10px;\n}\n\n:host(.tab-layout-label-hide) ::slotted(ion-icon) {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n:host(.tab-layout-label-hide) ::slotted(ion-icon),\n:host(.tab-has-icon-only) ::slotted(ion-icon) {\n  font-size: 30px;\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the tab button\n   * @prop --background-focused: Background of the tab button when focused with the tab key\n   * @prop --background-focused-opacity: Opacity of the tab button background when focused with the tab key\n   *\n   * @prop --color: Color of the tab button\n   * @prop --color-focused: Color of the tab button when focused with the tab key\n   * @prop --color-selected: Color of the selected tab button\n   *\n   * @prop --padding-top: Top padding of the tab button\n   * @prop --padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the tab button\n   * @prop --padding-bottom: Bottom padding of the tab button\n   * @prop --padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the tab button\n   *\n   * @prop --ripple-color: Color of the button ripple effect\n   */\n  --ripple-color: var(--color-selected);\n  --background-focused-opacity: 1;\n  flex: 1;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  outline: none;\n  background: var(--background);\n  color: var(--color);\n}\n\n.button-native {\n  border-radius: inherit;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  -webkit-padding-start: var(--padding-start);\n  padding-inline-start: var(--padding-start);\n  -webkit-padding-end: var(--padding-end);\n  padding-inline-end: var(--padding-end);\n  padding-top: var(--padding-top);\n  padding-bottom: var(--padding-bottom);\n  font-family: inherit;\n  font-size: inherit;\n  font-style: inherit;\n  font-weight: inherit;\n  letter-spacing: inherit;\n  text-decoration: inherit;\n  text-indent: inherit;\n  text-overflow: inherit;\n  text-transform: inherit;\n  text-align: inherit;\n  white-space: inherit;\n  color: inherit;\n  display: flex;\n  position: relative;\n  flex-direction: inherit;\n  align-items: inherit;\n  justify-content: inherit;\n  width: 100%;\n  height: 100%;\n  border: 0;\n  outline: none;\n  background: transparent;\n  text-decoration: none;\n  cursor: pointer;\n  overflow: hidden;\n  box-sizing: border-box;\n  -webkit-user-drag: none;\n}\n\n.button-native::after {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  position: absolute;\n  content: \"\";\n  opacity: 0;\n}\n\n.button-inner {\n  display: flex;\n  position: relative;\n  flex-flow: inherit;\n  align-items: inherit;\n  justify-content: inherit;\n  width: 100%;\n  height: 100%;\n  z-index: 1;\n}\n\n:host(.ion-focused) .button-native {\n  color: var(--color-focused);\n}\n:host(.ion-focused) .button-native::after {\n  background: var(--background-focused);\n  opacity: var(--background-focused-opacity);\n}\n\n@media (any-hover: hover) {\n  a:hover {\n    color: var(--color-selected);\n  }\n}\n:host(.tab-selected) {\n  color: var(--color-selected);\n}\n\n:host(.tab-hidden) {\n  /* stylelint-disable-next-line declaration-no-important */\n  display: none !important;\n}\n\n:host(.tab-disabled) {\n  pointer-events: none;\n  opacity: 0.4;\n}\n\n::slotted(ion-label),\n::slotted(ion-icon) {\n  display: block;\n  align-self: center;\n  max-width: 100%;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n  box-sizing: border-box;\n}\n\n::slotted(ion-label) {\n  order: 0;\n}\n\n::slotted(ion-icon) {\n  order: -1;\n  height: 1em;\n}\n\n:host(.tab-has-label-only) ::slotted(ion-label) {\n  white-space: normal;\n}\n\n::slotted(ion-badge) {\n  box-sizing: border-box;\n  position: absolute;\n  z-index: 1;\n}\n\n:host(.tab-layout-icon-start) {\n  flex-direction: row;\n}\n\n:host(.tab-layout-icon-end) {\n  flex-direction: row-reverse;\n}\n\n:host(.tab-layout-icon-bottom) {\n  flex-direction: column-reverse;\n}\n\n:host(.tab-layout-icon-hide) ::slotted(ion-icon) {\n  display: none;\n}\n\n:host(.tab-layout-label-hide) ::slotted(ion-label) {\n  display: none;\n}\n\nion-ripple-effect {\n  color: var(--ripple-color);\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --padding-top: 0;\n  --padding-end: 12px;\n  --padding-bottom: 0;\n  --padding-start: 12px;\n  max-width: 168px;\n  font-size: 12px;\n  font-weight: normal;\n  letter-spacing: 0.03em;\n}\n\n::slotted(ion-label) {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 2px;\n  margin-bottom: 2px;\n  text-transform: none;\n}\n\n::slotted(ion-icon) {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 16px;\n  margin-bottom: 16px;\n  transform-origin: center center;\n  font-size: 22px;\n}\n:host-context([dir=rtl]) ::slotted(ion-icon) {\n  transform-origin: calc(100% - center) center;\n}\n\n[dir=rtl] ::slotted(ion-icon) {\n  transform-origin: calc(100% - center) center;\n}\n\n@supports selector(:dir(rtl)) {\n  ::slotted(ion-icon):dir(rtl) {\n    transform-origin: calc(100% - center) center;\n  }\n}\n\n::slotted(ion-badge) {\n  border-radius: 8px;\n  -webkit-padding-start: 2px;\n  padding-inline-start: 2px;\n  -webkit-padding-end: 2px;\n  padding-inline-end: 2px;\n  padding-top: 3px;\n  padding-bottom: 2px;\n  top: 8px;\n  min-width: 12px;\n  font-size: 8px;\n  font-weight: normal;\n}\n::slotted(ion-badge) {\n  inset-inline-start: calc(50% + 6px);\n}\n\n::slotted(ion-badge:empty) {\n  display: block;\n  min-width: 8px;\n  height: 8px;\n}\n\n:host(.tab-layout-icon-top) ::slotted(ion-icon) {\n  margin-top: 6px;\n  margin-bottom: 2px;\n}\n\n:host(.tab-layout-icon-top) ::slotted(ion-label) {\n  margin-top: 0;\n  margin-bottom: 6px;\n}\n\n:host(.tab-layout-icon-bottom) ::slotted(ion-badge) {\n  top: 8px;\n}\n:host(.tab-layout-icon-bottom) ::slotted(ion-badge) {\n  inset-inline-start: 70%;\n}\n\n:host(.tab-layout-icon-bottom) ::slotted(ion-icon) {\n  margin-top: 0;\n  margin-bottom: 6px;\n}\n\n:host(.tab-layout-icon-bottom) ::slotted(ion-label) {\n  margin-top: 6px;\n  margin-bottom: 0;\n}\n\n:host(.tab-layout-icon-start) ::slotted(ion-badge),\n:host(.tab-layout-icon-end) ::slotted(ion-badge) {\n  top: 16px;\n}\n:host(.tab-layout-icon-start) ::slotted(ion-badge),\n:host(.tab-layout-icon-end) ::slotted(ion-badge) {\n  inset-inline-start: 80%;\n}\n\n:host(.tab-layout-icon-start) ::slotted(ion-icon) {\n  -webkit-margin-end: 6px;\n  margin-inline-end: 6px;\n}\n\n:host(.tab-layout-icon-end) ::slotted(ion-icon) {\n  -webkit-margin-start: 6px;\n  margin-inline-start: 6px;\n}\n\n:host(.tab-layout-icon-hide) ::slotted(ion-badge),\n:host(.tab-has-label-only) ::slotted(ion-badge) {\n  top: 16px;\n}\n:host(.tab-layout-icon-hide) ::slotted(ion-badge),\n:host(.tab-has-label-only) ::slotted(ion-badge) {\n  inset-inline-start: 70%;\n}\n\n:host(.tab-layout-icon-hide) ::slotted(ion-label),\n:host(.tab-has-label-only) ::slotted(ion-label) {\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n:host(.tab-layout-label-hide) ::slotted(ion-badge),\n:host(.tab-has-icon-only) ::slotted(ion-badge) {\n  top: 16px;\n}\n\n:host(.tab-layout-label-hide) ::slotted(ion-icon),\n:host(.tab-has-icon-only) ::slotted(ion-icon) {\n  margin-top: 0;\n  margin-bottom: 0;\n  font-size: 24px;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { inheritAttributes } from \"../../utils/helpers\";\nimport { config } from \"../../global/config\";\nimport { getIonMode } from \"../../global/ionic-global\";\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n *\n * @part native - The native HTML anchor element that wraps all child elements.\n */\nexport class TabButton {\n    constructor() {\n        this.inheritedAttributes = {};\n        this.onKeyUp = (ev) => {\n            if (ev.key === 'Enter' || ev.key === ' ') {\n                this.selectTab(ev);\n            }\n        };\n        this.onClick = (ev) => {\n            this.selectTab(ev);\n        };\n        this.disabled = false;\n        this.download = undefined;\n        this.href = undefined;\n        this.rel = undefined;\n        this.layout = undefined;\n        this.selected = false;\n        this.tab = undefined;\n        this.target = undefined;\n    }\n    onTabBarChanged(ev) {\n        const dispatchedFrom = ev.target;\n        const parent = this.el.parentElement;\n        if (ev.composedPath().includes(parent) || (dispatchedFrom === null || dispatchedFrom === void 0 ? void 0 : dispatchedFrom.contains(this.el))) {\n            this.selected = this.tab === ev.detail.tab;\n        }\n    }\n    componentWillLoad() {\n        this.inheritedAttributes = Object.assign({}, inheritAttributes(this.el, ['aria-label']));\n        if (this.layout === undefined) {\n            this.layout = config.get('tabButtonLayout', 'icon-top');\n        }\n    }\n    selectTab(ev) {\n        if (this.tab !== undefined) {\n            if (!this.disabled) {\n                this.ionTabButtonClick.emit({\n                    tab: this.tab,\n                    href: this.href,\n                    selected: this.selected,\n                });\n            }\n            ev.preventDefault();\n        }\n    }\n    get hasLabel() {\n        return !!this.el.querySelector('ion-label');\n    }\n    get hasIcon() {\n        return !!this.el.querySelector('ion-icon');\n    }\n    render() {\n        const { disabled, hasIcon, hasLabel, href, rel, target, layout, selected, tab, inheritedAttributes } = this;\n        const mode = getIonMode(this);\n        const attrs = {\n            download: this.download,\n            href,\n            rel,\n            target,\n        };\n        return (h(Host, { key: '092250aa4c247411c4717bf3871bdd7a47b7177f', onClick: this.onClick, onKeyup: this.onKeyUp, id: tab !== undefined ? `tab-button-${tab}` : null, class: {\n                [mode]: true,\n                'tab-selected': selected,\n                'tab-disabled': disabled,\n                'tab-has-label': hasLabel,\n                'tab-has-icon': hasIcon,\n                'tab-has-label-only': hasLabel && !hasIcon,\n                'tab-has-icon-only': hasIcon && !hasLabel,\n                [`tab-layout-${layout}`]: true,\n                'ion-activatable': true,\n                'ion-selectable': true,\n                'ion-focusable': true,\n            } }, h(\"a\", Object.assign({ key: '0414e9284005ce34ad69c4858f1b30aff00beb86' }, attrs, { class: \"button-native\", part: \"native\", role: \"tab\", \"aria-selected\": selected ? 'true' : null, \"aria-disabled\": disabled ? 'true' : null, tabindex: disabled ? '-1' : undefined }, inheritedAttributes), h(\"span\", { key: 'df97b6b56fb86507d40e68caa49f888ee29f8da4', class: \"button-inner\" }, h(\"slot\", { key: '715c209dd0cd61ac37b2813815014c685b7a92bc' })), mode === 'md' && h(\"ion-ripple-effect\", { key: 'e6894153a563f63f4f7d84f2703cef0f7522d435', type: \"unbounded\" }))));\n    }\n    static get is() { return \"ion-tab-button\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"tab-button.ios.scss\"],\n            \"md\": [\"tab-button.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"tab-button.ios.css\"],\n            \"md\": [\"tab-button.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"disabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the user cannot interact with the tab button.\"\n                },\n                \"attribute\": \"disabled\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"download\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | undefined\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"This attribute instructs browsers to download a URL instead of navigating to\\nit, so the user will be prompted to save it as a local file. If the attribute\\nhas a value, it is used as the pre-filled file name in the Save prompt\\n(the user can still change the file name if they want).\"\n                },\n                \"attribute\": \"download\",\n                \"reflect\": false\n            },\n            \"href\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | undefined\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Contains a URL or a URL fragment that the hyperlink points to.\\nIf this property is set, an anchor tag will be rendered.\"\n                },\n                \"attribute\": \"href\",\n                \"reflect\": false\n            },\n            \"rel\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | undefined\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the relationship of the target object to the link object.\\nThe value is a space-separated list of [link types](https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types).\"\n                },\n                \"attribute\": \"rel\",\n                \"reflect\": false\n            },\n            \"layout\": {\n                \"type\": \"string\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"TabButtonLayout\",\n                    \"resolved\": \"\\\"icon-bottom\\\" | \\\"icon-end\\\" | \\\"icon-hide\\\" | \\\"icon-start\\\" | \\\"icon-top\\\" | \\\"label-hide\\\" | undefined\",\n                    \"references\": {\n                        \"TabButtonLayout\": {\n                            \"location\": \"import\",\n                            \"path\": \"../tab-bar/tab-bar-interface\",\n                            \"id\": \"src/components/tab-bar/tab-bar-interface.ts::TabButtonLayout\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Set the layout of the text and icon in the tab bar.\\nIt defaults to `\\\"icon-top\\\"`.\"\n                },\n                \"attribute\": \"layout\",\n                \"reflect\": false\n            },\n            \"selected\": {\n                \"type\": \"boolean\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The selected tab component\"\n                },\n                \"attribute\": \"selected\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"tab\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"A tab id must be provided for each `ion-tab`. It's used internally to reference\\nthe selected tab or by the router to switch between them.\"\n                },\n                \"attribute\": \"tab\",\n                \"reflect\": false\n            },\n            \"target\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | undefined\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies where to display the linked URL.\\nOnly applies when an `href` is provided.\\nSpecial keywords: `\\\"_blank\\\"`, `\\\"_self\\\"`, `\\\"_parent\\\"`, `\\\"_top\\\"`.\"\n                },\n                \"attribute\": \"target\",\n                \"reflect\": false\n            }\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"ionTabButtonClick\",\n                \"name\": \"ionTabButtonClick\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Emitted when the tab bar is clicked\"\n                },\n                \"complexType\": {\n                    \"original\": \"TabButtonClickEventDetail\",\n                    \"resolved\": \"TabButtonClickEventDetail\",\n                    \"references\": {\n                        \"TabButtonClickEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../tab-bar/tab-bar-interface\",\n                            \"id\": \"src/components/tab-bar/tab-bar-interface.ts::TabButtonClickEventDetail\"\n                        }\n                    }\n                }\n            }];\n    }\n    static get elementRef() { return \"el\"; }\n    static get listeners() {\n        return [{\n                \"name\": \"ionTabBarChanged\",\n                \"method\": \"onTabBarChanged\",\n                \"target\": \"window\",\n                \"capture\": false,\n                \"passive\": false\n            }];\n    }\n}\n"],"version":3}