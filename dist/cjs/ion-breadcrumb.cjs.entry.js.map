{"file":"ion-breadcrumb.entry.cjs.js","mappings":"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","names":["inheritAriaAttributes","getIonMode","h","Host","openURL","createColorClasses","hostContext","ellipsisHorizontal","chevronForwardOutline"],"sources":["node_modules/@ionic/core/dist/collection/components/breadcrumb/breadcrumb.ios.css?tag=ion-breadcrumb&mode=ios&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/breadcrumb/breadcrumb.md.css?tag=ion-breadcrumb&mode=md&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/breadcrumb/breadcrumb.js"],"sourcesContent":["/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n    * @prop --color: Text color of the breadcrumb\n    * @prop --color-active: Text color of the active breadcrumb\n    * @prop --color-hover: Text color of the breadcrumb on hover\n    * @prop --color-focused: Text color of the breadcrumb when focused\n    * @prop --background-focused: Background color of the breadcrumb when focused\n    */\n  display: flex;\n  flex: 0 0 auto;\n  align-items: center;\n  color: var(--color);\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 1.5;\n}\n\n.breadcrumb-native {\n  font-family: inherit;\n  font-size: inherit;\n  font-style: inherit;\n  font-weight: inherit;\n  letter-spacing: inherit;\n  text-decoration: inherit;\n  text-indent: inherit;\n  text-overflow: inherit;\n  text-transform: inherit;\n  text-align: inherit;\n  white-space: inherit;\n  color: inherit;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  outline: none;\n  background: inherit;\n}\n\n:host(.breadcrumb-disabled) {\n  cursor: default;\n  opacity: 0.5;\n  pointer-events: none;\n}\n\n:host(.breadcrumb-active) {\n  color: var(--color-active);\n}\n\n:host(.ion-focused) {\n  color: var(--color-focused);\n}\n\n:host(.ion-focused) .breadcrumb-native {\n  background: var(--background-focused);\n}\n\n@media (any-hover: hover) {\n  :host(.ion-activatable:hover) {\n    color: var(--color-hover);\n  }\n  :host(.ion-activatable.in-breadcrumbs-color:hover),\n  :host(.ion-activatable.ion-color:hover) {\n    color: var(--ion-color-shade);\n  }\n}\n.breadcrumb-separator {\n  display: inline-flex;\n}\n\n:host(.breadcrumb-collapsed) .breadcrumb-native {\n  display: none;\n}\n\n:host(.in-breadcrumbs-color),\n:host(.in-breadcrumbs-color.breadcrumb-active) {\n  color: var(--ion-color-base);\n}\n\n:host(.in-breadcrumbs-color) .breadcrumb-separator {\n  color: var(--ion-color-base);\n}\n\n:host(.ion-color) {\n  color: var(--ion-color-base);\n}\n\n:host(.in-toolbar-color),\n:host(.in-toolbar-color) .breadcrumb-separator {\n  color: rgba(var(--ion-color-contrast-rgb), 0.8);\n}\n\n:host(.in-toolbar-color.breadcrumb-active) {\n  color: var(--ion-color-contrast);\n}\n\n.breadcrumbs-collapsed-indicator {\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  -webkit-margin-start: 14px;\n  margin-inline-start: 14px;\n  -webkit-margin-end: 14px;\n  margin-inline-end: 14px;\n  margin-top: 0;\n  margin-bottom: 0;\n  display: flex;\n  flex: 1 1 100%;\n  align-items: center;\n  justify-content: center;\n  width: 32px;\n  height: 18px;\n  border: 0;\n  outline: none;\n  cursor: pointer;\n  appearance: none;\n}\n\n.breadcrumbs-collapsed-indicator ion-icon {\n  margin-top: 1px;\n  font-size: 1.375rem;\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --color: var(--ion-color-step-850, var(--ion-text-color-step-150, #2d4665));\n  --color-active: var(--ion-text-color, #03060b);\n  --color-hover: var(--ion-text-color, #03060b);\n  --color-focused: var(--color-active);\n  --background-focused: var(--ion-color-step-50, var(--ion-background-color-step-50, rgba(233, 237, 243, 0.7)));\n  /**\n   * Main content should be prioritized\n   * on iOS, so we set max font size for breadcrumbs.\n   * Breadcrumbs can be placed in the content too, so\n   * we add a min font size to keep the text legible.\n   */\n  font-size: clamp(16px, 1rem, 22px);\n}\n\n:host(.breadcrumb-active) {\n  font-weight: 600;\n}\n\n.breadcrumb-native {\n  border-radius: 4px;\n  -webkit-padding-start: 12px;\n  padding-inline-start: 12px;\n  -webkit-padding-end: 12px;\n  padding-inline-end: 12px;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  border: 1px solid transparent;\n}\n\n:host(.ion-focused) .breadcrumb-native {\n  border-radius: 8px;\n}\n\n:host(.in-breadcrumbs-color.ion-focused) .breadcrumb-native,\n:host(.ion-color.ion-focused) .breadcrumb-native {\n  background: rgba(var(--ion-color-base-rgb), 0.1);\n  color: var(--ion-color-base);\n}\n\n:host(.ion-focused) ::slotted(ion-icon),\n:host(.in-breadcrumbs-color.ion-focused) ::slotted(ion-icon),\n:host(.ion-color.ion-focused) ::slotted(ion-icon) {\n  color: var(--ion-color-step-750, var(--ion-text-color-step-250, #445b78));\n}\n\n.breadcrumb-separator {\n  color: var(--ion-color-step-550, var(--ion-text-color-step-450, #73849a));\n}\n\n::slotted(ion-icon) {\n  color: var(--ion-color-step-400, var(--ion-text-color-step-600, #92a0b3));\n  font-size: min(1.125rem, 21.6px);\n}\n\n::slotted(ion-icon[slot=start]) {\n  -webkit-margin-end: 8px;\n  margin-inline-end: 8px;\n}\n\n::slotted(ion-icon[slot=end]) {\n  -webkit-margin-start: 8px;\n  margin-inline-start: 8px;\n}\n\n:host(.breadcrumb-active) ::slotted(ion-icon) {\n  color: var(--ion-color-step-850, var(--ion-text-color-step-150, #242d39));\n}\n\n.breadcrumbs-collapsed-indicator {\n  border-radius: 4px;\n  background: var(--ion-color-step-100, var(--ion-background-color-step-100, #e9edf3));\n  color: var(--ion-color-step-550, var(--ion-text-color-step-450, #73849a));\n}\n\n.breadcrumbs-collapsed-indicator:hover {\n  opacity: 0.45;\n}\n\n.breadcrumbs-collapsed-indicator:focus {\n  background: var(--ion-color-step-150, var(--ion-background-color-step-150, #d9e0ea));\n}\n\n.breadcrumbs-collapsed-indicator ion-icon {\n  font-size: min(1.375rem, 22px);\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n    * @prop --color: Text color of the breadcrumb\n    * @prop --color-active: Text color of the active breadcrumb\n    * @prop --color-hover: Text color of the breadcrumb on hover\n    * @prop --color-focused: Text color of the breadcrumb when focused\n    * @prop --background-focused: Background color of the breadcrumb when focused\n    */\n  display: flex;\n  flex: 0 0 auto;\n  align-items: center;\n  color: var(--color);\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 1.5;\n}\n\n.breadcrumb-native {\n  font-family: inherit;\n  font-size: inherit;\n  font-style: inherit;\n  font-weight: inherit;\n  letter-spacing: inherit;\n  text-decoration: inherit;\n  text-indent: inherit;\n  text-overflow: inherit;\n  text-transform: inherit;\n  text-align: inherit;\n  white-space: inherit;\n  color: inherit;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  outline: none;\n  background: inherit;\n}\n\n:host(.breadcrumb-disabled) {\n  cursor: default;\n  opacity: 0.5;\n  pointer-events: none;\n}\n\n:host(.breadcrumb-active) {\n  color: var(--color-active);\n}\n\n:host(.ion-focused) {\n  color: var(--color-focused);\n}\n\n:host(.ion-focused) .breadcrumb-native {\n  background: var(--background-focused);\n}\n\n@media (any-hover: hover) {\n  :host(.ion-activatable:hover) {\n    color: var(--color-hover);\n  }\n  :host(.ion-activatable.in-breadcrumbs-color:hover),\n  :host(.ion-activatable.ion-color:hover) {\n    color: var(--ion-color-shade);\n  }\n}\n.breadcrumb-separator {\n  display: inline-flex;\n}\n\n:host(.breadcrumb-collapsed) .breadcrumb-native {\n  display: none;\n}\n\n:host(.in-breadcrumbs-color),\n:host(.in-breadcrumbs-color.breadcrumb-active) {\n  color: var(--ion-color-base);\n}\n\n:host(.in-breadcrumbs-color) .breadcrumb-separator {\n  color: var(--ion-color-base);\n}\n\n:host(.ion-color) {\n  color: var(--ion-color-base);\n}\n\n:host(.in-toolbar-color),\n:host(.in-toolbar-color) .breadcrumb-separator {\n  color: rgba(var(--ion-color-contrast-rgb), 0.8);\n}\n\n:host(.in-toolbar-color.breadcrumb-active) {\n  color: var(--ion-color-contrast);\n}\n\n.breadcrumbs-collapsed-indicator {\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  -webkit-margin-start: 14px;\n  margin-inline-start: 14px;\n  -webkit-margin-end: 14px;\n  margin-inline-end: 14px;\n  margin-top: 0;\n  margin-bottom: 0;\n  display: flex;\n  flex: 1 1 100%;\n  align-items: center;\n  justify-content: center;\n  width: 32px;\n  height: 18px;\n  border: 0;\n  outline: none;\n  cursor: pointer;\n  appearance: none;\n}\n\n.breadcrumbs-collapsed-indicator ion-icon {\n  margin-top: 1px;\n  font-size: 1.375rem;\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --color: var(--ion-color-step-600, var(--ion-text-color-step-400, #677483));\n  --color-active: var(--ion-text-color, #03060b);\n  --color-hover: var(--ion-text-color, #03060b);\n  --color-focused: var(--ion-color-step-800, var(--ion-text-color-step-200, #35404e));\n  --background-focused: var(--ion-color-step-50, var(--ion-background-color-step-50, #fff));\n}\n\n:host(.breadcrumb-active) {\n  font-weight: 500;\n}\n\n.breadcrumb-native {\n  -webkit-padding-start: 12px;\n  padding-inline-start: 12px;\n  -webkit-padding-end: 12px;\n  padding-inline-end: 12px;\n  padding-top: 6px;\n  padding-bottom: 6px;\n}\n\n.breadcrumb-separator {\n  -webkit-margin-start: 10px;\n  margin-inline-start: 10px;\n  -webkit-margin-end: 10px;\n  margin-inline-end: 10px;\n  margin-top: -1px;\n}\n\n:host(.ion-focused) .breadcrumb-native {\n  border-radius: 4px;\n  box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.2), 0px 2px 8px rgba(0, 0, 0, 0.12);\n}\n\n.breadcrumb-separator {\n  color: var(--ion-color-step-550, var(--ion-text-color-step-450, #73849a));\n}\n\n::slotted(ion-icon) {\n  color: var(--ion-color-step-550, var(--ion-text-color-step-450, #7d8894));\n  font-size: 1.125rem;\n}\n\n::slotted(ion-icon[slot=start]) {\n  -webkit-margin-end: 8px;\n  margin-inline-end: 8px;\n}\n\n::slotted(ion-icon[slot=end]) {\n  -webkit-margin-start: 8px;\n  margin-inline-start: 8px;\n}\n\n:host(.breadcrumb-active) ::slotted(ion-icon) {\n  color: var(--ion-color-step-850, var(--ion-text-color-step-150, #222d3a));\n}\n\n.breadcrumbs-collapsed-indicator {\n  border-radius: 2px;\n  background: var(--ion-color-step-100, var(--ion-background-color-step-100, #eef1f3));\n  color: var(--ion-color-step-550, var(--ion-text-color-step-450, #73849a));\n}\n\n.breadcrumbs-collapsed-indicator:hover {\n  opacity: 0.7;\n}\n\n.breadcrumbs-collapsed-indicator:focus {\n  background: var(--ion-color-step-150, var(--ion-background-color-step-150, #dfe5e8));\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { inheritAriaAttributes } from \"../../utils/helpers\";\nimport { createColorClasses, hostContext, openURL } from \"../../utils/theme\";\nimport { chevronForwardOutline, ellipsisHorizontal } from \"ionicons/icons\";\nimport { getIonMode } from \"../../global/ionic-global\";\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n *\n * @part native - The native HTML anchor or div element that wraps all child elements.\n * @part separator - The separator element between each breadcrumb.\n * @part collapsed-indicator - The indicator element that shows the breadcrumbs are collapsed.\n */\nexport class Breadcrumb {\n    constructor() {\n        this.inheritedAttributes = {};\n        this.onFocus = () => {\n            this.ionFocus.emit();\n        };\n        this.onBlur = () => {\n            this.ionBlur.emit();\n        };\n        this.collapsedIndicatorClick = () => {\n            this.collapsedClick.emit({ ionShadowTarget: this.collapsedRef });\n        };\n        this.collapsed = false;\n        this.last = undefined;\n        this.showCollapsedIndicator = undefined;\n        this.color = undefined;\n        this.active = false;\n        this.disabled = false;\n        this.download = undefined;\n        this.href = undefined;\n        this.rel = undefined;\n        this.separator = undefined;\n        this.target = undefined;\n        this.routerDirection = 'forward';\n        this.routerAnimation = undefined;\n    }\n    componentWillLoad() {\n        this.inheritedAttributes = inheritAriaAttributes(this.el);\n    }\n    isClickable() {\n        return this.href !== undefined;\n    }\n    render() {\n        const { color, active, collapsed, disabled, download, el, inheritedAttributes, last, routerAnimation, routerDirection, separator, showCollapsedIndicator, target, } = this;\n        const clickable = this.isClickable();\n        const TagType = this.href === undefined ? 'span' : 'a';\n        // Links can still be tabbed to when set to disabled if they have an href\n        // in order to truly disable them we can keep it as an anchor but remove the href\n        const href = disabled ? undefined : this.href;\n        const mode = getIonMode(this);\n        const attrs = TagType === 'span'\n            ? {}\n            : {\n                download,\n                href,\n                target,\n            };\n        // If the breadcrumb is collapsed, check if it contains the collapsed indicator\n        // to show the separator as long as it isn't also the last breadcrumb\n        // otherwise if not collapsed use the value in separator\n        const showSeparator = last ? false : collapsed ? (showCollapsedIndicator && !last ? true : false) : separator;\n        return (h(Host, { key: 'dfe55ad57f23e5da5f2e2c51fea99964812472e3', onClick: (ev) => openURL(href, ev, routerDirection, routerAnimation), \"aria-disabled\": disabled ? 'true' : null, class: createColorClasses(color, {\n                [mode]: true,\n                'breadcrumb-active': active,\n                'breadcrumb-collapsed': collapsed,\n                'breadcrumb-disabled': disabled,\n                'in-breadcrumbs-color': hostContext('ion-breadcrumbs[color]', el),\n                'in-toolbar': hostContext('ion-toolbar', this.el),\n                'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\n                'ion-activatable': clickable,\n                'ion-focusable': clickable,\n            }) }, h(TagType, Object.assign({ key: 'e361b1f0e7de6dd5c5dd4f6deae72c2c8210466d' }, attrs, { class: \"breadcrumb-native\", part: \"native\", disabled: disabled, onFocus: this.onFocus, onBlur: this.onBlur }, inheritedAttributes), h(\"slot\", { key: '9daeb45a8a28c89f3ad5751f71b8412197846371', name: \"start\" }), h(\"slot\", { key: '4849e63cdffd6c712292745138b68730442c8b0d' }), h(\"slot\", { key: '6edf9bac5aec06ccec2844efac2d9afa1d24cf57', name: \"end\" })), showCollapsedIndicator && (h(\"button\", { key: 'de7f5faea75b44011b289d259265e2435a65874f', part: \"collapsed-indicator\", \"aria-label\": \"Show more breadcrumbs\", onClick: () => this.collapsedIndicatorClick(), ref: (collapsedEl) => (this.collapsedRef = collapsedEl), class: {\n                'breadcrumbs-collapsed-indicator': true,\n            } }, h(\"ion-icon\", { key: '957d8851af9c99dda263f34eff0b35a0fc212c32', \"aria-hidden\": \"true\", icon: ellipsisHorizontal, lazy: false }))), showSeparator && (\n        /**\n         * Separators should not be announced by narrators.\n         * We add aria-hidden on the span so that this applies\n         * to any custom separators too.\n         */\n        h(\"span\", { key: '97d646c37c4c41ad6b12c3a543d1146fde06fc9a', class: \"breadcrumb-separator\", part: \"separator\", \"aria-hidden\": \"true\" }, h(\"slot\", { key: '0429f671a986f2d7be1b1b69fc879e80806d2916', name: \"separator\" }, mode === 'ios' ? (h(\"ion-icon\", { icon: chevronForwardOutline, lazy: false, \"flip-rtl\": true })) : (h(\"span\", null, \"/\")))))));\n    }\n    static get is() { return \"ion-breadcrumb\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"breadcrumb.ios.scss\"],\n            \"md\": [\"breadcrumb.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"breadcrumb.ios.css\"],\n            \"md\": [\"breadcrumb.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"collapsed\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                },\n                \"attribute\": \"collapsed\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"last\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": true,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                },\n                \"attribute\": \"last\",\n                \"reflect\": false\n            },\n            \"showCollapsedIndicator\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": true,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                },\n                \"attribute\": \"show-collapsed-indicator\",\n                \"reflect\": false\n            },\n            \"color\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Color\",\n                    \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never> | undefined\",\n                    \"references\": {\n                        \"Color\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::Color\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The color to use from your application's color palette.\\nDefault options are: `\\\"primary\\\"`, `\\\"secondary\\\"`, `\\\"tertiary\\\"`, `\\\"success\\\"`, `\\\"warning\\\"`, `\\\"danger\\\"`, `\\\"light\\\"`, `\\\"medium\\\"`, and `\\\"dark\\\"`.\\nFor more information on colors, see [theming](/docs/theming/basics).\"\n                },\n                \"attribute\": \"color\",\n                \"reflect\": false\n            },\n            \"active\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the breadcrumb will take on a different look to show that\\nit is the currently active breadcrumb. Defaults to `true` for the\\nlast breadcrumb if it is not set on any.\"\n                },\n                \"attribute\": \"active\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"disabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the user cannot interact with the breadcrumb.\"\n                },\n                \"attribute\": \"disabled\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"download\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | undefined\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"This attribute instructs browsers to download a URL instead of navigating to\\nit, so the user will be prompted to save it as a local file. If the attribute\\nhas a value, it is used as the pre-filled file name in the Save prompt\\n(the user can still change the file name if they want).\"\n                },\n                \"attribute\": \"download\",\n                \"reflect\": false\n            },\n            \"href\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | undefined\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Contains a URL or a URL fragment that the hyperlink points to.\\nIf this property is set, an anchor tag will be rendered.\"\n                },\n                \"attribute\": \"href\",\n                \"reflect\": false\n            },\n            \"rel\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | undefined\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the relationship of the target object to the link object.\\nThe value is a space-separated list of [link types](https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types).\"\n                },\n                \"attribute\": \"rel\",\n                \"reflect\": false\n            },\n            \"separator\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean | undefined\",\n                    \"resolved\": \"boolean | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If true, show a separator between this breadcrumb and the next.\\nDefaults to `true` for all breadcrumbs except the last.\"\n                },\n                \"attribute\": \"separator\",\n                \"reflect\": false\n            },\n            \"target\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | undefined\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies where to display the linked URL.\\nOnly applies when an `href` is provided.\\nSpecial keywords: `\\\"_blank\\\"`, `\\\"_self\\\"`, `\\\"_parent\\\"`, `\\\"_top\\\"`.\"\n                },\n                \"attribute\": \"target\",\n                \"reflect\": false\n            },\n            \"routerDirection\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"RouterDirection\",\n                    \"resolved\": \"\\\"back\\\" | \\\"forward\\\" | \\\"root\\\"\",\n                    \"references\": {\n                        \"RouterDirection\": {\n                            \"location\": \"import\",\n                            \"path\": \"../router/utils/interface\",\n                            \"id\": \"src/components/router/utils/interface.ts::RouterDirection\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When using a router, it specifies the transition direction when navigating to\\nanother page using `href`.\"\n                },\n                \"attribute\": \"router-direction\",\n                \"reflect\": false,\n                \"defaultValue\": \"'forward'\"\n            },\n            \"routerAnimation\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"AnimationBuilder | undefined\",\n                    \"resolved\": \"((baseEl: any, opts?: any) => Animation) | undefined\",\n                    \"references\": {\n                        \"AnimationBuilder\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::AnimationBuilder\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When using a router, it specifies the transition animation when navigating to\\nanother page using `href`.\"\n                }\n            }\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"ionFocus\",\n                \"name\": \"ionFocus\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the breadcrumb has focus.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"ionBlur\",\n                \"name\": \"ionBlur\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the breadcrumb loses focus.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"collapsedClick\",\n                \"name\": \"collapsedClick\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Emitted when the collapsed indicator is clicked on.\\n`ion-breadcrumbs` will listen for this and emit ionCollapsedClick.\\nNormally we could just emit this as `ionCollapsedClick`\\nand let the event bubble to `ion-breadcrumbs`,\\nbut if the event custom event is not set on `ion-breadcrumbs`,\\nTypeScript will throw an error in user applications.\"\n                },\n                \"complexType\": {\n                    \"original\": \"BreadcrumbCollapsedClickEventDetail\",\n                    \"resolved\": \"BreadcrumbCollapsedClickEventDetail\",\n                    \"references\": {\n                        \"BreadcrumbCollapsedClickEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"./breadcrumb-interface\",\n                            \"id\": \"src/components/breadcrumb/breadcrumb-interface.ts::BreadcrumbCollapsedClickEventDetail\"\n                        }\n                    }\n                }\n            }];\n    }\n    static get elementRef() { return \"el\"; }\n}\n"],"version":3}