{"version":3,"names":["watchForOptions","containerEl","tagName","onChange","MutationObserver","mutation","mutationList","getSelectedOption","observe","childList","subtree","newOption","forEach","mut","i","addedNodes","length","findCheckedOption","node","nodeType","undefined","el","options","toUpperCase","Array","from","querySelectorAll","find","o","value"],"sources":["node_modules/@ionic/core/dist/collection/utils/watch-options.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nexport const watchForOptions = (containerEl, tagName, onChange) => {\n    if (typeof MutationObserver === 'undefined') {\n        return;\n    }\n    const mutation = new MutationObserver((mutationList) => {\n        onChange(getSelectedOption(mutationList, tagName));\n    });\n    mutation.observe(containerEl, {\n        childList: true,\n        subtree: true,\n    });\n    return mutation;\n};\nconst getSelectedOption = (mutationList, tagName) => {\n    let newOption;\n    mutationList.forEach((mut) => {\n        // eslint-disable-next-line @typescript-eslint/prefer-for-of\n        for (let i = 0; i < mut.addedNodes.length; i++) {\n            newOption = findCheckedOption(mut.addedNodes[i], tagName) || newOption;\n        }\n    });\n    return newOption;\n};\n/**\n * The \"value\" key is only set on some components such as ion-select-option.\n * As a result, we create a default union type of HTMLElement and the \"value\" key.\n * However, implementers are required to provide the appropriate component type\n * such as HTMLIonSelectOptionElement.\n */\nexport const findCheckedOption = (node, tagName) => {\n    /**\n     * https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\n     * The above check ensures \"node\" is an Element (nodeType 1).\n     */\n    if (node.nodeType !== 1) {\n        return undefined;\n    }\n    // HTMLElement inherits from Element, so we cast \"el\" as T.\n    const el = node;\n    const options = el.tagName === tagName.toUpperCase() ? [el] : Array.from(el.querySelectorAll(tagName));\n    return options.find((o) => o.value === el.value);\n};\n"],"mappings":";;;AAGY,MAACA,EAAkB,CAACC,EAAaC,EAASC,KAClD,UAAWC,mBAAqB,YAAa,CACzC,MACR,CACI,MAAMC,EAAW,IAAID,kBAAkBE,IACnCH,EAASI,EAAkBD,EAAcJ,GAAS,IAEtDG,EAASG,QAAQP,EAAa,CAC1BQ,UAAW,KACXC,QAAS,OAEb,OAAOL,CAAQ,EAEnB,MAAME,EAAoB,CAACD,EAAcJ,KACrC,IAAIS,EACJL,EAAaM,SAASC,IAElB,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAIE,WAAWC,OAAQF,IAAK,CAC5CH,EAAYM,EAAkBJ,EAAIE,WAAWD,GAAIZ,IAAYS,CACzE,KAEI,OAAOA,CAAS,EAQb,MAAMM,EAAoB,CAACC,EAAMhB,KAKpC,GAAIgB,EAAKC,WAAa,EAAG,CACrB,OAAOC,SACf,CAEI,MAAMC,EAAKH,EACX,MAAMI,EAAUD,EAAGnB,UAAYA,EAAQqB,cAAgB,CAACF,GAAMG,MAAMC,KAAKJ,EAAGK,iBAAiBxB,IAC7F,OAAOoB,EAAQK,MAAMC,GAAMA,EAAEC,QAAUR,EAAGQ,OAAM,S"}