{"version":3,"names":["createButtonActiveGesture","el","isButton","currentTouchedButton","initialTouchedButton","activateButtonAtPoint","x","y","hapticFeedbackFn","document","target","elementFromPoint","disabled","clearActiveButton","setActiveButton","button","buttonToModify","writeTask","classList","add","dispatchClick","remove","click","undefined","createGesture","gestureName","threshold","onStart","ev","currentX","currentY","hapticSelectionStart","onMove","hapticSelectionChanged","onEnd","hapticSelectionEnd","iosEnterAnimation","baseEl","baseAnimation","createAnimation","backdropAnimation","wrapperAnimation","addElement","querySelector","fromTo","beforeStyles","afterClearStyles","easing","duration","addAnimation","iosLeaveAnimation","mdEnterAnimation","mdLeaveAnimation","actionSheetIosCss","IonActionSheetIosStyle0","actionSheetMdCss","IonActionSheetMdStyle0","ActionSheet","constructor","hostRef","this","delegateController","createDelegateController","lockController","createLockController","triggerController","createTriggerController","presented","onBackdropTap","dismiss","BACKDROP","dispatchCancelHandler","role","detail","isCancel","cancelButton","getButtons","find","b","callButtonHandler","overlayIndex","delegate","hasController","keyboardClose","enterAnimation","leaveAnimation","buttons","cssClass","backdropDismiss","header","subHeader","translucent","animated","htmlAttributes","isOpen","trigger","onIsOpenChange","newValue","oldValue","present","triggerChanged","addClickListener","unlock","lock","attachViewToDom","data","dismissed","removeViewFromDom","onDidDismiss","eventMethod","onWillDismiss","buttonClick","shouldDismiss","Promise","resolve","rtn","safeCall","handler","map","text","connectedCallback","prepareOverlay","disconnectedCallback","gesture","destroy","removeClickListener","componentWillLoad","setOverlayId","componentDidLoad","groupEl","wrapperEl","getIonMode","readTask","isScrollable","scrollHeight","clientHeight","refEl","contains","enable","raf","render","mode","allButtons","filter","headerID","h","Host","Object","assign","key","tabindex","style","zIndex","class","getClassMap","onIonActionSheetWillDismiss","onIonBackdropTap","tappable","ref","id","type","buttonClass","onClick","icon","lazy","keyframes","offset","opacity","transform","alertIosCss","IonAlertIosStyle0","alertMdCss","IonAlertMdStyle0","Alert","customHTMLEnabled","config","get","ENABLE_HTML_CONTENT_DEFAULT","processedInputs","processedButtons","message","inputs","onKeydown","inputTypes","Set","i","has","preventDefault","query","querySelectorAll","radios","Array","from","radio","index","findIndex","nextEl","includes","length","nextProcessed","input","rbClick","focus","buttonsChanged","btn","toLowerCase","inputsChanged","first","checked","focusable","console","warn","values","join","inputType","next","value","_a","name","placeholder","label","min","max","attributes","selectedInput","activeId","forceUpdate","cbClick","getValues","returnData","checkedInput","forEach","renderAlertInputs","renderCheckbox","renderRadio","renderInput","tabIndex","_b","_c","_d","inputClass","onInput","e","renderAlertButtons","alertButtonGroupClass","renderAlertMessage","msgId","innerHTML","sanitizeDOMString","hdrId","subHdrId","ariaLabelledBy","onIonAlertWillDismiss","toString","selectPopoverIosCss","IonSelectPopoverIosStyle0","selectPopoverMdCss","IonSelectPopoverMdStyle0","SelectPopover","multiple","options","findOptionFromEvent","o","callOptionHandler","option","dismissParentPopover","popover","closest","setChecked","renderOptions","renderCheckboxOptions","renderRadioOptions","justify","labelPlacement","onIonChange","onKeyUp","hasSubHeaderOrMessage"],"sources":["node_modules/@ionic/core/dist/collection/utils/gesture/button-active.js","node_modules/@ionic/core/dist/collection/components/action-sheet/animations/ios.enter.js","node_modules/@ionic/core/dist/collection/components/action-sheet/animations/ios.leave.js","node_modules/@ionic/core/dist/collection/components/action-sheet/animations/md.enter.js","node_modules/@ionic/core/dist/collection/components/action-sheet/animations/md.leave.js","node_modules/@ionic/core/dist/collection/components/action-sheet/action-sheet.ios.css?tag=ion-action-sheet&mode=ios&encapsulation=scoped","node_modules/@ionic/core/dist/collection/components/action-sheet/action-sheet.md.css?tag=ion-action-sheet&mode=md&encapsulation=scoped","node_modules/@ionic/core/dist/collection/components/action-sheet/action-sheet.js","node_modules/@ionic/core/dist/collection/components/alert/animations/ios.enter.js","node_modules/@ionic/core/dist/collection/components/alert/animations/ios.leave.js","node_modules/@ionic/core/dist/collection/components/alert/animations/md.enter.js","node_modules/@ionic/core/dist/collection/components/alert/animations/md.leave.js","node_modules/@ionic/core/dist/collection/components/alert/alert.ios.css?tag=ion-alert&mode=ios&encapsulation=scoped","node_modules/@ionic/core/dist/collection/components/alert/alert.md.css?tag=ion-alert&mode=md&encapsulation=scoped","node_modules/@ionic/core/dist/collection/components/alert/alert.js","node_modules/@ionic/core/dist/collection/components/select-popover/select-popover.ios.css?tag=ion-select-popover&mode=ios&encapsulation=scoped","node_modules/@ionic/core/dist/collection/components/select-popover/select-popover.md.css?tag=ion-select-popover&mode=md&encapsulation=scoped","node_modules/@ionic/core/dist/collection/components/select-popover/select-popover.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { writeTask } from \"@stencil/core\";\nimport { hapticSelectionChanged, hapticSelectionEnd, hapticSelectionStart } from \"../native/haptic\";\nimport { createGesture } from \"./index\";\nexport const createButtonActiveGesture = (el, isButton) => {\n    let currentTouchedButton;\n    let initialTouchedButton;\n    const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\n        if (typeof document === 'undefined') {\n            return;\n        }\n        const target = document.elementFromPoint(x, y);\n        if (!target || !isButton(target) || target.disabled) {\n            clearActiveButton();\n            return;\n        }\n        if (target !== currentTouchedButton) {\n            clearActiveButton();\n            setActiveButton(target, hapticFeedbackFn);\n        }\n    };\n    const setActiveButton = (button, hapticFeedbackFn) => {\n        currentTouchedButton = button;\n        if (!initialTouchedButton) {\n            initialTouchedButton = currentTouchedButton;\n        }\n        const buttonToModify = currentTouchedButton;\n        writeTask(() => buttonToModify.classList.add('ion-activated'));\n        hapticFeedbackFn();\n    };\n    const clearActiveButton = (dispatchClick = false) => {\n        if (!currentTouchedButton) {\n            return;\n        }\n        const buttonToModify = currentTouchedButton;\n        writeTask(() => buttonToModify.classList.remove('ion-activated'));\n        /**\n         * Clicking on one button, but releasing on another button\n         * does not dispatch a click event in browsers, so we\n         * need to do it manually here. Some browsers will\n         * dispatch a click if clicking on one button, dragging over\n         * another button, and releasing on the original button. In that\n         * case, we need to make sure we do not cause a double click there.\n         */\n        if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\n            currentTouchedButton.click();\n        }\n        currentTouchedButton = undefined;\n    };\n    return createGesture({\n        el,\n        gestureName: 'buttonActiveDrag',\n        threshold: 0,\n        onStart: (ev) => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\n        onMove: (ev) => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\n        onEnd: () => {\n            clearActiveButton(true);\n            hapticSelectionEnd();\n            initialTouchedButton = undefined;\n        },\n    });\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { createAnimation } from \"../../../utils/animation/animation\";\n/**\n * iOS Action Sheet Enter Animation\n */\nexport const iosEnterAnimation = (baseEl) => {\n    const baseAnimation = createAnimation();\n    const backdropAnimation = createAnimation();\n    const wrapperAnimation = createAnimation();\n    backdropAnimation\n        .addElement(baseEl.querySelector('ion-backdrop'))\n        .fromTo('opacity', 0.01, 'var(--backdrop-opacity)')\n        .beforeStyles({\n        'pointer-events': 'none',\n    })\n        .afterClearStyles(['pointer-events']);\n    wrapperAnimation\n        .addElement(baseEl.querySelector('.action-sheet-wrapper'))\n        .fromTo('transform', 'translateY(100%)', 'translateY(0%)');\n    return baseAnimation\n        .addElement(baseEl)\n        .easing('cubic-bezier(.36,.66,.04,1)')\n        .duration(400)\n        .addAnimation([backdropAnimation, wrapperAnimation]);\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { createAnimation } from \"../../../utils/animation/animation\";\n/**\n * iOS Action Sheet Leave Animation\n */\nexport const iosLeaveAnimation = (baseEl) => {\n    const baseAnimation = createAnimation();\n    const backdropAnimation = createAnimation();\n    const wrapperAnimation = createAnimation();\n    backdropAnimation.addElement(baseEl.querySelector('ion-backdrop')).fromTo('opacity', 'var(--backdrop-opacity)', 0);\n    wrapperAnimation\n        .addElement(baseEl.querySelector('.action-sheet-wrapper'))\n        .fromTo('transform', 'translateY(0%)', 'translateY(100%)');\n    return baseAnimation\n        .addElement(baseEl)\n        .easing('cubic-bezier(.36,.66,.04,1)')\n        .duration(450)\n        .addAnimation([backdropAnimation, wrapperAnimation]);\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { createAnimation } from \"../../../utils/animation/animation\";\n/**\n * MD Action Sheet Enter Animation\n */\nexport const mdEnterAnimation = (baseEl) => {\n    const baseAnimation = createAnimation();\n    const backdropAnimation = createAnimation();\n    const wrapperAnimation = createAnimation();\n    backdropAnimation\n        .addElement(baseEl.querySelector('ion-backdrop'))\n        .fromTo('opacity', 0.01, 'var(--backdrop-opacity)')\n        .beforeStyles({\n        'pointer-events': 'none',\n    })\n        .afterClearStyles(['pointer-events']);\n    wrapperAnimation\n        .addElement(baseEl.querySelector('.action-sheet-wrapper'))\n        .fromTo('transform', 'translateY(100%)', 'translateY(0%)');\n    return baseAnimation\n        .addElement(baseEl)\n        .easing('cubic-bezier(.36,.66,.04,1)')\n        .duration(400)\n        .addAnimation([backdropAnimation, wrapperAnimation]);\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { createAnimation } from \"../../../utils/animation/animation\";\n/**\n * MD Action Sheet Leave Animation\n */\nexport const mdLeaveAnimation = (baseEl) => {\n    const baseAnimation = createAnimation();\n    const backdropAnimation = createAnimation();\n    const wrapperAnimation = createAnimation();\n    backdropAnimation.addElement(baseEl.querySelector('ion-backdrop')).fromTo('opacity', 'var(--backdrop-opacity)', 0);\n    wrapperAnimation\n        .addElement(baseEl.querySelector('.action-sheet-wrapper'))\n        .fromTo('transform', 'translateY(0%)', 'translateY(100%)');\n    return baseAnimation\n        .addElement(baseEl)\n        .easing('cubic-bezier(.36,.66,.04,1)')\n        .duration(450)\n        .addAnimation([backdropAnimation, wrapperAnimation]);\n};\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the action sheet group\n   * @prop --color: Color of the action sheet text\n   *\n   * @prop --min-width: Minimum width of the action sheet\n   * @prop --width: Width of the action sheet\n   * @prop --max-width: Maximum width of the action sheet\n   *\n   * @prop --min-height: Minimum height of the action sheet\n   * @prop --height: height of the action sheet\n   * @prop --max-height: Maximum height of the action sheet\n   *\n   * @prop --backdrop-opacity: Opacity of the backdrop\n   *\n   * @prop --button-background: Background of the action sheet button\n   * @prop --button-background-activated: Background of the action sheet button when pressed. Note: setting this will interfere with the Material Design ripple.\n   * @prop --button-background-activated-opacity: Opacity of the action sheet button background when pressed\n   * @prop --button-background-hover: Background of the action sheet button on hover\n   * @prop --button-background-hover-opacity: Opacity of the action sheet button background on hover\n   * @prop --button-background-focused: Background of the action sheet button when tabbed to\n   * @prop --button-background-focused-opacity: Opacity of the action sheet button background when tabbed to\n   * @prop --button-background-selected: Background of the selected action sheet button\n   * @prop --button-background-selected-opacity: Opacity of the selected action sheet button background\n   *\n   * @prop --button-color: Color of the action sheet button\n   * @prop --button-color-activated: Color of the action sheet button when pressed\n   * @prop --button-color-hover: Color of the action sheet button on hover\n   * @prop --button-color-focused: Color of the action sheet button when tabbed to\n   * @prop --button-color-selected: Color of the selected action sheet button\n   * @prop --button-color-disabled: Color of the selected action sheet button when disabled\n   */\n  --color: initial;\n  --button-color-activated: var(--button-color);\n  --button-color-focused: var(--button-color);\n  --button-color-hover: var(--button-color);\n  --button-color-selected: var(--button-color);\n  --min-width: auto;\n  --width: 100%;\n  --max-width: 500px;\n  --min-height: auto;\n  --height: auto;\n  --max-height: calc(100% - (var(--ion-safe-area-top) + var(--ion-safe-area-bottom)));\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: block;\n  position: fixed;\n  outline: none;\n  font-family: var(--ion-font-family, inherit);\n  touch-action: none;\n  user-select: none;\n  z-index: 1001;\n}\n\n:host(.overlay-hidden) {\n  display: none;\n}\n\n.action-sheet-wrapper {\n  left: 0;\n  right: 0;\n  bottom: 0;\n  transform: translate3d(0,  100%,  0);\n  display: block;\n  position: absolute;\n  width: var(--width);\n  min-width: var(--min-width);\n  max-width: var(--max-width);\n  height: var(--height);\n  min-height: var(--min-height);\n  max-height: var(--max-height);\n  z-index: 10;\n  pointer-events: none;\n}\n\n.action-sheet-button {\n  display: block;\n  position: relative;\n  width: 100%;\n  border: 0;\n  outline: none;\n  background: var(--button-background);\n  color: var(--button-color);\n  font-family: inherit;\n  overflow: hidden;\n}\n\n.action-sheet-button:disabled {\n  color: var(--button-color-disabled);\n  opacity: 0.4;\n}\n\n.action-sheet-button-inner {\n  display: flex;\n  position: relative;\n  flex-flow: row nowrap;\n  flex-shrink: 0;\n  align-items: center;\n  justify-content: center;\n  pointer-events: none;\n  width: 100%;\n  height: 100%;\n  z-index: 1;\n}\n\n.action-sheet-container {\n  display: flex;\n  flex-flow: column;\n  justify-content: flex-end;\n  height: 100%;\n  /* Fallback for browsers that do not support dvh */\n  max-height: calc(100vh - (var(--ion-safe-area-top, 0) + var(--ion-safe-area-bottom, 0)));\n  max-height: calc(100dvh - (var(--ion-safe-area-top, 0) + var(--ion-safe-area-bottom, 0)));\n}\n\n.action-sheet-group {\n  flex-shrink: 2;\n  overscroll-behavior-y: contain;\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n  pointer-events: all;\n  background: var(--background);\n}\n\n/**\n  * Scrollbars on mobile devices will be hidden.\n  * Users can still scroll the content by swiping.\n  * If a user has a fine pointing device, such as a\n  * mouse or trackpad, then scrollbars will be\n  * visible. This allows users to scroll the\n  * content with their pointing device.\n  * Otherwise, the user would have to use the\n  * keyboard to navigate through the options.\n  * This may not be intuitive for users who\n  * are not familiar with keyboard navigation.\n  */\n@media (any-pointer: coarse) {\n  .action-sheet-group::-webkit-scrollbar {\n    display: none;\n  }\n}\n.action-sheet-group-cancel {\n  flex-shrink: 0;\n  overflow: hidden;\n}\n\n.action-sheet-button::after {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  position: absolute;\n  content: \"\";\n  opacity: 0;\n}\n\n.action-sheet-selected {\n  color: var(--button-color-selected);\n}\n.action-sheet-selected::after {\n  background: var(--button-background-selected);\n  opacity: var(--button-background-selected-opacity);\n}\n\n.action-sheet-button.ion-activated {\n  color: var(--button-color-activated);\n}\n.action-sheet-button.ion-activated::after {\n  background: var(--button-background-activated);\n  opacity: var(--button-background-activated-opacity);\n}\n\n.action-sheet-button.ion-focused {\n  color: var(--button-color-focused);\n}\n.action-sheet-button.ion-focused::after {\n  background: var(--button-background-focused);\n  opacity: var(--button-background-focused-opacity);\n}\n\n@media (any-hover: hover) {\n  .action-sheet-button:not(:disabled):hover {\n    color: var(--button-color-hover);\n  }\n  .action-sheet-button:not(:disabled):hover::after {\n    background: var(--button-background-hover);\n    opacity: var(--button-background-hover-opacity);\n  }\n}\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --background: var(--ion-overlay-background-color, var(--ion-color-step-100, var(--ion-background-color-step-100, #f9f9f9)));\n  --backdrop-opacity: var(--ion-backdrop-opacity, 0.4);\n  --button-background: linear-gradient(0deg, rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.08), rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.08) 50%, transparent 50%) bottom/100% 1px no-repeat transparent;\n  --button-background-activated: var(--ion-text-color, #000);\n  --button-background-activated-opacity: .08;\n  --button-background-hover: currentColor;\n  --button-background-hover-opacity: .04;\n  --button-background-focused: currentColor;\n  --button-background-focused-opacity: .12;\n  --button-background-selected: var(--ion-color-step-150, var(--ion-background-color-step-150, var(--ion-background-color, #fff)));\n  --button-background-selected-opacity: 1;\n  --button-color: var(--ion-color-primary, #0054e9);\n  --button-color-disabled: var(--ion-color-step-850, var(--ion-text-color-step-150, #262626));\n  --color: var(--ion-color-step-400, var(--ion-text-color-step-600, #999999));\n  text-align: center;\n}\n\n.action-sheet-wrapper {\n  -webkit-margin-start: auto;\n  margin-inline-start: auto;\n  -webkit-margin-end: auto;\n  margin-inline-end: auto;\n  margin-top: var(--ion-safe-area-top, 0);\n  /**\n   * Bottom safe area is applied as padding so that it impacts the bounding box.\n   * When the action sheet is shown/hidden, this element is transformed by translating\n   * 100% of its height. This translation needs to include the bottom safe area\n   * otherwise part of the action sheet will still be visible at the end of\n   * the show transition.\n   *\n   * If this code is changed, reviewers should verify that the action\n   * sheet still translates out of the viewport completely when the bottom\n   * safe area is a positive value.\n   */\n  padding-bottom: var(--ion-safe-area-bottom, 0);\n  box-sizing: content-box;\n}\n\n.action-sheet-container {\n  -webkit-padding-start: 8px;\n  padding-inline-start: 8px;\n  -webkit-padding-end: 8px;\n  padding-inline-end: 8px;\n  padding-top: 0;\n  padding-bottom: 0;\n}\n\n.action-sheet-group {\n  border-radius: 13px;\n  margin-bottom: 8px;\n}\n\n.action-sheet-group:first-child {\n  margin-top: 10px;\n}\n\n.action-sheet-group:last-child {\n  margin-bottom: 10px;\n}\n\n@supports (backdrop-filter: blur(0)) {\n  :host(.action-sheet-translucent) .action-sheet-group {\n    background-color: transparent;\n    backdrop-filter: saturate(280%) blur(20px);\n  }\n  :host(.action-sheet-translucent) .action-sheet-title,\n  :host(.action-sheet-translucent) .action-sheet-button {\n    background-color: transparent;\n    background-image: linear-gradient(0deg, rgba(var(--ion-background-color-rgb, 255, 255, 255), 0.8), rgba(var(--ion-background-color-rgb, 255, 255, 255), 0.8) 100%), linear-gradient(0deg, rgba(var(--ion-background-color-rgb, 255, 255, 255), 0.4), rgba(var(--ion-background-color-rgb, 255, 255, 255), 0.4) 50%, rgba(var(--ion-background-color-rgb, 255, 255, 255), 0.8) 50%);\n    background-repeat: no-repeat;\n    /* stylelint-disable-next-line all */\n    background-position: top, bottom;\n    background-size: 100% calc(100% - 1px), 100% 1px;\n    backdrop-filter: saturate(120%);\n  }\n  :host(.action-sheet-translucent) .action-sheet-button.ion-activated {\n    background-color: rgba(var(--ion-background-color-rgb, 255, 255, 255), 0.7);\n    background-image: none;\n  }\n  :host(.action-sheet-translucent) .action-sheet-cancel {\n    background: var(--button-background-selected);\n  }\n}\n.action-sheet-title {\n  background: linear-gradient(0deg, rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.08), rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.08) 50%, transparent 50%) bottom/100% 1px no-repeat transparent;\n}\n\n.action-sheet-title {\n  -webkit-padding-start: 10px;\n  padding-inline-start: 10px;\n  -webkit-padding-end: 10px;\n  padding-inline-end: 10px;\n  padding-top: 14px;\n  padding-bottom: 13px;\n  color: var(--color, var(--ion-color-step-400, var(--ion-text-color-step-600, #999999)));\n  font-size: max(13px, 0.8125rem);\n  font-weight: 400;\n  text-align: center;\n}\n\n.action-sheet-title.action-sheet-has-sub-title {\n  font-weight: 600;\n}\n\n.action-sheet-sub-title {\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 6px;\n  padding-bottom: 0;\n  font-size: max(13px, 0.8125rem);\n  font-weight: 400;\n}\n\n.action-sheet-button {\n  -webkit-padding-start: 14px;\n  padding-inline-start: 14px;\n  -webkit-padding-end: 14px;\n  padding-inline-end: 14px;\n  padding-top: 14px;\n  padding-bottom: 14px;\n  min-height: 56px;\n  font-size: max(20px, 1.25rem);\n  contain: content;\n}\n\n.action-sheet-button .action-sheet-icon {\n  -webkit-margin-end: 0.3em;\n  margin-inline-end: 0.3em;\n  font-size: max(28px, 1.75rem);\n  pointer-events: none;\n}\n\n.action-sheet-button:last-child {\n  background-image: none;\n}\n\n.action-sheet-selected {\n  font-weight: bold;\n}\n\n.action-sheet-cancel {\n  font-weight: 600;\n}\n.action-sheet-cancel::after {\n  background: var(--button-background-selected);\n  opacity: var(--button-background-selected-opacity);\n}\n\n.action-sheet-destructive,\n.action-sheet-destructive.ion-activated,\n.action-sheet-destructive.ion-focused {\n  color: var(--ion-color-danger, #c5000f);\n}\n\n@media (any-hover: hover) {\n  .action-sheet-destructive:hover {\n    color: var(--ion-color-danger, #c5000f);\n  }\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the action sheet group\n   * @prop --color: Color of the action sheet text\n   *\n   * @prop --min-width: Minimum width of the action sheet\n   * @prop --width: Width of the action sheet\n   * @prop --max-width: Maximum width of the action sheet\n   *\n   * @prop --min-height: Minimum height of the action sheet\n   * @prop --height: height of the action sheet\n   * @prop --max-height: Maximum height of the action sheet\n   *\n   * @prop --backdrop-opacity: Opacity of the backdrop\n   *\n   * @prop --button-background: Background of the action sheet button\n   * @prop --button-background-activated: Background of the action sheet button when pressed. Note: setting this will interfere with the Material Design ripple.\n   * @prop --button-background-activated-opacity: Opacity of the action sheet button background when pressed\n   * @prop --button-background-hover: Background of the action sheet button on hover\n   * @prop --button-background-hover-opacity: Opacity of the action sheet button background on hover\n   * @prop --button-background-focused: Background of the action sheet button when tabbed to\n   * @prop --button-background-focused-opacity: Opacity of the action sheet button background when tabbed to\n   * @prop --button-background-selected: Background of the selected action sheet button\n   * @prop --button-background-selected-opacity: Opacity of the selected action sheet button background\n   *\n   * @prop --button-color: Color of the action sheet button\n   * @prop --button-color-activated: Color of the action sheet button when pressed\n   * @prop --button-color-hover: Color of the action sheet button on hover\n   * @prop --button-color-focused: Color of the action sheet button when tabbed to\n   * @prop --button-color-selected: Color of the selected action sheet button\n   * @prop --button-color-disabled: Color of the selected action sheet button when disabled\n   */\n  --color: initial;\n  --button-color-activated: var(--button-color);\n  --button-color-focused: var(--button-color);\n  --button-color-hover: var(--button-color);\n  --button-color-selected: var(--button-color);\n  --min-width: auto;\n  --width: 100%;\n  --max-width: 500px;\n  --min-height: auto;\n  --height: auto;\n  --max-height: calc(100% - (var(--ion-safe-area-top) + var(--ion-safe-area-bottom)));\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: block;\n  position: fixed;\n  outline: none;\n  font-family: var(--ion-font-family, inherit);\n  touch-action: none;\n  user-select: none;\n  z-index: 1001;\n}\n\n:host(.overlay-hidden) {\n  display: none;\n}\n\n.action-sheet-wrapper {\n  left: 0;\n  right: 0;\n  bottom: 0;\n  transform: translate3d(0,  100%,  0);\n  display: block;\n  position: absolute;\n  width: var(--width);\n  min-width: var(--min-width);\n  max-width: var(--max-width);\n  height: var(--height);\n  min-height: var(--min-height);\n  max-height: var(--max-height);\n  z-index: 10;\n  pointer-events: none;\n}\n\n.action-sheet-button {\n  display: block;\n  position: relative;\n  width: 100%;\n  border: 0;\n  outline: none;\n  background: var(--button-background);\n  color: var(--button-color);\n  font-family: inherit;\n  overflow: hidden;\n}\n\n.action-sheet-button:disabled {\n  color: var(--button-color-disabled);\n  opacity: 0.4;\n}\n\n.action-sheet-button-inner {\n  display: flex;\n  position: relative;\n  flex-flow: row nowrap;\n  flex-shrink: 0;\n  align-items: center;\n  justify-content: center;\n  pointer-events: none;\n  width: 100%;\n  height: 100%;\n  z-index: 1;\n}\n\n.action-sheet-container {\n  display: flex;\n  flex-flow: column;\n  justify-content: flex-end;\n  height: 100%;\n  /* Fallback for browsers that do not support dvh */\n  max-height: calc(100vh - (var(--ion-safe-area-top, 0) + var(--ion-safe-area-bottom, 0)));\n  max-height: calc(100dvh - (var(--ion-safe-area-top, 0) + var(--ion-safe-area-bottom, 0)));\n}\n\n.action-sheet-group {\n  flex-shrink: 2;\n  overscroll-behavior-y: contain;\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n  pointer-events: all;\n  background: var(--background);\n}\n\n/**\n  * Scrollbars on mobile devices will be hidden.\n  * Users can still scroll the content by swiping.\n  * If a user has a fine pointing device, such as a\n  * mouse or trackpad, then scrollbars will be\n  * visible. This allows users to scroll the\n  * content with their pointing device.\n  * Otherwise, the user would have to use the\n  * keyboard to navigate through the options.\n  * This may not be intuitive for users who\n  * are not familiar with keyboard navigation.\n  */\n@media (any-pointer: coarse) {\n  .action-sheet-group::-webkit-scrollbar {\n    display: none;\n  }\n}\n.action-sheet-group-cancel {\n  flex-shrink: 0;\n  overflow: hidden;\n}\n\n.action-sheet-button::after {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  position: absolute;\n  content: \"\";\n  opacity: 0;\n}\n\n.action-sheet-selected {\n  color: var(--button-color-selected);\n}\n.action-sheet-selected::after {\n  background: var(--button-background-selected);\n  opacity: var(--button-background-selected-opacity);\n}\n\n.action-sheet-button.ion-activated {\n  color: var(--button-color-activated);\n}\n.action-sheet-button.ion-activated::after {\n  background: var(--button-background-activated);\n  opacity: var(--button-background-activated-opacity);\n}\n\n.action-sheet-button.ion-focused {\n  color: var(--button-color-focused);\n}\n.action-sheet-button.ion-focused::after {\n  background: var(--button-background-focused);\n  opacity: var(--button-background-focused-opacity);\n}\n\n@media (any-hover: hover) {\n  .action-sheet-button:not(:disabled):hover {\n    color: var(--button-color-hover);\n  }\n  .action-sheet-button:not(:disabled):hover::after {\n    background: var(--button-background-hover);\n    opacity: var(--button-background-hover-opacity);\n  }\n}\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --background: var(--ion-overlay-background-color, var(--ion-background-color, #fff));\n  --backdrop-opacity: var(--ion-backdrop-opacity, 0.32);\n  --button-background: transparent;\n  --button-background-selected: currentColor;\n  --button-background-selected-opacity: 0;\n  --button-background-activated: transparent;\n  --button-background-activated-opacity: 0;\n  --button-background-hover: currentColor;\n  --button-background-hover-opacity: .04;\n  --button-background-focused: currentColor;\n  --button-background-focused-opacity: .12;\n  --button-color: var(--ion-color-step-850, var(--ion-text-color-step-150, #262626));\n  --button-color-disabled: var(--button-color);\n  --color: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.54);\n}\n\n.action-sheet-wrapper {\n  -webkit-margin-start: auto;\n  margin-inline-start: auto;\n  -webkit-margin-end: auto;\n  margin-inline-end: auto;\n  margin-top: var(--ion-safe-area-top, 0);\n  margin-bottom: 0;\n}\n\n.action-sheet-title {\n  -webkit-padding-start: 16px;\n  padding-inline-start: 16px;\n  -webkit-padding-end: 16px;\n  padding-inline-end: 16px;\n  padding-top: 20px;\n  padding-bottom: 17px;\n  min-height: 60px;\n  color: var(--color, rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.54));\n  font-size: 1rem;\n  text-align: start;\n}\n\n.action-sheet-sub-title {\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 16px;\n  padding-bottom: 0;\n  font-size: 0.875rem;\n}\n\n.action-sheet-group:first-child {\n  padding-top: 0;\n}\n\n.action-sheet-group:last-child {\n  padding-bottom: var(--ion-safe-area-bottom);\n}\n\n.action-sheet-button {\n  -webkit-padding-start: 16px;\n  padding-inline-start: 16px;\n  -webkit-padding-end: 16px;\n  padding-inline-end: 16px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  position: relative;\n  min-height: 52px;\n  font-size: 1rem;\n  text-align: start;\n  contain: content;\n  overflow: hidden;\n}\n\n.action-sheet-icon {\n  -webkit-margin-start: 0;\n  margin-inline-start: 0;\n  -webkit-margin-end: 32px;\n  margin-inline-end: 32px;\n  margin-top: 0;\n  margin-bottom: 0;\n  color: var(--color);\n  font-size: 1.5rem;\n}\n\n.action-sheet-button-inner {\n  justify-content: flex-start;\n}\n\n.action-sheet-selected {\n  font-weight: bold;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h, readTask } from \"@stencil/core\";\nimport { createButtonActiveGesture } from \"../../utils/gesture/button-active\";\nimport { raf } from \"../../utils/helpers\";\nimport { createLockController } from \"../../utils/lock-controller\";\nimport { BACKDROP, createDelegateController, createTriggerController, dismiss, eventMethod, isCancel, prepareOverlay, present, safeCall, setOverlayId, } from \"../../utils/overlays\";\nimport { getClassMap } from \"../../utils/theme\";\nimport { getIonMode } from \"../../global/ionic-global\";\nimport { iosEnterAnimation } from \"./animations/ios.enter\";\nimport { iosLeaveAnimation } from \"./animations/ios.leave\";\nimport { mdEnterAnimation } from \"./animations/md.enter\";\nimport { mdLeaveAnimation } from \"./animations/md.leave\";\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n */\nexport class ActionSheet {\n    constructor() {\n        this.delegateController = createDelegateController(this);\n        this.lockController = createLockController();\n        this.triggerController = createTriggerController();\n        this.presented = false;\n        this.onBackdropTap = () => {\n            this.dismiss(undefined, BACKDROP);\n        };\n        this.dispatchCancelHandler = (ev) => {\n            const role = ev.detail.role;\n            if (isCancel(role)) {\n                const cancelButton = this.getButtons().find((b) => b.role === 'cancel');\n                this.callButtonHandler(cancelButton);\n            }\n        };\n        this.overlayIndex = undefined;\n        this.delegate = undefined;\n        this.hasController = false;\n        this.keyboardClose = true;\n        this.enterAnimation = undefined;\n        this.leaveAnimation = undefined;\n        this.buttons = [];\n        this.cssClass = undefined;\n        this.backdropDismiss = true;\n        this.header = undefined;\n        this.subHeader = undefined;\n        this.translucent = false;\n        this.animated = true;\n        this.htmlAttributes = undefined;\n        this.isOpen = false;\n        this.trigger = undefined;\n    }\n    onIsOpenChange(newValue, oldValue) {\n        if (newValue === true && oldValue === false) {\n            this.present();\n        }\n        else if (newValue === false && oldValue === true) {\n            this.dismiss();\n        }\n    }\n    triggerChanged() {\n        const { trigger, el, triggerController } = this;\n        if (trigger) {\n            triggerController.addClickListener(el, trigger);\n        }\n    }\n    /**\n     * Present the action sheet overlay after it has been created.\n     */\n    async present() {\n        const unlock = await this.lockController.lock();\n        await this.delegateController.attachViewToDom();\n        await present(this, 'actionSheetEnter', iosEnterAnimation, mdEnterAnimation);\n        unlock();\n    }\n    /**\n     * Dismiss the action sheet overlay after it has been presented.\n     *\n     * @param data Any data to emit in the dismiss events.\n     * @param role The role of the element that is dismissing the action sheet.\n     * This can be useful in a button handler for determining which button was\n     * clicked to dismiss the action sheet.\n     * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n     *\n     * This is a no-op if the overlay has not been presented yet. If you want\n     * to remove an overlay from the DOM that was never presented, use the\n     * [remove](https://developer.mozilla.org/en-US/docs/Web/API/Element/remove) method.\n     */\n    async dismiss(data, role) {\n        const unlock = await this.lockController.lock();\n        const dismissed = await dismiss(this, data, role, 'actionSheetLeave', iosLeaveAnimation, mdLeaveAnimation);\n        if (dismissed) {\n            this.delegateController.removeViewFromDom();\n        }\n        unlock();\n        return dismissed;\n    }\n    /**\n     * Returns a promise that resolves when the action sheet did dismiss.\n     */\n    onDidDismiss() {\n        return eventMethod(this.el, 'ionActionSheetDidDismiss');\n    }\n    /**\n     * Returns a promise that resolves when the action sheet will dismiss.\n     *\n     */\n    onWillDismiss() {\n        return eventMethod(this.el, 'ionActionSheetWillDismiss');\n    }\n    async buttonClick(button) {\n        const role = button.role;\n        if (isCancel(role)) {\n            return this.dismiss(button.data, role);\n        }\n        const shouldDismiss = await this.callButtonHandler(button);\n        if (shouldDismiss) {\n            return this.dismiss(button.data, button.role);\n        }\n        return Promise.resolve();\n    }\n    async callButtonHandler(button) {\n        if (button) {\n            // a handler has been provided, execute it\n            // pass the handler the values from the inputs\n            const rtn = await safeCall(button.handler);\n            if (rtn === false) {\n                // if the return value of the handler is false then do not dismiss\n                return false;\n            }\n        }\n        return true;\n    }\n    getButtons() {\n        return this.buttons.map((b) => {\n            return typeof b === 'string' ? { text: b } : b;\n        });\n    }\n    connectedCallback() {\n        prepareOverlay(this.el);\n        this.triggerChanged();\n    }\n    disconnectedCallback() {\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n        this.triggerController.removeClickListener();\n    }\n    componentWillLoad() {\n        setOverlayId(this.el);\n    }\n    componentDidLoad() {\n        /**\n         * Only create gesture if:\n         * 1. A gesture does not already exist\n         * 2. App is running in iOS mode\n         * 3. A wrapper ref exists\n         * 4. A group ref exists\n         */\n        const { groupEl, wrapperEl } = this;\n        if (!this.gesture && getIonMode(this) === 'ios' && wrapperEl && groupEl) {\n            readTask(() => {\n                const isScrollable = groupEl.scrollHeight > groupEl.clientHeight;\n                if (!isScrollable) {\n                    this.gesture = createButtonActiveGesture(wrapperEl, (refEl) => refEl.classList.contains('action-sheet-button'));\n                    this.gesture.enable(true);\n                }\n            });\n        }\n        /**\n         * If action sheet was rendered with isOpen=\"true\"\n         * then we should open action sheet immediately.\n         */\n        if (this.isOpen === true) {\n            raf(() => this.present());\n        }\n        /**\n         * When binding values in frameworks such as Angular\n         * it is possible for the value to be set after the Web Component\n         * initializes but before the value watcher is set up in Stencil.\n         * As a result, the watcher callback may not be fired.\n         * We work around this by manually calling the watcher\n         * callback when the component has loaded and the watcher\n         * is configured.\n         */\n        this.triggerChanged();\n    }\n    render() {\n        const { header, htmlAttributes, overlayIndex } = this;\n        const mode = getIonMode(this);\n        const allButtons = this.getButtons();\n        const cancelButton = allButtons.find((b) => b.role === 'cancel');\n        const buttons = allButtons.filter((b) => b.role !== 'cancel');\n        const headerID = `action-sheet-${overlayIndex}-header`;\n        return (h(Host, Object.assign({ key: 'b640e9730af4bd9ec569884cf203c63102e0ea59', role: \"dialog\", \"aria-modal\": \"true\", \"aria-labelledby\": header !== undefined ? headerID : null, tabindex: \"-1\" }, htmlAttributes, { style: {\n                zIndex: `${20000 + this.overlayIndex}`,\n            }, class: Object.assign(Object.assign({ [mode]: true }, getClassMap(this.cssClass)), { 'overlay-hidden': true, 'action-sheet-translucent': this.translucent }), onIonActionSheetWillDismiss: this.dispatchCancelHandler, onIonBackdropTap: this.onBackdropTap }), h(\"ion-backdrop\", { key: 'bcfa5b7ffb5c265ef54caa114e697ada11f20c12', tappable: this.backdropDismiss }), h(\"div\", { key: '207ae95b5365ce1d76170a05bdf8c83c3ba5de42', tabindex: \"0\" }), h(\"div\", { key: 'bf2b4e8d57c822a4ea2bbe6c34b1b2f2067e4c02', class: \"action-sheet-wrapper ion-overlay-wrapper\", ref: (el) => (this.wrapperEl = el) }, h(\"div\", { key: '9c4841eb03ca1378c5abc1e3aafbbcfaaa43c345', class: \"action-sheet-container\" }, h(\"div\", { key: 'fa438b8663f5d30852e5967da0471489efa783b2', class: \"action-sheet-group\", ref: (el) => (this.groupEl = el) }, header !== undefined && (h(\"div\", { key: '2c600f1cd8314d65137fb1bfa180312b4791121a', id: headerID, class: {\n                'action-sheet-title': true,\n                'action-sheet-has-sub-title': this.subHeader !== undefined,\n            } }, header, this.subHeader && h(\"div\", { key: 'a98d6a3f7948733de22a07432e56255f11243b7b', class: \"action-sheet-sub-title\" }, this.subHeader))), buttons.map((b) => (h(\"button\", Object.assign({}, b.htmlAttributes, { type: \"button\", id: b.id, class: buttonClass(b), onClick: () => this.buttonClick(b), disabled: b.disabled }), h(\"span\", { class: \"action-sheet-button-inner\" }, b.icon && h(\"ion-icon\", { icon: b.icon, \"aria-hidden\": \"true\", lazy: false, class: \"action-sheet-icon\" }), b.text), mode === 'md' && h(\"ion-ripple-effect\", null))))), cancelButton && (h(\"div\", { key: '5c5abd0e0b3d486ba2bfe437e28a23b2c7c4c955', class: \"action-sheet-group action-sheet-group-cancel\" }, h(\"button\", Object.assign({ key: '520a23bbbe6c7436f5bc58bad162d7894b870e54' }, cancelButton.htmlAttributes, { type: \"button\", class: buttonClass(cancelButton), onClick: () => this.buttonClick(cancelButton) }), h(\"span\", { key: '28c90f66786ee82316adc6cfd68d322d2038357d', class: \"action-sheet-button-inner\" }, cancelButton.icon && (h(\"ion-icon\", { key: 'fd49fcea260c7addc9b07718eeb02d4fa6e4d900', icon: cancelButton.icon, \"aria-hidden\": \"true\", lazy: false, class: \"action-sheet-icon\" })), cancelButton.text), mode === 'md' && h(\"ion-ripple-effect\", { key: 'c83f636e171fe77635a4fce2b97161447e10546a' })))))), h(\"div\", { key: 'd304920fc7cb006b87542183a3224a7e460abd3d', tabindex: \"0\" })));\n    }\n    static get is() { return \"ion-action-sheet\"; }\n    static get encapsulation() { return \"scoped\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"action-sheet.ios.scss\"],\n            \"md\": [\"action-sheet.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"action-sheet.ios.css\"],\n            \"md\": [\"action-sheet.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"overlayIndex\": {\n                \"type\": \"number\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number\",\n                    \"references\": {}\n                },\n                \"required\": true,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                },\n                \"attribute\": \"overlay-index\",\n                \"reflect\": false\n            },\n            \"delegate\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"FrameworkDelegate\",\n                    \"resolved\": \"FrameworkDelegate | undefined\",\n                    \"references\": {\n                        \"FrameworkDelegate\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::FrameworkDelegate\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                }\n            },\n            \"hasController\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                },\n                \"attribute\": \"has-controller\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"keyboardClose\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the keyboard will be automatically dismissed when the overlay is presented.\"\n                },\n                \"attribute\": \"keyboard-close\",\n                \"reflect\": false,\n                \"defaultValue\": \"true\"\n            },\n            \"enterAnimation\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"AnimationBuilder\",\n                    \"resolved\": \"((baseEl: any, opts?: any) => Animation) | undefined\",\n                    \"references\": {\n                        \"AnimationBuilder\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::AnimationBuilder\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Animation to use when the action sheet is presented.\"\n                }\n            },\n            \"leaveAnimation\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"AnimationBuilder\",\n                    \"resolved\": \"((baseEl: any, opts?: any) => Animation) | undefined\",\n                    \"references\": {\n                        \"AnimationBuilder\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::AnimationBuilder\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Animation to use when the action sheet is dismissed.\"\n                }\n            },\n            \"buttons\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"(ActionSheetButton | string)[]\",\n                    \"resolved\": \"(string | ActionSheetButton<any>)[]\",\n                    \"references\": {\n                        \"ActionSheetButton\": {\n                            \"location\": \"import\",\n                            \"path\": \"./action-sheet-interface\",\n                            \"id\": \"src/components/action-sheet/action-sheet-interface.ts::ActionSheetButton\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"An array of buttons for the action sheet.\"\n                },\n                \"defaultValue\": \"[]\"\n            },\n            \"cssClass\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | string[]\",\n                    \"resolved\": \"string | string[] | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Additional classes to apply for custom CSS. If multiple classes are\\nprovided they should be separated by spaces.\"\n                },\n                \"attribute\": \"css-class\",\n                \"reflect\": false\n            },\n            \"backdropDismiss\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the action sheet will be dismissed when the backdrop is clicked.\"\n                },\n                \"attribute\": \"backdrop-dismiss\",\n                \"reflect\": false,\n                \"defaultValue\": \"true\"\n            },\n            \"header\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Title for the action sheet.\"\n                },\n                \"attribute\": \"header\",\n                \"reflect\": false\n            },\n            \"subHeader\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Subtitle for the action sheet.\"\n                },\n                \"attribute\": \"sub-header\",\n                \"reflect\": false\n            },\n            \"translucent\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the action sheet will be translucent.\\nOnly applies when the mode is `\\\"ios\\\"` and the device supports\\n[`backdrop-filter`](https://developer.mozilla.org/en-US/docs/Web/CSS/backdrop-filter#Browser_compatibility).\"\n                },\n                \"attribute\": \"translucent\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"animated\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the action sheet will animate.\"\n                },\n                \"attribute\": \"animated\",\n                \"reflect\": false,\n                \"defaultValue\": \"true\"\n            },\n            \"htmlAttributes\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"{ [key: string]: any }\",\n                    \"resolved\": \"undefined | { [key: string]: any; }\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Additional attributes to pass to the action sheet.\"\n                }\n            },\n            \"isOpen\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the action sheet will open. If `false`, the action sheet will close.\\nUse this if you need finer grained control over presentation, otherwise\\njust use the actionSheetController or the `trigger` property.\\nNote: `isOpen` will not automatically be set back to `false` when\\nthe action sheet dismisses. You will need to do that in your code.\"\n                },\n                \"attribute\": \"is-open\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"trigger\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | undefined\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"An ID corresponding to the trigger element that\\ncauses the action sheet to open when clicked.\"\n                },\n                \"attribute\": \"trigger\",\n                \"reflect\": false\n            }\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"didPresent\",\n                \"name\": \"ionActionSheetDidPresent\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted after the action sheet has presented.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"willPresent\",\n                \"name\": \"ionActionSheetWillPresent\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted before the action sheet has presented.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"willDismiss\",\n                \"name\": \"ionActionSheetWillDismiss\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted before the action sheet has dismissed.\"\n                },\n                \"complexType\": {\n                    \"original\": \"OverlayEventDetail\",\n                    \"resolved\": \"OverlayEventDetail<any>\",\n                    \"references\": {\n                        \"OverlayEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/overlays-interface\",\n                            \"id\": \"src/utils/overlays-interface.ts::OverlayEventDetail\"\n                        }\n                    }\n                }\n            }, {\n                \"method\": \"didDismiss\",\n                \"name\": \"ionActionSheetDidDismiss\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted after the action sheet has dismissed.\"\n                },\n                \"complexType\": {\n                    \"original\": \"OverlayEventDetail\",\n                    \"resolved\": \"OverlayEventDetail<any>\",\n                    \"references\": {\n                        \"OverlayEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/overlays-interface\",\n                            \"id\": \"src/utils/overlays-interface.ts::OverlayEventDetail\"\n                        }\n                    }\n                }\n            }, {\n                \"method\": \"didPresentShorthand\",\n                \"name\": \"didPresent\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted after the action sheet has presented.\\nShorthand for ionActionSheetWillDismiss.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"willPresentShorthand\",\n                \"name\": \"willPresent\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted before the action sheet has presented.\\nShorthand for ionActionSheetWillPresent.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"willDismissShorthand\",\n                \"name\": \"willDismiss\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted before the action sheet has dismissed.\\nShorthand for ionActionSheetWillDismiss.\"\n                },\n                \"complexType\": {\n                    \"original\": \"OverlayEventDetail\",\n                    \"resolved\": \"OverlayEventDetail<any>\",\n                    \"references\": {\n                        \"OverlayEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/overlays-interface\",\n                            \"id\": \"src/utils/overlays-interface.ts::OverlayEventDetail\"\n                        }\n                    }\n                }\n            }, {\n                \"method\": \"didDismissShorthand\",\n                \"name\": \"didDismiss\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted after the action sheet has dismissed.\\nShorthand for ionActionSheetDidDismiss.\"\n                },\n                \"complexType\": {\n                    \"original\": \"OverlayEventDetail\",\n                    \"resolved\": \"OverlayEventDetail<any>\",\n                    \"references\": {\n                        \"OverlayEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/overlays-interface\",\n                            \"id\": \"src/utils/overlays-interface.ts::OverlayEventDetail\"\n                        }\n                    }\n                }\n            }];\n    }\n    static get methods() {\n        return {\n            \"present\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<void>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Present the action sheet overlay after it has been created.\",\n                    \"tags\": []\n                }\n            },\n            \"dismiss\": {\n                \"complexType\": {\n                    \"signature\": \"(data?: any, role?: string) => Promise<boolean>\",\n                    \"parameters\": [{\n                            \"name\": \"data\",\n                            \"type\": \"any\",\n                            \"docs\": \"Any data to emit in the dismiss events.\"\n                        }, {\n                            \"name\": \"role\",\n                            \"type\": \"string | undefined\",\n                            \"docs\": \"The role of the element that is dismissing the action sheet.\\nThis can be useful in a button handler for determining which button was\\nclicked to dismiss the action sheet.\\nSome examples include: ``\\\"cancel\\\"`, `\\\"destructive\\\"`, \\\"selected\\\"`, and `\\\"backdrop\\\"`.\\n\\nThis is a no-op if the overlay has not been presented yet. If you want\\nto remove an overlay from the DOM that was never presented, use the\\n[remove](https://developer.mozilla.org/en-US/docs/Web/API/Element/remove) method.\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<boolean>\"\n                },\n                \"docs\": {\n                    \"text\": \"Dismiss the action sheet overlay after it has been presented.\",\n                    \"tags\": [{\n                            \"name\": \"param\",\n                            \"text\": \"data Any data to emit in the dismiss events.\"\n                        }, {\n                            \"name\": \"param\",\n                            \"text\": \"role The role of the element that is dismissing the action sheet.\\nThis can be useful in a button handler for determining which button was\\nclicked to dismiss the action sheet.\\nSome examples include: ``\\\"cancel\\\"`, `\\\"destructive\\\"`, \\\"selected\\\"`, and `\\\"backdrop\\\"`.\\n\\nThis is a no-op if the overlay has not been presented yet. If you want\\nto remove an overlay from the DOM that was never presented, use the\\n[remove](https://developer.mozilla.org/en-US/docs/Web/API/Element/remove) method.\"\n                        }]\n                }\n            },\n            \"onDidDismiss\": {\n                \"complexType\": {\n                    \"signature\": \"<T = any>() => Promise<OverlayEventDetail<T>>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        },\n                        \"OverlayEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/overlays-interface\",\n                            \"id\": \"src/utils/overlays-interface.ts::OverlayEventDetail\"\n                        },\n                        \"T\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::T\"\n                        }\n                    },\n                    \"return\": \"Promise<OverlayEventDetail<T>>\"\n                },\n                \"docs\": {\n                    \"text\": \"Returns a promise that resolves when the action sheet did dismiss.\",\n                    \"tags\": []\n                }\n            },\n            \"onWillDismiss\": {\n                \"complexType\": {\n                    \"signature\": \"<T = any>() => Promise<OverlayEventDetail<T>>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        },\n                        \"OverlayEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/overlays-interface\",\n                            \"id\": \"src/utils/overlays-interface.ts::OverlayEventDetail\"\n                        },\n                        \"T\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::T\"\n                        }\n                    },\n                    \"return\": \"Promise<OverlayEventDetail<T>>\"\n                },\n                \"docs\": {\n                    \"text\": \"Returns a promise that resolves when the action sheet will dismiss.\",\n                    \"tags\": []\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"isOpen\",\n                \"methodName\": \"onIsOpenChange\"\n            }, {\n                \"propName\": \"trigger\",\n                \"methodName\": \"triggerChanged\"\n            }];\n    }\n}\nconst buttonClass = (button) => {\n    return Object.assign({ 'action-sheet-button': true, 'ion-activatable': !button.disabled, 'ion-focusable': !button.disabled, [`action-sheet-${button.role}`]: button.role !== undefined }, getClassMap(button.cssClass));\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { createAnimation } from \"../../../utils/animation/animation\";\n/**\n * iOS Alert Enter Animation\n */\nexport const iosEnterAnimation = (baseEl) => {\n    const baseAnimation = createAnimation();\n    const backdropAnimation = createAnimation();\n    const wrapperAnimation = createAnimation();\n    backdropAnimation\n        .addElement(baseEl.querySelector('ion-backdrop'))\n        .fromTo('opacity', 0.01, 'var(--backdrop-opacity)')\n        .beforeStyles({\n        'pointer-events': 'none',\n    })\n        .afterClearStyles(['pointer-events']);\n    wrapperAnimation.addElement(baseEl.querySelector('.alert-wrapper')).keyframes([\n        { offset: 0, opacity: '0.01', transform: 'scale(1.1)' },\n        { offset: 1, opacity: '1', transform: 'scale(1)' },\n    ]);\n    return baseAnimation\n        .addElement(baseEl)\n        .easing('ease-in-out')\n        .duration(200)\n        .addAnimation([backdropAnimation, wrapperAnimation]);\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { createAnimation } from \"../../../utils/animation/animation\";\n/**\n * iOS Alert Leave Animation\n */\nexport const iosLeaveAnimation = (baseEl) => {\n    const baseAnimation = createAnimation();\n    const backdropAnimation = createAnimation();\n    const wrapperAnimation = createAnimation();\n    backdropAnimation.addElement(baseEl.querySelector('ion-backdrop')).fromTo('opacity', 'var(--backdrop-opacity)', 0);\n    wrapperAnimation.addElement(baseEl.querySelector('.alert-wrapper')).keyframes([\n        { offset: 0, opacity: 0.99, transform: 'scale(1)' },\n        { offset: 1, opacity: 0, transform: 'scale(0.9)' },\n    ]);\n    return baseAnimation\n        .addElement(baseEl)\n        .easing('ease-in-out')\n        .duration(200)\n        .addAnimation([backdropAnimation, wrapperAnimation]);\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { createAnimation } from \"../../../utils/animation/animation\";\n/**\n * Md Alert Enter Animation\n */\nexport const mdEnterAnimation = (baseEl) => {\n    const baseAnimation = createAnimation();\n    const backdropAnimation = createAnimation();\n    const wrapperAnimation = createAnimation();\n    backdropAnimation\n        .addElement(baseEl.querySelector('ion-backdrop'))\n        .fromTo('opacity', 0.01, 'var(--backdrop-opacity)')\n        .beforeStyles({\n        'pointer-events': 'none',\n    })\n        .afterClearStyles(['pointer-events']);\n    wrapperAnimation.addElement(baseEl.querySelector('.alert-wrapper')).keyframes([\n        { offset: 0, opacity: '0.01', transform: 'scale(0.9)' },\n        { offset: 1, opacity: '1', transform: 'scale(1)' },\n    ]);\n    return baseAnimation\n        .addElement(baseEl)\n        .easing('ease-in-out')\n        .duration(150)\n        .addAnimation([backdropAnimation, wrapperAnimation]);\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { createAnimation } from \"../../../utils/animation/animation\";\n/**\n * Md Alert Leave Animation\n */\nexport const mdLeaveAnimation = (baseEl) => {\n    const baseAnimation = createAnimation();\n    const backdropAnimation = createAnimation();\n    const wrapperAnimation = createAnimation();\n    backdropAnimation.addElement(baseEl.querySelector('ion-backdrop')).fromTo('opacity', 'var(--backdrop-opacity)', 0);\n    wrapperAnimation.addElement(baseEl.querySelector('.alert-wrapper')).fromTo('opacity', 0.99, 0);\n    return baseAnimation\n        .addElement(baseEl)\n        .easing('ease-in-out')\n        .duration(150)\n        .addAnimation([backdropAnimation, wrapperAnimation]);\n};\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the alert\n   *\n   * @prop --min-width: Minimum width of the alert\n   * @prop --width: Width of the alert\n   * @prop --max-width: Maximum width of the alert\n   *\n   * @prop --min-height: Minimum height of the alert\n   * @prop --height: Height of the alert\n   * @prop --max-height: Maximum height of the alert\n   *\n   * @prop --backdrop-opacity: Opacity of the backdrop\n   */\n  --min-width: 250px;\n  --width: auto;\n  --min-height: auto;\n  --height: auto;\n  --max-height: 90%;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  position: absolute;\n  align-items: center;\n  justify-content: center;\n  outline: none;\n  font-family: var(--ion-font-family, inherit);\n  contain: strict;\n  touch-action: none;\n  user-select: none;\n  z-index: 1001;\n}\n\n:host(.overlay-hidden) {\n  display: none;\n}\n\n:host(.alert-top) {\n  padding-top: 50px;\n  align-items: flex-start;\n}\n\n.alert-wrapper {\n  display: flex;\n  flex-direction: column;\n  width: var(--width);\n  min-width: var(--min-width);\n  max-width: var(--max-width);\n  height: var(--height);\n  min-height: var(--min-height);\n  max-height: var(--max-height);\n  background: var(--background);\n  contain: content;\n  opacity: 0;\n  z-index: 10;\n}\n\n.alert-title {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n}\n\n.alert-sub-title {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 5px;\n  margin-bottom: 0;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  font-weight: normal;\n}\n\n/**\n * Alert has a maximum height in scenarios\n * such as the MD alert on tablet devices.\n * As a result, we need to make sure the inner\n * containers can scroll otherwise content\n * may be cut off.\n */\n.alert-message,\n.alert-input-group {\n  box-sizing: border-box;\n  -webkit-overflow-scrolling: touch;\n  overflow-y: auto;\n  overscroll-behavior-y: contain;\n}\n\n.alert-checkbox-label,\n.alert-radio-label {\n  /**\n   * This allows long words to wrap to the next line\n   * instead of flowing outside of the container.\n   *\n   * The \"anywhere\" keyword should be used instead\n   * of the \"break-word\" keyword since the parent\n   * container is using flexbox. Flex relies on min-content and\n   * max-content intrinsic sizes to structure the layout. Flex will\n   * wrap content only until it reaches its min-content intrinsic size\n   * which in this case is equal to the longest word in this container.\n   * \"break-word\" does not shrink the min-content intrinsic size\n   * of the flex item which causes the long word to still overflow.\n   * \"anywhere\" on the other hand does shrink the min-content\n   * intrinsic size which allows the long word to wrap to the next line.\n   */\n  overflow-wrap: anywhere;\n}\n\n/**\n  * Scrollbars on mobile devices will be hidden.\n  * Users can still scroll the content by swiping.\n  * If a user has a fine pointing device, such as a\n  * mouse or trackpad, then scrollbars will be\n  * visible. This allows users to scroll the\n  * content with their pointing device.\n  * Otherwise, the user would have to use the\n  * keyboard to navigate through the options.\n  * This may not be intuitive for users who\n  * are not familiar with keyboard navigation.\n  */\n@media (any-pointer: coarse) {\n  .alert-checkbox-group::-webkit-scrollbar,\n  .alert-radio-group::-webkit-scrollbar,\n  .alert-message::-webkit-scrollbar {\n    display: none;\n  }\n}\n.alert-input {\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  width: 100%;\n  border: 0;\n  background: inherit;\n  font: inherit;\n  box-sizing: border-box;\n}\n\n.alert-button-group {\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n}\n\n.alert-button-group-vertical {\n  flex-direction: column;\n  flex-wrap: nowrap;\n}\n\n.alert-button {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  display: block;\n  border: 0;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  z-index: 0;\n}\n\n.alert-button.ion-focused,\n.alert-tappable.ion-focused {\n  background: var(--ion-color-step-100, var(--ion-background-color-step-100, #e6e6e6));\n}\n\n.alert-button-inner {\n  display: flex;\n  flex-flow: row nowrap;\n  flex-shrink: 0;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  min-height: inherit;\n}\n\n.alert-input-disabled,\n.alert-checkbox-button-disabled .alert-button-inner,\n.alert-radio-button-disabled .alert-button-inner {\n  cursor: default;\n  opacity: 0.5;\n  pointer-events: none;\n}\n\n.alert-tappable {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  display: flex;\n  width: 100%;\n  border: 0;\n  background: transparent;\n  font-size: inherit;\n  line-height: initial;\n  text-align: start;\n  appearance: none;\n  contain: content;\n}\n\n.alert-button,\n.alert-checkbox,\n.alert-input,\n.alert-radio {\n  outline: none;\n}\n\n.alert-radio-icon,\n.alert-checkbox-icon,\n.alert-checkbox-inner {\n  box-sizing: border-box;\n}\n\ntextarea.alert-input {\n  min-height: 37px;\n  resize: none;\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * We want the height of the button to\n * scale with the text so the next never runs\n * into the edge of the button. We change the height\n * instead of adding padding because we would need to offset\n * the height the padding and the border. Since the border uses\n * a hairline (<1px) width, this will cause subpixel rendering\n * differences across browsers.\n */\n:host {\n  --background: var(--ion-overlay-background-color, var(--ion-color-step-100, var(--ion-background-color-step-100, #f9f9f9)));\n  --max-width: clamp(270px, 16.875rem, 324px);\n  --backdrop-opacity: var(--ion-backdrop-opacity, 0.3);\n  font-size: max(14px, 0.875rem);\n}\n\n.alert-wrapper {\n  border-radius: 13px;\n  box-shadow: none;\n  overflow: hidden;\n}\n\n.alert-button .alert-button-inner {\n  pointer-events: none;\n}\n\n@supports (backdrop-filter: blur(0)) {\n  :host(.alert-translucent) .alert-wrapper {\n    background: rgba(var(--ion-background-color-rgb, 255, 255, 255), 0.9);\n    backdrop-filter: saturate(180%) blur(20px);\n  }\n}\n.alert-head {\n  -webkit-padding-start: 16px;\n  padding-inline-start: 16px;\n  -webkit-padding-end: 16px;\n  padding-inline-end: 16px;\n  padding-top: 12px;\n  padding-bottom: 7px;\n  text-align: center;\n}\n\n.alert-title {\n  margin-top: 8px;\n  color: var(--ion-text-color, #000);\n  font-size: max(17px, 1.0625rem);\n  font-weight: 600;\n}\n\n.alert-sub-title {\n  color: var(--ion-color-step-600, var(--ion-text-color-step-400, #666666));\n  font-size: max(14px, 0.875rem);\n}\n\n.alert-message,\n.alert-input-group {\n  -webkit-padding-start: 16px;\n  padding-inline-start: 16px;\n  -webkit-padding-end: 16px;\n  padding-inline-end: 16px;\n  padding-top: 0;\n  padding-bottom: 21px;\n  color: var(--ion-text-color, #000);\n  font-size: max(13px, 0.8125rem);\n  text-align: center;\n}\n\n.alert-message {\n  max-height: 240px;\n}\n\n.alert-message:empty {\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 12px;\n}\n\n.alert-input {\n  border-radius: 7px;\n  margin-top: 10px;\n  -webkit-padding-start: 7px;\n  padding-inline-start: 7px;\n  -webkit-padding-end: 7px;\n  padding-inline-end: 7px;\n  padding-top: 7px;\n  padding-bottom: 7px;\n  border: 0.55px solid var(--ion-color-step-250, var(--ion-background-color-step-250, #bfbfbf));\n  background-color: var(--ion-background-color, #fff);\n  appearance: none;\n  font-size: 1rem;\n}\n.alert-input::placeholder {\n  color: var(--ion-placeholder-color, var(--ion-color-step-400, var(--ion-text-color-step-600, #999999)));\n  font-family: inherit;\n  font-weight: inherit;\n}\n.alert-input::-ms-clear {\n  display: none;\n}\n.alert-input::-webkit-date-and-time-value {\n  /**\n   * The -webkit-date-and-time-value pseudo element is used\n   * to style the date/time input on iOS/Mobile Safari.\n   * To avoid layout shift between an empty state and a selected state,\n   * we set the height `18px` to match the native input height for\n   * date/time inputs on iOS/Mobile Safari.\n   */\n  height: 18px;\n}\n\n.alert-radio-group,\n.alert-checkbox-group {\n  overscroll-behavior: contain;\n  max-height: 240px;\n  border-top: 0.55px solid rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.2);\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n}\n\n.alert-tappable {\n  min-height: 44px;\n}\n\n.alert-radio-label {\n  -webkit-padding-start: 13px;\n  padding-inline-start: 13px;\n  -webkit-padding-end: 13px;\n  padding-inline-end: 13px;\n  padding-top: 13px;\n  padding-bottom: 13px;\n  flex: 1;\n  order: 0;\n  color: var(--ion-text-color, #000);\n}\n\n[aria-checked=true] .alert-radio-label {\n  color: var(--ion-color-primary, #0054e9);\n}\n\n.alert-radio-icon {\n  position: relative;\n  order: 1;\n  min-width: 30px;\n}\n\n[aria-checked=true] .alert-radio-inner {\n  top: -7px;\n  position: absolute;\n  width: 6px;\n  height: 12px;\n  transform: rotate(45deg);\n  border-width: 2px;\n  border-top-width: 0;\n  border-left-width: 0;\n  border-style: solid;\n  border-color: var(--ion-color-primary, #0054e9);\n}\n[aria-checked=true] .alert-radio-inner {\n  inset-inline-start: 7px;\n}\n\n.alert-checkbox-label {\n  -webkit-padding-start: 13px;\n  padding-inline-start: 13px;\n  -webkit-padding-end: 13px;\n  padding-inline-end: 13px;\n  padding-top: 13px;\n  padding-bottom: 13px;\n  flex: 1;\n  color: var(--ion-text-color, #000);\n}\n\n.alert-checkbox-icon {\n  border-radius: 50%;\n  -webkit-margin-start: 16px;\n  margin-inline-start: 16px;\n  -webkit-margin-end: 6px;\n  margin-inline-end: 6px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  position: relative;\n  width: min(1.375rem, 55.836px);\n  height: min(1.375rem, 55.836px);\n  border-width: 0.125rem;\n  border-style: solid;\n  border-color: var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-250, var(--ion-background-color-step-250, #c8c7cc))));\n  background-color: var(--ion-item-background, var(--ion-background-color, #fff));\n  contain: strict;\n}\n\n[aria-checked=true] .alert-checkbox-icon {\n  border-color: var(--ion-color-primary, #0054e9);\n  background-color: var(--ion-color-primary, #0054e9);\n}\n\n[aria-checked=true] .alert-checkbox-inner {\n  top: calc(min(1.375rem, 55.836px) / 8);\n  position: absolute;\n  width: calc(min(1.375rem, 55.836px) / 6 + 1px);\n  height: calc(min(1.375rem, 55.836px) * 0.5);\n  transform: rotate(45deg);\n  border-width: 0.125rem;\n  border-top-width: 0;\n  border-left-width: 0;\n  border-style: solid;\n  border-color: var(--ion-background-color, #fff);\n}\n[aria-checked=true] .alert-checkbox-inner {\n  inset-inline-start: calc(min(1.375rem, 55.836px) / 3);\n}\n\n.alert-button-group {\n  -webkit-margin-end: -0.55px;\n  margin-inline-end: -0.55px;\n  flex-wrap: wrap;\n}\n\n/**\n  * The right border should only be applied to the first button\n  * when the group has 2 or less buttons (horizontal).\n  * Otherwise, the right border should not be applied\n  * when the group has 3 or more buttons (vertical).\n  */\n.alert-button-group-vertical .alert-button {\n  border-right: none;\n}\n:host-context([dir=rtl]) .alert-button-group-vertical .alert-button:last-child {\n  border-right: none;\n}\n\n[dir=rtl] .alert-button-group-vertical .alert-button:last-child {\n  border-right: none;\n}\n\n@supports selector(:dir(rtl)) {\n  .alert-button-group-vertical .alert-button:last-child:dir(rtl) {\n    border-right: none;\n  }\n}\n\n.alert-button {\n  /**\n   * This padding ensures that alerts\n   * with multiple buttons render on separate lines\n   * so the text does not run up against the edge of the button.\n   */\n  -webkit-padding-start: 8px;\n  padding-inline-start: 8px;\n  -webkit-padding-end: 8px;\n  padding-inline-end: 8px;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  border-radius: 0;\n  flex: 1 1 auto;\n  min-width: 50%;\n  height: max(44px, 2.75rem);\n  border-top: 0.55px solid rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.2);\n  border-right: 0.55px solid rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.2);\n  background-color: transparent;\n  color: var(--ion-color-primary, #0054e9);\n  font-size: max(17px, 1.0625rem);\n  overflow: hidden;\n}\n\n:host-context([dir=rtl]) .alert-button:first-child {\n  border-right: 0;\n}\n\n[dir=rtl] .alert-button:first-child {\n  border-right: 0;\n}\n\n@supports selector(:dir(rtl)) {\n  .alert-button:first-child:dir(rtl) {\n    border-right: 0;\n  }\n}\n\n.alert-button:last-child {\n  border-right: 0;\n  font-weight: bold;\n}\n:host-context([dir=rtl]) .alert-button:last-child {\n  border-right: 0.55px solid rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.2);\n}\n\n[dir=rtl] .alert-button:last-child {\n  border-right: 0.55px solid rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.2);\n}\n\n@supports selector(:dir(rtl)) {\n  .alert-button:last-child:dir(rtl) {\n    border-right: 0.55px solid rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.2);\n  }\n}\n\n.alert-button.ion-activated {\n  background-color: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.1);\n}\n\n.alert-button-role-destructive,\n.alert-button-role-destructive.ion-activated,\n.alert-button-role-destructive.ion-focused {\n  color: var(--ion-color-danger, #c5000f);\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the alert\n   *\n   * @prop --min-width: Minimum width of the alert\n   * @prop --width: Width of the alert\n   * @prop --max-width: Maximum width of the alert\n   *\n   * @prop --min-height: Minimum height of the alert\n   * @prop --height: Height of the alert\n   * @prop --max-height: Maximum height of the alert\n   *\n   * @prop --backdrop-opacity: Opacity of the backdrop\n   */\n  --min-width: 250px;\n  --width: auto;\n  --min-height: auto;\n  --height: auto;\n  --max-height: 90%;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  position: absolute;\n  align-items: center;\n  justify-content: center;\n  outline: none;\n  font-family: var(--ion-font-family, inherit);\n  contain: strict;\n  touch-action: none;\n  user-select: none;\n  z-index: 1001;\n}\n\n:host(.overlay-hidden) {\n  display: none;\n}\n\n:host(.alert-top) {\n  padding-top: 50px;\n  align-items: flex-start;\n}\n\n.alert-wrapper {\n  display: flex;\n  flex-direction: column;\n  width: var(--width);\n  min-width: var(--min-width);\n  max-width: var(--max-width);\n  height: var(--height);\n  min-height: var(--min-height);\n  max-height: var(--max-height);\n  background: var(--background);\n  contain: content;\n  opacity: 0;\n  z-index: 10;\n}\n\n.alert-title {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n}\n\n.alert-sub-title {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 5px;\n  margin-bottom: 0;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  font-weight: normal;\n}\n\n/**\n * Alert has a maximum height in scenarios\n * such as the MD alert on tablet devices.\n * As a result, we need to make sure the inner\n * containers can scroll otherwise content\n * may be cut off.\n */\n.alert-message,\n.alert-input-group {\n  box-sizing: border-box;\n  -webkit-overflow-scrolling: touch;\n  overflow-y: auto;\n  overscroll-behavior-y: contain;\n}\n\n.alert-checkbox-label,\n.alert-radio-label {\n  /**\n   * This allows long words to wrap to the next line\n   * instead of flowing outside of the container.\n   *\n   * The \"anywhere\" keyword should be used instead\n   * of the \"break-word\" keyword since the parent\n   * container is using flexbox. Flex relies on min-content and\n   * max-content intrinsic sizes to structure the layout. Flex will\n   * wrap content only until it reaches its min-content intrinsic size\n   * which in this case is equal to the longest word in this container.\n   * \"break-word\" does not shrink the min-content intrinsic size\n   * of the flex item which causes the long word to still overflow.\n   * \"anywhere\" on the other hand does shrink the min-content\n   * intrinsic size which allows the long word to wrap to the next line.\n   */\n  overflow-wrap: anywhere;\n}\n\n/**\n  * Scrollbars on mobile devices will be hidden.\n  * Users can still scroll the content by swiping.\n  * If a user has a fine pointing device, such as a\n  * mouse or trackpad, then scrollbars will be\n  * visible. This allows users to scroll the\n  * content with their pointing device.\n  * Otherwise, the user would have to use the\n  * keyboard to navigate through the options.\n  * This may not be intuitive for users who\n  * are not familiar with keyboard navigation.\n  */\n@media (any-pointer: coarse) {\n  .alert-checkbox-group::-webkit-scrollbar,\n  .alert-radio-group::-webkit-scrollbar,\n  .alert-message::-webkit-scrollbar {\n    display: none;\n  }\n}\n.alert-input {\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  width: 100%;\n  border: 0;\n  background: inherit;\n  font: inherit;\n  box-sizing: border-box;\n}\n\n.alert-button-group {\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n}\n\n.alert-button-group-vertical {\n  flex-direction: column;\n  flex-wrap: nowrap;\n}\n\n.alert-button {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  display: block;\n  border: 0;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  z-index: 0;\n}\n\n.alert-button.ion-focused,\n.alert-tappable.ion-focused {\n  background: var(--ion-color-step-100, var(--ion-background-color-step-100, #e6e6e6));\n}\n\n.alert-button-inner {\n  display: flex;\n  flex-flow: row nowrap;\n  flex-shrink: 0;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  min-height: inherit;\n}\n\n.alert-input-disabled,\n.alert-checkbox-button-disabled .alert-button-inner,\n.alert-radio-button-disabled .alert-button-inner {\n  cursor: default;\n  opacity: 0.5;\n  pointer-events: none;\n}\n\n.alert-tappable {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  display: flex;\n  width: 100%;\n  border: 0;\n  background: transparent;\n  font-size: inherit;\n  line-height: initial;\n  text-align: start;\n  appearance: none;\n  contain: content;\n}\n\n.alert-button,\n.alert-checkbox,\n.alert-input,\n.alert-radio {\n  outline: none;\n}\n\n.alert-radio-icon,\n.alert-checkbox-icon,\n.alert-checkbox-inner {\n  box-sizing: border-box;\n}\n\ntextarea.alert-input {\n  min-height: 37px;\n  resize: none;\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Large display requirements for MD Alert:\n * 1. Maintain a minimum of 48px distance from the leading and\n * trailing edges of the screen. (48px * 2 = 96px)\n * 2. The width can increase up to 560px.\n * 3. The height can increase up to 560px.\n * Source: https://m2.material.io/components/dialogs#behavior\n */\n:host {\n  --background: var(--ion-overlay-background-color, var(--ion-background-color, #fff));\n  --max-width: 280px;\n  --backdrop-opacity: var(--ion-backdrop-opacity, 0.32);\n  font-size: 0.875rem;\n}\n\n.alert-wrapper {\n  border-radius: 4px;\n  box-shadow: 0 11px 15px -7px rgba(0, 0, 0, 0.2), 0 24px 38px 3px rgba(0, 0, 0, 0.14), 0 9px 46px 8px rgba(0, 0, 0, 0.12);\n}\n\n.alert-head {\n  -webkit-padding-start: 23px;\n  padding-inline-start: 23px;\n  -webkit-padding-end: 23px;\n  padding-inline-end: 23px;\n  padding-top: 20px;\n  padding-bottom: 15px;\n  text-align: start;\n}\n\n.alert-title {\n  color: var(--ion-text-color, #000);\n  font-size: 1.25rem;\n  font-weight: 500;\n}\n\n.alert-sub-title {\n  color: var(--ion-text-color, #000);\n  font-size: 1rem;\n}\n\n.alert-message,\n.alert-input-group {\n  -webkit-padding-start: 24px;\n  padding-inline-start: 24px;\n  -webkit-padding-end: 24px;\n  padding-inline-end: 24px;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  color: var(--ion-color-step-550, var(--ion-text-color-step-450, #737373));\n}\n\n.alert-message {\n  font-size: 1rem;\n}\n\n/**\n * MD Alerts on tablets can expand vertically up to\n * a total maximum height. We only want to set a max-height\n * on mobile phones.\n */\n@media screen and (max-width: 767px) {\n  .alert-message {\n    max-height: 266px;\n  }\n}\n.alert-message:empty {\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n}\n\n.alert-head + .alert-message {\n  padding-top: 0;\n}\n\n.alert-input {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 5px;\n  margin-bottom: 5px;\n  border-bottom: 1px solid var(--ion-color-step-150, var(--ion-background-color-step-150, #d9d9d9));\n  color: var(--ion-text-color, #000);\n}\n.alert-input::placeholder {\n  color: var(--ion-placeholder-color, var(--ion-color-step-400, var(--ion-text-color-step-600, #999999)));\n  font-family: inherit;\n  font-weight: inherit;\n}\n.alert-input::-ms-clear {\n  display: none;\n}\n\n.alert-input:focus {\n  margin-bottom: 4px;\n  border-bottom: 2px solid var(--ion-color-primary, #0054e9);\n}\n\n.alert-radio-group,\n.alert-checkbox-group {\n  position: relative;\n  border-top: 1px solid var(--ion-color-step-150, var(--ion-background-color-step-150, #d9d9d9));\n  border-bottom: 1px solid var(--ion-color-step-150, var(--ion-background-color-step-150, #d9d9d9));\n  overflow: auto;\n}\n\n/**\n * MD Alerts on tablets can expand vertically up to\n * a total maximum height. We only want to set a max-height\n * on mobile phones.\n */\n@media screen and (max-width: 767px) {\n  .alert-radio-group,\n  .alert-checkbox-group {\n    max-height: 266px;\n  }\n}\n.alert-tappable {\n  position: relative;\n  min-height: 48px;\n}\n\n.alert-radio-label {\n  -webkit-padding-start: 52px;\n  padding-inline-start: 52px;\n  -webkit-padding-end: 26px;\n  padding-inline-end: 26px;\n  padding-top: 13px;\n  padding-bottom: 13px;\n  flex: 1;\n  color: var(--ion-color-step-850, var(--ion-text-color-step-150, #262626));\n  font-size: 1rem;\n}\n\n.alert-radio-icon {\n  top: 0;\n  border-radius: 50%;\n  display: block;\n  position: relative;\n  width: 20px;\n  height: 20px;\n  border-width: 2px;\n  border-style: solid;\n  border-color: var(--ion-color-step-550, var(--ion-background-color-step-550, #737373));\n}\n.alert-radio-icon {\n  inset-inline-start: 26px;\n}\n\n.alert-radio-inner {\n  top: 3px;\n  border-radius: 50%;\n  position: absolute;\n  width: 10px;\n  height: 10px;\n  transform: scale3d(0, 0, 0);\n  transition: transform 280ms cubic-bezier(0.4, 0, 0.2, 1);\n  background-color: var(--ion-color-primary, #0054e9);\n}\n.alert-radio-inner {\n  inset-inline-start: 3px;\n}\n\n[aria-checked=true] .alert-radio-label {\n  color: var(--ion-color-step-850, var(--ion-text-color-step-150, #262626));\n}\n\n[aria-checked=true] .alert-radio-icon {\n  border-color: var(--ion-color-primary, #0054e9);\n}\n\n[aria-checked=true] .alert-radio-inner {\n  transform: scale3d(1, 1, 1);\n}\n\n.alert-checkbox-label {\n  -webkit-padding-start: 53px;\n  padding-inline-start: 53px;\n  -webkit-padding-end: 26px;\n  padding-inline-end: 26px;\n  padding-top: 13px;\n  padding-bottom: 13px;\n  flex: 1;\n  width: calc(100% - 53px);\n  color: var(--ion-color-step-850, var(--ion-text-color-step-150, #262626));\n  font-size: 1rem;\n}\n\n.alert-checkbox-icon {\n  top: 0;\n  border-radius: 2px;\n  position: relative;\n  width: 16px;\n  height: 16px;\n  border-width: 2px;\n  border-style: solid;\n  border-color: var(--ion-color-step-550, var(--ion-background-color-step-550, #737373));\n  contain: strict;\n}\n.alert-checkbox-icon {\n  inset-inline-start: 26px;\n}\n\n[aria-checked=true] .alert-checkbox-icon {\n  border-color: var(--ion-color-primary, #0054e9);\n  background-color: var(--ion-color-primary, #0054e9);\n}\n\n[aria-checked=true] .alert-checkbox-inner {\n  top: 0;\n  position: absolute;\n  width: 6px;\n  height: 10px;\n  transform: rotate(45deg);\n  border-width: 2px;\n  border-top-width: 0;\n  border-left-width: 0;\n  border-style: solid;\n  border-color: var(--ion-color-primary-contrast, #fff);\n}\n[aria-checked=true] .alert-checkbox-inner {\n  inset-inline-start: 3px;\n}\n\n.alert-button-group {\n  -webkit-padding-start: 8px;\n  padding-inline-start: 8px;\n  -webkit-padding-end: 8px;\n  padding-inline-end: 8px;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  box-sizing: border-box;\n  flex-wrap: wrap-reverse;\n  justify-content: flex-end;\n}\n\n.alert-button {\n  border-radius: 2px;\n  -webkit-margin-start: 0;\n  margin-inline-start: 0;\n  -webkit-margin-end: 8px;\n  margin-inline-end: 8px;\n  margin-top: 0;\n  margin-bottom: 0;\n  -webkit-padding-start: 10px;\n  padding-inline-start: 10px;\n  -webkit-padding-end: 10px;\n  padding-inline-end: 10px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  position: relative;\n  background-color: transparent;\n  color: var(--ion-color-primary, #0054e9);\n  font-weight: 500;\n  text-align: end;\n  text-transform: uppercase;\n  overflow: hidden;\n}\n\n.alert-button-inner {\n  justify-content: flex-end;\n}\n\n/**\n * MD alerts should scale up to 560px x 560px\n * on tablet dimensions.\n */\n@media screen and (min-width: 768px) {\n  :host {\n    --max-width: min(100vw - 96px, 560px);\n    --max-height: min(100vh - 96px, 560px);\n  }\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, forceUpdate, h } from \"@stencil/core\";\nimport { ENABLE_HTML_CONTENT_DEFAULT } from \"../../utils/config\";\nimport { createButtonActiveGesture } from \"../../utils/gesture/button-active\";\nimport { raf } from \"../../utils/helpers\";\nimport { createLockController } from \"../../utils/lock-controller\";\nimport { createDelegateController, createTriggerController, BACKDROP, dismiss, eventMethod, isCancel, prepareOverlay, present, safeCall, setOverlayId, } from \"../../utils/overlays\";\nimport { sanitizeDOMString } from \"../../utils/sanitization/index\";\nimport { getClassMap } from \"../../utils/theme\";\nimport { config } from \"../../global/config\";\nimport { getIonMode } from \"../../global/ionic-global\";\nimport { iosEnterAnimation } from \"./animations/ios.enter\";\nimport { iosLeaveAnimation } from \"./animations/ios.leave\";\nimport { mdEnterAnimation } from \"./animations/md.enter\";\nimport { mdLeaveAnimation } from \"./animations/md.leave\";\n// TODO(FW-2832): types\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n */\nexport class Alert {\n    constructor() {\n        this.delegateController = createDelegateController(this);\n        this.lockController = createLockController();\n        this.triggerController = createTriggerController();\n        this.customHTMLEnabled = config.get('innerHTMLTemplatesEnabled', ENABLE_HTML_CONTENT_DEFAULT);\n        this.processedInputs = [];\n        this.processedButtons = [];\n        this.presented = false;\n        this.onBackdropTap = () => {\n            this.dismiss(undefined, BACKDROP);\n        };\n        this.dispatchCancelHandler = (ev) => {\n            const role = ev.detail.role;\n            if (isCancel(role)) {\n                const cancelButton = this.processedButtons.find((b) => b.role === 'cancel');\n                this.callButtonHandler(cancelButton);\n            }\n        };\n        this.overlayIndex = undefined;\n        this.delegate = undefined;\n        this.hasController = false;\n        this.keyboardClose = true;\n        this.enterAnimation = undefined;\n        this.leaveAnimation = undefined;\n        this.cssClass = undefined;\n        this.header = undefined;\n        this.subHeader = undefined;\n        this.message = undefined;\n        this.buttons = [];\n        this.inputs = [];\n        this.backdropDismiss = true;\n        this.translucent = false;\n        this.animated = true;\n        this.htmlAttributes = undefined;\n        this.isOpen = false;\n        this.trigger = undefined;\n    }\n    onIsOpenChange(newValue, oldValue) {\n        if (newValue === true && oldValue === false) {\n            this.present();\n        }\n        else if (newValue === false && oldValue === true) {\n            this.dismiss();\n        }\n    }\n    triggerChanged() {\n        const { trigger, el, triggerController } = this;\n        if (trigger) {\n            triggerController.addClickListener(el, trigger);\n        }\n    }\n    onKeydown(ev) {\n        const inputTypes = new Set(this.processedInputs.map((i) => i.type));\n        /**\n         * Based on keyboard navigation requirements, the\n         * checkbox should not respond to the enter keydown event.\n         */\n        if (inputTypes.has('checkbox') && ev.key === 'Enter') {\n            ev.preventDefault();\n            return;\n        }\n        // The only inputs we want to navigate between using arrow keys are the radios\n        // ignore the keydown event if it is not on a radio button\n        if (!inputTypes.has('radio') ||\n            (ev.target && !this.el.contains(ev.target)) ||\n            ev.target.classList.contains('alert-button')) {\n            return;\n        }\n        // Get all radios inside of the radio group and then\n        // filter out disabled radios since we need to skip those\n        const query = this.el.querySelectorAll('.alert-radio');\n        const radios = Array.from(query).filter((radio) => !radio.disabled);\n        // The focused radio is the one that shares the same id as\n        // the event target\n        const index = radios.findIndex((radio) => radio.id === ev.target.id);\n        // We need to know what the next radio element should\n        // be in order to change the focus\n        let nextEl;\n        // If hitting arrow down or arrow right, move to the next radio\n        // If we're on the last radio, move to the first radio\n        if (['ArrowDown', 'ArrowRight'].includes(ev.key)) {\n            nextEl = index === radios.length - 1 ? radios[0] : radios[index + 1];\n        }\n        // If hitting arrow up or arrow left, move to the previous radio\n        // If we're on the first radio, move to the last radio\n        if (['ArrowUp', 'ArrowLeft'].includes(ev.key)) {\n            nextEl = index === 0 ? radios[radios.length - 1] : radios[index - 1];\n        }\n        if (nextEl && radios.includes(nextEl)) {\n            const nextProcessed = this.processedInputs.find((input) => input.id === (nextEl === null || nextEl === void 0 ? void 0 : nextEl.id));\n            if (nextProcessed) {\n                this.rbClick(nextProcessed);\n                nextEl.focus();\n            }\n        }\n    }\n    buttonsChanged() {\n        const buttons = this.buttons;\n        this.processedButtons = buttons.map((btn) => {\n            return typeof btn === 'string' ? { text: btn, role: btn.toLowerCase() === 'cancel' ? 'cancel' : undefined } : btn;\n        });\n    }\n    inputsChanged() {\n        const inputs = this.inputs;\n        // Get the first input that is not disabled and the checked one\n        // If an enabled checked input exists, set it to be the focusable input\n        // otherwise we default to focus the first input\n        // This will only be used when the input is type radio\n        const first = inputs.find((input) => !input.disabled);\n        const checked = inputs.find((input) => input.checked && !input.disabled);\n        const focusable = checked || first;\n        // An alert can be created with several different inputs. Radios,\n        // checkboxes and inputs are all accepted, but they cannot be mixed.\n        const inputTypes = new Set(inputs.map((i) => i.type));\n        if (inputTypes.has('checkbox') && inputTypes.has('radio')) {\n            console.warn(`Alert cannot mix input types: ${Array.from(inputTypes.values()).join('/')}. Please see alert docs for more info.`);\n        }\n        this.inputType = inputTypes.values().next().value;\n        this.processedInputs = inputs.map((i, index) => {\n            var _a;\n            return ({\n                type: i.type || 'text',\n                name: i.name || `${index}`,\n                placeholder: i.placeholder || '',\n                value: i.value,\n                label: i.label,\n                checked: !!i.checked,\n                disabled: !!i.disabled,\n                id: i.id || `alert-input-${this.overlayIndex}-${index}`,\n                handler: i.handler,\n                min: i.min,\n                max: i.max,\n                cssClass: (_a = i.cssClass) !== null && _a !== void 0 ? _a : '',\n                attributes: i.attributes || {},\n                tabindex: i.type === 'radio' && i !== focusable ? -1 : 0,\n            });\n        });\n    }\n    connectedCallback() {\n        prepareOverlay(this.el);\n        this.triggerChanged();\n    }\n    componentWillLoad() {\n        setOverlayId(this.el);\n        this.inputsChanged();\n        this.buttonsChanged();\n    }\n    disconnectedCallback() {\n        this.triggerController.removeClickListener();\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n    }\n    componentDidLoad() {\n        /**\n         * Only create gesture if:\n         * 1. A gesture does not already exist\n         * 2. App is running in iOS mode\n         * 3. A wrapper ref exists\n         */\n        if (!this.gesture && getIonMode(this) === 'ios' && this.wrapperEl) {\n            this.gesture = createButtonActiveGesture(this.wrapperEl, (refEl) => refEl.classList.contains('alert-button'));\n            this.gesture.enable(true);\n        }\n        /**\n         * If alert was rendered with isOpen=\"true\"\n         * then we should open alert immediately.\n         */\n        if (this.isOpen === true) {\n            raf(() => this.present());\n        }\n        /**\n         * When binding values in frameworks such as Angular\n         * it is possible for the value to be set after the Web Component\n         * initializes but before the value watcher is set up in Stencil.\n         * As a result, the watcher callback may not be fired.\n         * We work around this by manually calling the watcher\n         * callback when the component has loaded and the watcher\n         * is configured.\n         */\n        this.triggerChanged();\n    }\n    /**\n     * Present the alert overlay after it has been created.\n     */\n    async present() {\n        const unlock = await this.lockController.lock();\n        await this.delegateController.attachViewToDom();\n        await present(this, 'alertEnter', iosEnterAnimation, mdEnterAnimation);\n        unlock();\n    }\n    /**\n     * Dismiss the alert overlay after it has been presented.\n     *\n     * @param data Any data to emit in the dismiss events.\n     * @param role The role of the element that is dismissing the alert.\n     * This can be useful in a button handler for determining which button was\n     * clicked to dismiss the alert.\n     * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n     *\n     * This is a no-op if the overlay has not been presented yet. If you want\n     * to remove an overlay from the DOM that was never presented, use the\n     * [remove](https://developer.mozilla.org/en-US/docs/Web/API/Element/remove) method.\n     */\n    async dismiss(data, role) {\n        const unlock = await this.lockController.lock();\n        const dismissed = await dismiss(this, data, role, 'alertLeave', iosLeaveAnimation, mdLeaveAnimation);\n        if (dismissed) {\n            this.delegateController.removeViewFromDom();\n        }\n        unlock();\n        return dismissed;\n    }\n    /**\n     * Returns a promise that resolves when the alert did dismiss.\n     */\n    onDidDismiss() {\n        return eventMethod(this.el, 'ionAlertDidDismiss');\n    }\n    /**\n     * Returns a promise that resolves when the alert will dismiss.\n     */\n    onWillDismiss() {\n        return eventMethod(this.el, 'ionAlertWillDismiss');\n    }\n    rbClick(selectedInput) {\n        for (const input of this.processedInputs) {\n            input.checked = input === selectedInput;\n            input.tabindex = input === selectedInput ? 0 : -1;\n        }\n        this.activeId = selectedInput.id;\n        safeCall(selectedInput.handler, selectedInput);\n        forceUpdate(this);\n    }\n    cbClick(selectedInput) {\n        selectedInput.checked = !selectedInput.checked;\n        safeCall(selectedInput.handler, selectedInput);\n        forceUpdate(this);\n    }\n    async buttonClick(button) {\n        const role = button.role;\n        const values = this.getValues();\n        if (isCancel(role)) {\n            return this.dismiss({ values }, role);\n        }\n        const returnData = await this.callButtonHandler(button, values);\n        if (returnData !== false) {\n            return this.dismiss(Object.assign({ values }, returnData), button.role);\n        }\n        return false;\n    }\n    async callButtonHandler(button, data) {\n        if (button === null || button === void 0 ? void 0 : button.handler) {\n            // a handler has been provided, execute it\n            // pass the handler the values from the inputs\n            const returnData = await safeCall(button.handler, data);\n            if (returnData === false) {\n                // if the return value of the handler is false then do not dismiss\n                return false;\n            }\n            if (typeof returnData === 'object') {\n                return returnData;\n            }\n        }\n        return {};\n    }\n    getValues() {\n        if (this.processedInputs.length === 0) {\n            // this is an alert without any options/inputs at all\n            return undefined;\n        }\n        if (this.inputType === 'radio') {\n            // this is an alert with radio buttons (single value select)\n            // return the one value which is checked, otherwise undefined\n            const checkedInput = this.processedInputs.find((i) => !!i.checked);\n            return checkedInput ? checkedInput.value : undefined;\n        }\n        if (this.inputType === 'checkbox') {\n            // this is an alert with checkboxes (multiple value select)\n            // return an array of all the checked values\n            return this.processedInputs.filter((i) => i.checked).map((i) => i.value);\n        }\n        // this is an alert with text inputs\n        // return an object of all the values with the input name as the key\n        const values = {};\n        this.processedInputs.forEach((i) => {\n            values[i.name] = i.value || '';\n        });\n        return values;\n    }\n    renderAlertInputs() {\n        switch (this.inputType) {\n            case 'checkbox':\n                return this.renderCheckbox();\n            case 'radio':\n                return this.renderRadio();\n            default:\n                return this.renderInput();\n        }\n    }\n    renderCheckbox() {\n        const inputs = this.processedInputs;\n        const mode = getIonMode(this);\n        if (inputs.length === 0) {\n            return null;\n        }\n        return (h(\"div\", { class: \"alert-checkbox-group\" }, inputs.map((i) => (h(\"button\", { type: \"button\", onClick: () => this.cbClick(i), \"aria-checked\": `${i.checked}`, id: i.id, disabled: i.disabled, tabIndex: i.tabindex, role: \"checkbox\", class: Object.assign(Object.assign({}, getClassMap(i.cssClass)), { 'alert-tappable': true, 'alert-checkbox': true, 'alert-checkbox-button': true, 'ion-focusable': true, 'alert-checkbox-button-disabled': i.disabled || false }) }, h(\"div\", { class: \"alert-button-inner\" }, h(\"div\", { class: \"alert-checkbox-icon\" }, h(\"div\", { class: \"alert-checkbox-inner\" })), h(\"div\", { class: \"alert-checkbox-label\" }, i.label)), mode === 'md' && h(\"ion-ripple-effect\", null))))));\n    }\n    renderRadio() {\n        const inputs = this.processedInputs;\n        if (inputs.length === 0) {\n            return null;\n        }\n        return (h(\"div\", { class: \"alert-radio-group\", role: \"radiogroup\", \"aria-activedescendant\": this.activeId }, inputs.map((i) => (h(\"button\", { type: \"button\", onClick: () => this.rbClick(i), \"aria-checked\": `${i.checked}`, disabled: i.disabled, id: i.id, tabIndex: i.tabindex, class: Object.assign(Object.assign({}, getClassMap(i.cssClass)), { 'alert-radio-button': true, 'alert-tappable': true, 'alert-radio': true, 'ion-focusable': true, 'alert-radio-button-disabled': i.disabled || false }), role: \"radio\" }, h(\"div\", { class: \"alert-button-inner\" }, h(\"div\", { class: \"alert-radio-icon\" }, h(\"div\", { class: \"alert-radio-inner\" })), h(\"div\", { class: \"alert-radio-label\" }, i.label)))))));\n    }\n    renderInput() {\n        const inputs = this.processedInputs;\n        if (inputs.length === 0) {\n            return null;\n        }\n        return (h(\"div\", { class: \"alert-input-group\" }, inputs.map((i) => {\n            var _a, _b, _c, _d;\n            if (i.type === 'textarea') {\n                return (h(\"div\", { class: \"alert-input-wrapper\" }, h(\"textarea\", Object.assign({ placeholder: i.placeholder, value: i.value, id: i.id, tabIndex: i.tabindex }, i.attributes, { disabled: (_b = (_a = i.attributes) === null || _a === void 0 ? void 0 : _a.disabled) !== null && _b !== void 0 ? _b : i.disabled, class: inputClass(i), onInput: (e) => {\n                        var _a;\n                        i.value = e.target.value;\n                        if ((_a = i.attributes) === null || _a === void 0 ? void 0 : _a.onInput) {\n                            i.attributes.onInput(e);\n                        }\n                    } }))));\n            }\n            else {\n                return (h(\"div\", { class: \"alert-input-wrapper\" }, h(\"input\", Object.assign({ placeholder: i.placeholder, type: i.type, min: i.min, max: i.max, value: i.value, id: i.id, tabIndex: i.tabindex }, i.attributes, { disabled: (_d = (_c = i.attributes) === null || _c === void 0 ? void 0 : _c.disabled) !== null && _d !== void 0 ? _d : i.disabled, class: inputClass(i), onInput: (e) => {\n                        var _a;\n                        i.value = e.target.value;\n                        if ((_a = i.attributes) === null || _a === void 0 ? void 0 : _a.onInput) {\n                            i.attributes.onInput(e);\n                        }\n                    } }))));\n            }\n        })));\n    }\n    renderAlertButtons() {\n        const buttons = this.processedButtons;\n        const mode = getIonMode(this);\n        const alertButtonGroupClass = {\n            'alert-button-group': true,\n            'alert-button-group-vertical': buttons.length > 2,\n        };\n        return (h(\"div\", { class: alertButtonGroupClass }, buttons.map((button) => (h(\"button\", Object.assign({}, button.htmlAttributes, { type: \"button\", id: button.id, class: buttonClass(button), tabIndex: 0, onClick: () => this.buttonClick(button) }), h(\"span\", { class: \"alert-button-inner\" }, button.text), mode === 'md' && h(\"ion-ripple-effect\", null))))));\n    }\n    renderAlertMessage(msgId) {\n        const { customHTMLEnabled, message } = this;\n        if (customHTMLEnabled) {\n            return h(\"div\", { id: msgId, class: \"alert-message\", innerHTML: sanitizeDOMString(message) });\n        }\n        return (h(\"div\", { id: msgId, class: \"alert-message\" }, message));\n    }\n    render() {\n        const { overlayIndex, header, subHeader, message, htmlAttributes } = this;\n        const mode = getIonMode(this);\n        const hdrId = `alert-${overlayIndex}-hdr`;\n        const subHdrId = `alert-${overlayIndex}-sub-hdr`;\n        const msgId = `alert-${overlayIndex}-msg`;\n        const role = this.inputs.length > 0 || this.buttons.length > 0 ? 'alertdialog' : 'alert';\n        /**\n         * If the header is defined, use that. Otherwise, fall back to the subHeader.\n         * If neither is defined, don't set aria-labelledby.\n         */\n        const ariaLabelledBy = header ? hdrId : subHeader ? subHdrId : null;\n        return (h(Host, Object.assign({ key: 'b1875ea565c40a25915e26e61864f8c61d840ccc', role: role, \"aria-modal\": \"true\", \"aria-labelledby\": ariaLabelledBy, \"aria-describedby\": message !== undefined ? msgId : null, tabindex: \"-1\" }, htmlAttributes, { style: {\n                zIndex: `${20000 + overlayIndex}`,\n            }, class: Object.assign(Object.assign({}, getClassMap(this.cssClass)), { [mode]: true, 'overlay-hidden': true, 'alert-translucent': this.translucent }), onIonAlertWillDismiss: this.dispatchCancelHandler, onIonBackdropTap: this.onBackdropTap }), h(\"ion-backdrop\", { key: '37d9d7d1a47bfa23c3bb8d8d9805f52a5bbedf61', tappable: this.backdropDismiss }), h(\"div\", { key: '0134cc90b7f02dcdd13dfdc39a72f2259182de90', tabindex: \"0\" }), h(\"div\", { key: 'ed054b063ec2d1847b3234d5bdf3e66054784ed7', class: \"alert-wrapper ion-overlay-wrapper\", ref: (el) => (this.wrapperEl = el) }, h(\"div\", { key: 'fb81befae081424f03c64b434ffdd79bb1b00d0c', class: \"alert-head\" }, header && (h(\"h2\", { key: '92596dfdd92c4f63c82ed86b4a2473b3110daae3', id: hdrId, class: \"alert-title\" }, header)), subHeader && (h(\"h2\", { key: 'ba7a0734cf818224f453604ec638770ca61bfef6', id: subHdrId, class: \"alert-sub-title\" }, subHeader))), this.renderAlertMessage(msgId), this.renderAlertInputs(), this.renderAlertButtons()), h(\"div\", { key: '41a2619836a4af5d158216ef14b49985c7941b78', tabindex: \"0\" })));\n    }\n    static get is() { return \"ion-alert\"; }\n    static get encapsulation() { return \"scoped\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"alert.ios.scss\"],\n            \"md\": [\"alert.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"alert.ios.css\"],\n            \"md\": [\"alert.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"overlayIndex\": {\n                \"type\": \"number\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number\",\n                    \"references\": {}\n                },\n                \"required\": true,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                },\n                \"attribute\": \"overlay-index\",\n                \"reflect\": false\n            },\n            \"delegate\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"FrameworkDelegate\",\n                    \"resolved\": \"FrameworkDelegate | undefined\",\n                    \"references\": {\n                        \"FrameworkDelegate\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::FrameworkDelegate\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                }\n            },\n            \"hasController\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                },\n                \"attribute\": \"has-controller\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"keyboardClose\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the keyboard will be automatically dismissed when the overlay is presented.\"\n                },\n                \"attribute\": \"keyboard-close\",\n                \"reflect\": false,\n                \"defaultValue\": \"true\"\n            },\n            \"enterAnimation\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"AnimationBuilder\",\n                    \"resolved\": \"((baseEl: any, opts?: any) => Animation) | undefined\",\n                    \"references\": {\n                        \"AnimationBuilder\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::AnimationBuilder\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Animation to use when the alert is presented.\"\n                }\n            },\n            \"leaveAnimation\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"AnimationBuilder\",\n                    \"resolved\": \"((baseEl: any, opts?: any) => Animation) | undefined\",\n                    \"references\": {\n                        \"AnimationBuilder\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::AnimationBuilder\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Animation to use when the alert is dismissed.\"\n                }\n            },\n            \"cssClass\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | string[]\",\n                    \"resolved\": \"string | string[] | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Additional classes to apply for custom CSS. If multiple classes are\\nprovided they should be separated by spaces.\"\n                },\n                \"attribute\": \"css-class\",\n                \"reflect\": false\n            },\n            \"header\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The main title in the heading of the alert.\"\n                },\n                \"attribute\": \"header\",\n                \"reflect\": false\n            },\n            \"subHeader\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The subtitle in the heading of the alert. Displayed under the title.\"\n                },\n                \"attribute\": \"sub-header\",\n                \"reflect\": false\n            },\n            \"message\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | IonicSafeString\",\n                    \"resolved\": \"IonicSafeString | string | undefined\",\n                    \"references\": {\n                        \"IonicSafeString\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/sanitization\",\n                            \"id\": \"src/utils/sanitization/index.ts::IonicSafeString\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The main message to be displayed in the alert.\\n`message` can accept either plaintext or HTML as a string.\\nTo display characters normally reserved for HTML, they\\nmust be escaped. For example `<Ionic>` would become\\n`&lt;Ionic&gt;`\\n\\nFor more information: [Security Documentation](https://ionicframework.com/docs/faq/security)\\n\\nThis property accepts custom HTML as a string.\\nContent is parsed as plaintext by default.\\n`innerHTMLTemplatesEnabled` must be set to `true` in the Ionic config\\nbefore custom HTML can be used.\"\n                },\n                \"attribute\": \"message\",\n                \"reflect\": false\n            },\n            \"buttons\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"(AlertButton | string)[]\",\n                    \"resolved\": \"(string | AlertButton)[]\",\n                    \"references\": {\n                        \"AlertButton\": {\n                            \"location\": \"import\",\n                            \"path\": \"./alert-interface\",\n                            \"id\": \"src/components/alert/alert-interface.ts::AlertButton\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Array of buttons to be added to the alert.\"\n                },\n                \"defaultValue\": \"[]\"\n            },\n            \"inputs\": {\n                \"type\": \"unknown\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"AlertInput[]\",\n                    \"resolved\": \"AlertInput[]\",\n                    \"references\": {\n                        \"AlertInput\": {\n                            \"location\": \"import\",\n                            \"path\": \"./alert-interface\",\n                            \"id\": \"src/components/alert/alert-interface.ts::AlertInput\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Array of input to show in the alert.\"\n                },\n                \"defaultValue\": \"[]\"\n            },\n            \"backdropDismiss\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the alert will be dismissed when the backdrop is clicked.\"\n                },\n                \"attribute\": \"backdrop-dismiss\",\n                \"reflect\": false,\n                \"defaultValue\": \"true\"\n            },\n            \"translucent\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the alert will be translucent.\\nOnly applies when the mode is `\\\"ios\\\"` and the device supports\\n[`backdrop-filter`](https://developer.mozilla.org/en-US/docs/Web/CSS/backdrop-filter#Browser_compatibility).\"\n                },\n                \"attribute\": \"translucent\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"animated\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the alert will animate.\"\n                },\n                \"attribute\": \"animated\",\n                \"reflect\": false,\n                \"defaultValue\": \"true\"\n            },\n            \"htmlAttributes\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"{ [key: string]: any }\",\n                    \"resolved\": \"undefined | { [key: string]: any; }\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Additional attributes to pass to the alert.\"\n                }\n            },\n            \"isOpen\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the alert will open. If `false`, the alert will close.\\nUse this if you need finer grained control over presentation, otherwise\\njust use the alertController or the `trigger` property.\\nNote: `isOpen` will not automatically be set back to `false` when\\nthe alert dismisses. You will need to do that in your code.\"\n                },\n                \"attribute\": \"is-open\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"trigger\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | undefined\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"An ID corresponding to the trigger element that\\ncauses the alert to open when clicked.\"\n                },\n                \"attribute\": \"trigger\",\n                \"reflect\": false\n            }\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"didPresent\",\n                \"name\": \"ionAlertDidPresent\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted after the alert has presented.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"willPresent\",\n                \"name\": \"ionAlertWillPresent\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted before the alert has presented.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"willDismiss\",\n                \"name\": \"ionAlertWillDismiss\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted before the alert has dismissed.\"\n                },\n                \"complexType\": {\n                    \"original\": \"OverlayEventDetail\",\n                    \"resolved\": \"OverlayEventDetail<any>\",\n                    \"references\": {\n                        \"OverlayEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/overlays-interface\",\n                            \"id\": \"src/utils/overlays-interface.ts::OverlayEventDetail\"\n                        }\n                    }\n                }\n            }, {\n                \"method\": \"didDismiss\",\n                \"name\": \"ionAlertDidDismiss\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted after the alert has dismissed.\"\n                },\n                \"complexType\": {\n                    \"original\": \"OverlayEventDetail\",\n                    \"resolved\": \"OverlayEventDetail<any>\",\n                    \"references\": {\n                        \"OverlayEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/overlays-interface\",\n                            \"id\": \"src/utils/overlays-interface.ts::OverlayEventDetail\"\n                        }\n                    }\n                }\n            }, {\n                \"method\": \"didPresentShorthand\",\n                \"name\": \"didPresent\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted after the alert has presented.\\nShorthand for ionAlertWillDismiss.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"willPresentShorthand\",\n                \"name\": \"willPresent\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted before the alert has presented.\\nShorthand for ionAlertWillPresent.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"willDismissShorthand\",\n                \"name\": \"willDismiss\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted before the alert has dismissed.\\nShorthand for ionAlertWillDismiss.\"\n                },\n                \"complexType\": {\n                    \"original\": \"OverlayEventDetail\",\n                    \"resolved\": \"OverlayEventDetail<any>\",\n                    \"references\": {\n                        \"OverlayEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/overlays-interface\",\n                            \"id\": \"src/utils/overlays-interface.ts::OverlayEventDetail\"\n                        }\n                    }\n                }\n            }, {\n                \"method\": \"didDismissShorthand\",\n                \"name\": \"didDismiss\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted after the alert has dismissed.\\nShorthand for ionAlertDidDismiss.\"\n                },\n                \"complexType\": {\n                    \"original\": \"OverlayEventDetail\",\n                    \"resolved\": \"OverlayEventDetail<any>\",\n                    \"references\": {\n                        \"OverlayEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/overlays-interface\",\n                            \"id\": \"src/utils/overlays-interface.ts::OverlayEventDetail\"\n                        }\n                    }\n                }\n            }];\n    }\n    static get methods() {\n        return {\n            \"present\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<void>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Present the alert overlay after it has been created.\",\n                    \"tags\": []\n                }\n            },\n            \"dismiss\": {\n                \"complexType\": {\n                    \"signature\": \"(data?: any, role?: string) => Promise<boolean>\",\n                    \"parameters\": [{\n                            \"name\": \"data\",\n                            \"type\": \"any\",\n                            \"docs\": \"Any data to emit in the dismiss events.\"\n                        }, {\n                            \"name\": \"role\",\n                            \"type\": \"string | undefined\",\n                            \"docs\": \"The role of the element that is dismissing the alert.\\nThis can be useful in a button handler for determining which button was\\nclicked to dismiss the alert.\\nSome examples include: ``\\\"cancel\\\"`, `\\\"destructive\\\"`, \\\"selected\\\"`, and `\\\"backdrop\\\"`.\\n\\nThis is a no-op if the overlay has not been presented yet. If you want\\nto remove an overlay from the DOM that was never presented, use the\\n[remove](https://developer.mozilla.org/en-US/docs/Web/API/Element/remove) method.\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<boolean>\"\n                },\n                \"docs\": {\n                    \"text\": \"Dismiss the alert overlay after it has been presented.\",\n                    \"tags\": [{\n                            \"name\": \"param\",\n                            \"text\": \"data Any data to emit in the dismiss events.\"\n                        }, {\n                            \"name\": \"param\",\n                            \"text\": \"role The role of the element that is dismissing the alert.\\nThis can be useful in a button handler for determining which button was\\nclicked to dismiss the alert.\\nSome examples include: ``\\\"cancel\\\"`, `\\\"destructive\\\"`, \\\"selected\\\"`, and `\\\"backdrop\\\"`.\\n\\nThis is a no-op if the overlay has not been presented yet. If you want\\nto remove an overlay from the DOM that was never presented, use the\\n[remove](https://developer.mozilla.org/en-US/docs/Web/API/Element/remove) method.\"\n                        }]\n                }\n            },\n            \"onDidDismiss\": {\n                \"complexType\": {\n                    \"signature\": \"<T = any>() => Promise<OverlayEventDetail<T>>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        },\n                        \"OverlayEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/overlays-interface\",\n                            \"id\": \"src/utils/overlays-interface.ts::OverlayEventDetail\"\n                        },\n                        \"T\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::T\"\n                        }\n                    },\n                    \"return\": \"Promise<OverlayEventDetail<T>>\"\n                },\n                \"docs\": {\n                    \"text\": \"Returns a promise that resolves when the alert did dismiss.\",\n                    \"tags\": []\n                }\n            },\n            \"onWillDismiss\": {\n                \"complexType\": {\n                    \"signature\": \"<T = any>() => Promise<OverlayEventDetail<T>>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        },\n                        \"OverlayEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/overlays-interface\",\n                            \"id\": \"src/utils/overlays-interface.ts::OverlayEventDetail\"\n                        },\n                        \"T\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::T\"\n                        }\n                    },\n                    \"return\": \"Promise<OverlayEventDetail<T>>\"\n                },\n                \"docs\": {\n                    \"text\": \"Returns a promise that resolves when the alert will dismiss.\",\n                    \"tags\": []\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"isOpen\",\n                \"methodName\": \"onIsOpenChange\"\n            }, {\n                \"propName\": \"trigger\",\n                \"methodName\": \"triggerChanged\"\n            }, {\n                \"propName\": \"buttons\",\n                \"methodName\": \"buttonsChanged\"\n            }, {\n                \"propName\": \"inputs\",\n                \"methodName\": \"inputsChanged\"\n            }];\n    }\n    static get listeners() {\n        return [{\n                \"name\": \"keydown\",\n                \"method\": \"onKeydown\",\n                \"target\": \"document\",\n                \"capture\": false,\n                \"passive\": false\n            }];\n    }\n}\nconst inputClass = (input) => {\n    var _a, _b, _c;\n    return Object.assign(Object.assign({ 'alert-input': true, 'alert-input-disabled': ((_b = (_a = input.attributes) === null || _a === void 0 ? void 0 : _a.disabled) !== null && _b !== void 0 ? _b : input.disabled) || false }, getClassMap(input.cssClass)), getClassMap(input.attributes ? (_c = input.attributes.class) === null || _c === void 0 ? void 0 : _c.toString() : ''));\n};\nconst buttonClass = (button) => {\n    return Object.assign({ 'alert-button': true, 'ion-focusable': true, 'ion-activatable': true, [`alert-button-role-${button.role}`]: button.role !== undefined }, getClassMap(button.cssClass));\n};\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host ion-list {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\nion-list-header,\nion-label {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n/**\n * The main content inside of a popover has overflow: hidden\n * so that a descendant ion-content can be scrolled.\n * However, select-popover does not use ion-content so we need\n * to explicitly make this container scrollable.\n */\n:host {\n  overflow-y: auto;\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host ion-list {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\nion-list-header,\nion-label {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n/**\n * The main content inside of a popover has overflow: hidden\n * so that a descendant ion-content can be scrolled.\n * However, select-popover does not use ion-content so we need\n * to explicitly make this container scrollable.\n */\n:host {\n  overflow-y: auto;\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\nion-list ion-radio::part(container) {\n  opacity: 0;\n}\n\nion-item {\n  --inner-border-width: 0;\n}\n\n.item-radio-checked {\n  --background: rgba(var(--ion-color-primary-rgb, 0, 84, 233), 0.08);\n  --background-focused: var(--ion-color-primary, #0054e9);\n  --background-focused-opacity: 0.2;\n  --background-hover: var(--ion-color-primary, #0054e9);\n  --background-hover-opacity: 0.12;\n}\n\n.item-checkbox-checked {\n  --background-activated: var(--ion-item-color, var(--ion-text-color, #000));\n  --background-focused: var(--ion-item-color, var(--ion-text-color, #000));\n  --background-hover: var(--ion-item-color, var(--ion-text-color, #000));\n  --color: var(--ion-color-primary, #0054e9);\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h, forceUpdate } from \"@stencil/core\";\nimport { safeCall } from \"../../utils/overlays\";\nimport { getClassMap } from \"../../utils/theme\";\nimport { getIonMode } from \"../../global/ionic-global\";\n/**\n * @internal\n */\nexport class SelectPopover {\n    constructor() {\n        this.header = undefined;\n        this.subHeader = undefined;\n        this.message = undefined;\n        this.multiple = undefined;\n        this.options = [];\n    }\n    findOptionFromEvent(ev) {\n        const { options } = this;\n        return options.find((o) => o.value === ev.target.value);\n    }\n    /**\n     * When an option is selected we need to get the value(s)\n     * of the selected option(s) and return it in the option\n     * handler\n     */\n    callOptionHandler(ev) {\n        const option = this.findOptionFromEvent(ev);\n        const values = this.getValues(ev);\n        if (option === null || option === void 0 ? void 0 : option.handler) {\n            safeCall(option.handler, values);\n        }\n    }\n    /**\n     * Dismisses the host popover that the `ion-select-popover`\n     * is rendered within.\n     */\n    dismissParentPopover() {\n        const popover = this.el.closest('ion-popover');\n        if (popover) {\n            popover.dismiss();\n        }\n    }\n    setChecked(ev) {\n        const { multiple } = this;\n        const option = this.findOptionFromEvent(ev);\n        // this is a popover with checkboxes (multiple value select)\n        // we need to set the checked value for this option\n        if (multiple && option) {\n            option.checked = ev.detail.checked;\n        }\n    }\n    getValues(ev) {\n        const { multiple, options } = this;\n        if (multiple) {\n            // this is a popover with checkboxes (multiple value select)\n            // return an array of all the checked values\n            return options.filter((o) => o.checked).map((o) => o.value);\n        }\n        // this is a popover with radio buttons (single value select)\n        // return the value that was clicked, otherwise undefined\n        const option = this.findOptionFromEvent(ev);\n        return option ? option.value : undefined;\n    }\n    renderOptions(options) {\n        const { multiple } = this;\n        switch (multiple) {\n            case true:\n                return this.renderCheckboxOptions(options);\n            default:\n                return this.renderRadioOptions(options);\n        }\n    }\n    renderCheckboxOptions(options) {\n        return options.map((option) => (h(\"ion-item\", { class: Object.assign({\n                // TODO FW-4784\n                'item-checkbox-checked': option.checked\n            }, getClassMap(option.cssClass)) }, h(\"ion-checkbox\", { value: option.value, disabled: option.disabled, checked: option.checked, justify: \"start\", labelPlacement: \"end\", onIonChange: (ev) => {\n                this.setChecked(ev);\n                this.callOptionHandler(ev);\n                // TODO FW-4784\n                forceUpdate(this);\n            } }, option.text))));\n    }\n    renderRadioOptions(options) {\n        const checked = options.filter((o) => o.checked).map((o) => o.value)[0];\n        return (h(\"ion-radio-group\", { value: checked, onIonChange: (ev) => this.callOptionHandler(ev) }, options.map((option) => (h(\"ion-item\", { class: Object.assign({\n                // TODO FW-4784\n                'item-radio-checked': option.value === checked\n            }, getClassMap(option.cssClass)) }, h(\"ion-radio\", { value: option.value, disabled: option.disabled, onClick: () => this.dismissParentPopover(), onKeyUp: (ev) => {\n                if (ev.key === ' ') {\n                    /**\n                     * Selecting a radio option with keyboard navigation,\n                     * either through the Enter or Space keys, should\n                     * dismiss the popover.\n                     */\n                    this.dismissParentPopover();\n                }\n            } }, option.text))))));\n    }\n    render() {\n        const { header, message, options, subHeader } = this;\n        const hasSubHeaderOrMessage = subHeader !== undefined || message !== undefined;\n        return (h(Host, { key: '2ed838c17d47198c697164a0a750aafb6ca61a95', class: getIonMode(this) }, h(\"ion-list\", { key: '24fe7a6e9e45458c201b178ca236645d0f49ea8a' }, header !== undefined && h(\"ion-list-header\", { key: 'ebe64853dcd59c14a8f4dc9c2dc9e66d1e9767f6' }, header), hasSubHeaderOrMessage && (h(\"ion-item\", { key: 'ed7c6f2d7e1282b3048df0af8f1e3fd3b08297c6' }, h(\"ion-label\", { key: 'a81f6c4011a0dce47b80c98a45d80b1368d84a1e', class: \"ion-text-wrap\" }, subHeader !== undefined && h(\"h3\", { key: '4fd72c62da896092d535580917bb8a5ad6609c05' }, subHeader), message !== undefined && h(\"p\", { key: '88aead29b35d69743abe4015f96a6fa9f199a0ff' }, message)))), this.renderOptions(options))));\n    }\n    static get is() { return \"ion-select-popover\"; }\n    static get encapsulation() { return \"scoped\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"select-popover.ios.scss\"],\n            \"md\": [\"select-popover.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"select-popover.ios.css\"],\n            \"md\": [\"select-popover.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"header\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The header text of the popover\"\n                },\n                \"attribute\": \"header\",\n                \"reflect\": false\n            },\n            \"subHeader\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The subheader text of the popover\"\n                },\n                \"attribute\": \"sub-header\",\n                \"reflect\": false\n            },\n            \"message\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The text content of the popover body\"\n                },\n                \"attribute\": \"message\",\n                \"reflect\": false\n            },\n            \"multiple\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If true, the select accepts multiple values\"\n                },\n                \"attribute\": \"multiple\",\n                \"reflect\": false\n            },\n            \"options\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"SelectPopoverOption[]\",\n                    \"resolved\": \"SelectPopoverOption[]\",\n                    \"references\": {\n                        \"SelectPopoverOption\": {\n                            \"location\": \"import\",\n                            \"path\": \"./select-popover-interface\",\n                            \"id\": \"src/components/select-popover/select-popover-interface.ts::SelectPopoverOption\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"An array of options for the popover\"\n                },\n                \"defaultValue\": \"[]\"\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n}\n"],"mappings":"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"}