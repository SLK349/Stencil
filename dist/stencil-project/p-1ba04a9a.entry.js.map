{"version":3,"names":["loginFormCss","LoginFormStyle0","LoginForm","this","handleEmailChange","event","email","target","value","handlePasswordChange","password","handleCodeChange","code","handleSubmit","async","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","Error","text","data","json","loginSucess","emit","presentToast","error","loginError","message","toast","toastController","create","duration","cssClass","present","render","h","key","class","onSubmit","type","onInput","myComponentCss","MyComponentStyle0","MyComponent","getText","format","first","middle","last"],"sources":["src/components/login-form/login-form.css?tag=login-form&encapsulation=shadow","src/components/login-form/login-form.tsx","src/components/my-component/my-component.css?tag=my-component&encapsulation=shadow","src/components/my-component/my-component.tsx"],"sourcesContent":[".container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n}\n\nform {\n  display: flex;\n  flex-direction: column;\n  padding: 25px;\n  width: 20%;\n  min-width: 300px;\n  max-width: 500px;\n  border: 1px solid grey;\n  border-radius: 10px;\n}\n\nlabel {\n  margin-bottom: 8px;\n}\n\ninput {\n  padding: 8px;\n  margin-bottom: 16px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n}\n\nbutton {\n  padding: 8px 16px;\n  background-color: #007bff;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background-color: #0056b3;\n}\n","import { Component, h, State, Event, EventEmitter } from '@stencil/core';\nimport { toastController } from '@ionic/core';\nimport './toast.css';\n\n@Component({\n  tag: 'login-form',\n  styleUrl: 'login-form.css',\n  shadow: true,\n})\nexport class LoginForm {\n  @State() email: string = '';\n  @State() password: string = '';\n  @State() code: string = '';\n\n  @Event() loginSucess: EventEmitter;\n  @Event() loginError: EventEmitter;\n\n  private handleEmailChange = (event: Event) => {\n    this.email = (event.target as HTMLInputElement).value;\n  };\n\n  private handlePasswordChange = (event: Event) => {\n    this.password = (event.target as HTMLInputElement).value;\n  };\n\n  private handleCodeChange = (event: Event) => {\n    this.code = (event.target as HTMLInputElement).value;\n  };\n\n  private handleSubmit = async (event: Event) => {\n    event.preventDefault();\n    try {\n      const response = await fetch('http://localhost:3001/api/authenticate', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email: this.email, password: this.password, code: this.code }),\n      });\n      if (!response.ok) {\n        throw new Error(await response.text());\n      }\n      const data = await response.json();\n      this.loginSucess.emit(data);\n      await this.presentToast('Connexion r√©ussie');\n    } catch (error) {\n      this.loginError.emit(error.message);\n      await this.presentToast('Erreur lors de la connexion');\n    }\n  };\n\n  private async presentToast(message: string) {\n    const toast = await toastController.create({\n      message: message,\n      duration: 2500,\n      cssClass: 'toast-message',\n    });\n    await toast.present();\n  }\n\n  render() {\n    return (\n      <div class=\"container\">\n        <form onSubmit={event => this.handleSubmit(event)}>\n          <label>Email</label>\n          <input type=\"email\" value={this.email} onInput={event => this.handleEmailChange(event)} />\n\n          <label>Password</label>\n          <input type=\"password\" value={this.password} onInput={event => this.handlePasswordChange(event)} />\n\n          <label>Code</label>\n          <input type=\"text\" value={this.code} onInput={event => this.handleCodeChange(event)} />\n\n          <button type=\"submit\">Login</button>\n        </form>\n      </div>\n    );\n  }\n}\n",":host {\n  display: block;\n}\n","import { Component, Prop, h } from '@stencil/core';\nimport { format } from '../../utils/utils';\n\n@Component({\n  tag: 'my-component',\n  styleUrl: 'my-component.css',\n  shadow: true,\n})\nexport class MyComponent {\n  /**\n   * The first name\n   */\n  @Prop() first: string;\n\n  /**\n   * The middle name\n   */\n  @Prop() middle: string;\n\n  /**\n   * The last name\n   */\n  @Prop() last: string;\n\n  private getText(): string {\n    return format(this.first, this.middle, this.last);\n  }\n\n  render() {\n    return <div>Hello, World! I'm {this.getText()}</div>;\n  }\n}\n"],"mappings":"kSAAA,MAAMA,EAAe,+cACrB,MAAAC,EAAeD,E,MCQFE,EAAS,M,yGAQZC,KAAAC,kBAAqBC,IAC3BF,KAAKG,MAASD,EAAME,OAA4BC,KAAK,EAG/CL,KAAAM,qBAAwBJ,IAC9BF,KAAKO,SAAYL,EAAME,OAA4BC,KAAK,EAGlDL,KAAAQ,iBAAoBN,IAC1BF,KAAKS,KAAQP,EAAME,OAA4BC,KAAK,EAG9CL,KAAAU,aAAeC,MAAOT,IAC5BA,EAAMU,iBACN,IACE,MAAMC,QAAiBC,MAAM,yCAA0C,CACrEC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAEhB,MAAOH,KAAKG,MAAOI,SAAUP,KAAKO,SAAUE,KAAMT,KAAKS,SAEhF,IAAKI,EAASO,GAAI,CAChB,MAAM,IAAIC,YAAYR,EAASS,O,CAEjC,MAAMC,QAAaV,EAASW,OAC5BxB,KAAKyB,YAAYC,KAAKH,SAChBvB,KAAK2B,aAAa,oB,CACxB,MAAOC,GACP5B,KAAK6B,WAAWH,KAAKE,EAAME,eACrB9B,KAAK2B,aAAa,8B,cArCH,G,cACG,G,UACJ,E,CAuChB,kBAAMA,CAAaG,GACzB,MAAMC,QAAcC,EAAgBC,OAAO,CACzCH,QAASA,EACTI,SAAU,KACVC,SAAU,wBAENJ,EAAMK,S,CAGd,MAAAC,GACE,OACEC,EAAA,OAAAC,IAAA,2CAAKC,MAAM,aACTF,EAAA,QAAAC,IAAA,2CAAME,SAAUvC,GAASF,KAAKU,aAAaR,IACzCoC,EAAA,SAAAC,IAAA,qDACAD,EAAA,SAAAC,IAAA,2CAAOG,KAAK,QAAQrC,MAAOL,KAAKG,MAAOwC,QAASzC,GAASF,KAAKC,kBAAkBC,KAEhFoC,EAAA,SAAAC,IAAA,wDACAD,EAAA,SAAAC,IAAA,2CAAOG,KAAK,WAAWrC,MAAOL,KAAKO,SAAUoC,QAASzC,GAASF,KAAKM,qBAAqBJ,KAEzFoC,EAAA,SAAAC,IAAA,oDACAD,EAAA,SAAAC,IAAA,2CAAOG,KAAK,OAAOrC,MAAOL,KAAKS,KAAMkC,QAASzC,GAASF,KAAKQ,iBAAiBN,KAE7EoC,EAAA,UAAAC,IAAA,2CAAQG,KAAK,UAAQ,U,aCzE/B,MAAME,EAAiB,uBACvB,MAAAC,EAAeD,E,MCOFE,EAAW,M,wFAgBd,OAAAC,GACN,OAAOC,EAAOhD,KAAKiD,MAAOjD,KAAKkD,OAAQlD,KAAKmD,K,CAG9C,MAAAd,GACE,OAAOC,EAAA,OAAAC,IAAA,iEAAwBvC,KAAK+C,U"}