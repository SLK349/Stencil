{"version":3,"names":["ImpactStyle","NotificationType","HapticEngine","getEngine","capacitor","getCapacitor","isPluginAvailable","Plugins","Haptics","undefined","available","engine","this","getPlatform","navigator","vibrate","impact","options","style","notification","type","selection","Light","selectionStart","selectionChanged","selectionEnd","hapticAvailable","hapticSelection","hapticSelectionStart","hapticSelectionChanged","hapticSelectionEnd","hapticImpact"],"sources":["node_modules/@ionic/core/dist/collection/utils/native/haptic.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { getCapacitor } from \"./capacitor\";\nexport var ImpactStyle;\n(function (ImpactStyle) {\n    /**\n     * A collision between large, heavy user interface elements\n     *\n     * @since 1.0.0\n     */\n    ImpactStyle[\"Heavy\"] = \"HEAVY\";\n    /**\n     * A collision between moderately sized user interface elements\n     *\n     * @since 1.0.0\n     */\n    ImpactStyle[\"Medium\"] = \"MEDIUM\";\n    /**\n     * A collision between small, light user interface elements\n     *\n     * @since 1.0.0\n     */\n    ImpactStyle[\"Light\"] = \"LIGHT\";\n})(ImpactStyle || (ImpactStyle = {}));\nexport var NotificationType;\n(function (NotificationType) {\n    /**\n     * A notification feedback type indicating that a task has completed successfully\n     *\n     * @since 1.0.0\n     */\n    NotificationType[\"Success\"] = \"SUCCESS\";\n    /**\n     * A notification feedback type indicating that a task has produced a warning\n     *\n     * @since 1.0.0\n     */\n    NotificationType[\"Warning\"] = \"WARNING\";\n    /**\n     * A notification feedback type indicating that a task has failed\n     *\n     * @since 1.0.0\n     */\n    NotificationType[\"Error\"] = \"ERROR\";\n})(NotificationType || (NotificationType = {}));\nconst HapticEngine = {\n    getEngine() {\n        const capacitor = getCapacitor();\n        if (capacitor === null || capacitor === void 0 ? void 0 : capacitor.isPluginAvailable('Haptics')) {\n            // Capacitor\n            return capacitor.Plugins.Haptics;\n        }\n        return undefined;\n    },\n    available() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return false;\n        }\n        const capacitor = getCapacitor();\n        /**\n         * Developers can manually import the\n         * Haptics plugin in their app which will cause\n         * getEngine to return the Haptics engine. However,\n         * the Haptics engine will throw an error if\n         * used in a web browser that does not support\n         * the Vibrate API. This check avoids that error\n         * if the browser does not support the Vibrate API.\n         */\n        if ((capacitor === null || capacitor === void 0 ? void 0 : capacitor.getPlatform()) === 'web') {\n            // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n            return typeof navigator !== 'undefined' && navigator.vibrate !== undefined;\n        }\n        return true;\n    },\n    impact(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        engine.impact({ style: options.style });\n    },\n    notification(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        engine.notification({ type: options.type });\n    },\n    selection() {\n        this.impact({ style: ImpactStyle.Light });\n    },\n    selectionStart() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        engine.selectionStart();\n    },\n    selectionChanged() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        engine.selectionChanged();\n    },\n    selectionEnd() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        engine.selectionEnd();\n    },\n};\n/**\n * Check to see if the Haptic Plugin is available\n * @return Returns `true` or false if the plugin is available\n */\nexport const hapticAvailable = () => {\n    return HapticEngine.available();\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nexport const hapticSelection = () => {\n    hapticAvailable() && HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nexport const hapticSelectionStart = () => {\n    hapticAvailable() && HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nexport const hapticSelectionChanged = () => {\n    hapticAvailable() && HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nexport const hapticSelectionEnd = () => {\n    hapticAvailable() && HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ type: NotificationType.SUCCESS }` (or `WARNING`/`ERROR`)\n */\nexport const hapticNotification = (options) => {\n    hapticAvailable() && HapticEngine.notification(options);\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: ImpactStyle.LIGHT }` (or `MEDIUM`/`HEAVY`)\n */\nexport const hapticImpact = (options) => {\n    hapticAvailable() && HapticEngine.impact(options);\n};\n"],"mappings":";;;GAIU,IAACA,GACX,SAAWA,GAMPA,EAAY,SAAW,QAMvBA,EAAY,UAAY,SAMxBA,EAAY,SAAW,OAC1B,EAnBD,CAmBGA,IAAgBA,EAAc,KAC1B,IAAIC,GACX,SAAWA,GAMPA,EAAiB,WAAa,UAM9BA,EAAiB,WAAa,UAM9BA,EAAiB,SAAW,OAC/B,EAnBD,CAmBGA,IAAqBA,EAAmB,KAC3C,MAAMC,EAAe,CACjB,SAAAC,GACI,MAAMC,EAAYC,IAClB,GAAID,IAAc,MAAQA,SAAmB,OAAS,EAAIA,EAAUE,kBAAkB,WAAY,CAE9F,OAAOF,EAAUG,QAAQC,OACrC,CACQ,OAAOC,SACf,EACI,SAAAC,GACI,MAAMC,EAASC,KAAKT,YACpB,IAAKQ,EAAQ,CACT,OAAO,KACnB,CACQ,MAAMP,EAAYC,IAUlB,IAAKD,IAAc,MAAQA,SAAmB,OAAS,EAAIA,EAAUS,iBAAmB,MAAO,CAE3F,cAAcC,YAAc,aAAeA,UAAUC,UAAYN,SAC7E,CACQ,OAAO,IACf,EACI,MAAAO,CAAOC,GACH,MAAMN,EAASC,KAAKT,YACpB,IAAKQ,EAAQ,CACT,MACZ,CACQA,EAAOK,OAAO,CAAEE,MAAOD,EAAQC,OACvC,EACI,YAAAC,CAAaF,GACT,MAAMN,EAASC,KAAKT,YACpB,IAAKQ,EAAQ,CACT,MACZ,CACQA,EAAOQ,aAAa,CAAEC,KAAMH,EAAQG,MAC5C,EACI,SAAAC,GACIT,KAAKI,OAAO,CAAEE,MAAOlB,EAAYsB,OACzC,EACI,cAAAC,GACI,MAAMZ,EAASC,KAAKT,YACpB,IAAKQ,EAAQ,CACT,MACZ,CACQA,EAAOY,gBACf,EACI,gBAAAC,GACI,MAAMb,EAASC,KAAKT,YACpB,IAAKQ,EAAQ,CACT,MACZ,CACQA,EAAOa,kBACf,EACI,YAAAC,GACI,MAAMd,EAASC,KAAKT,YACpB,IAAKQ,EAAQ,CACT,MACZ,CACQA,EAAOc,cACf,GAMO,MAAMC,EAAkB,IACpBxB,EAAaQ,YAMZ,MAACiB,EAAkB,KAC3BD,KAAqBxB,EAAamB,WAAW,EAKrC,MAACO,EAAuB,KAChCF,KAAqBxB,EAAaqB,gBAAgB,EAK1C,MAACM,EAAyB,KAClCH,KAAqBxB,EAAasB,kBAAkB,EAM5C,MAACM,EAAqB,KAC9BJ,KAAqBxB,EAAauB,cAAc,EAaxC,MAACM,EAAgBd,IACzBS,KAAqBxB,EAAac,OAAOC,EAAQ,S"}