{"version":3,"file":"login-form.js","sourceRoot":"","sources":["../../../src/components/login-form/login-form.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, h, State, Event, EventEmitter } from '@stencil/core';\nimport { toastController } from '@ionic/core';\nimport './toast.css';\n\n@Component({\n  tag: 'login-form',\n  styleUrl: 'login-form.css',\n  shadow: true,\n})\nexport class LoginForm {\n  @State() email: string = '';\n  @State() password: string = '';\n  @State() code: string = '';\n\n  @Event() loginSucess: EventEmitter;\n  @Event() loginError: EventEmitter;\n\n  private handleEmailChange = (event: Event) => {\n    this.email = (event.target as HTMLInputElement).value;\n  };\n\n  private handlePasswordChange = (event: Event) => {\n    this.password = (event.target as HTMLInputElement).value;\n  };\n\n  private handleCodeChange = (event: Event) => {\n    this.code = (event.target as HTMLInputElement).value;\n  };\n\n  private handleSubmit = async (event: Event) => {\n    event.preventDefault();\n    try {\n      const response = await fetch('http://localhost:3001/api/authenticate', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email: this.email, password: this.password, code: this.code }),\n      });\n      if (!response.ok) {\n        throw new Error(await response.text());\n      }\n      const data = await response.json();\n      this.loginSucess.emit(data);\n      await this.presentToast('Connexion r√©ussie');\n    } catch (error) {\n      this.loginError.emit(error.message);\n      await this.presentToast('Erreur lors de la connexion');\n    }\n  };\n\n  private async presentToast(message: string) {\n    const toast = await toastController.create({\n      message: message,\n      duration: 2500,\n      cssClass: 'toast-message',\n    });\n    await toast.present();\n  }\n\n  render() {\n    return (\n      <div class=\"container\">\n        <form onSubmit={event => this.handleSubmit(event)}>\n          <label>Email</label>\n          <input type=\"email\" value={this.email} onInput={event => this.handleEmailChange(event)} />\n\n          <label>Password</label>\n          <input type=\"password\" value={this.password} onInput={event => this.handlePasswordChange(event)} />\n\n          <label>Code</label>\n          <input type=\"text\" value={this.code} onInput={event => this.handleCodeChange(event)} />\n\n          <button type=\"submit\">Login</button>\n        </form>\n      </div>\n    );\n  }\n}\n"]}