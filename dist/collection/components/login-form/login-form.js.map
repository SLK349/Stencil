{"version":3,"file":"login-form.js","sourceRoot":"","sources":["../../../src/components/login-form/login-form.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,KAAK,EAAE,KAAK,EAAgB,MAAM,eAAe,CAAC;AAOzE,MAAM,OAAO,SAAS;;QAOZ,sBAAiB,GAAG,CAAC,KAAY,EAAE,EAAE;YAC3C,IAAI,CAAC,KAAK,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QACxD,CAAC,CAAC;QAEM,yBAAoB,GAAG,CAAC,KAAY,EAAE,EAAE;YAC9C,IAAI,CAAC,QAAQ,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC3D,CAAC,CAAC;QAEM,iBAAY,GAAG,KAAK,EAAE,KAAY,EAAE,EAAE;YAC5C,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,IAAI,CAAC;gBACH,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,wCAAwC,EAAE;oBACrE,MAAM,EAAE,MAAM;oBACd,OAAO,EAAE;wBACP,cAAc,EAAE,kBAAkB;qBACnC;oBACD,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC;iBACrE,CAAC,CAAC;gBACH,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC;oBACjB,MAAM,IAAI,KAAK,CAAC,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;gBACzC,CAAC;gBACD,MAAM,IAAI,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;gBACnC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC9B,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YACtC,CAAC;QACH,CAAC,CAAC;qBAhCuB,EAAE;wBACC,EAAE;;IAiC9B,MAAM;QACJ,OAAO,CACL,6DAAM,QAAQ,EAAE,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YAC/C,wEAAoB;YACpB,8DAAO,IAAI,EAAC,OAAO,EAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,OAAO,EAAE,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,GAAI;YAE1F,2EAAuB;YACvB,8DAAO,IAAI,EAAC,UAAU,EAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,GAAI;YAEnG,+DAAQ,IAAI,EAAC,QAAQ,YAAe,CAC/B,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, h, State, Event, EventEmitter } from '@stencil/core';\n\n@Component({\n  tag: 'login-form',\n  styleUrl: 'login-form.css',\n  shadow: true,\n})\nexport class LoginForm {\n  @State() email: string = '';\n  @State() password: string = '';\n\n  @Event() loginSucess: EventEmitter;\n  @Event() loginError: EventEmitter;\n\n  private handleEmailChange = (event: Event) => {\n    this.email = (event.target as HTMLInputElement).value;\n  };\n\n  private handlePasswordChange = (event: Event) => {\n    this.password = (event.target as HTMLInputElement).value;\n  };\n\n  private handleSubmit = async (event: Event) => {\n    event.preventDefault();\n    try {\n      const response = await fetch('http://localhost:3001/api/authenticate', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email: this.email, password: this.password }),\n      });\n      if (!response.ok) {\n        throw new Error(await response.text());\n      }\n      const data = await response.json();\n      this.loginSucess.emit(data);\n    } catch (error) {\n      this.loginError.emit(error.message);\n    }\n  };\n\n  render() {\n    return (\n      <form onSubmit={event => this.handleSubmit(event)}>\n        <label>Email</label>\n        <input type=\"email\" value={this.email} onInput={event => this.handleEmailChange(event)} />\n\n        <label>Password</label>\n        <input type=\"password\" value={this.password} onInput={event => this.handlePasswordChange(event)} />\n\n        <button type=\"submit\">Login</button>\n      </form>\n    );\n  }\n}\n"]}