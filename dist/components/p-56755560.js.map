{"file":"p-56755560.js","mappings":"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","names":[],"sources":["node_modules/@ionic/core/dist/collection/utils/input-shims/hacks/common.js","node_modules/@ionic/core/dist/collection/utils/input-shims/hacks/hide-caret.js","node_modules/@ionic/core/dist/collection/utils/input-shims/hacks/input-blurring.js","node_modules/@ionic/core/dist/collection/utils/input-shims/hacks/scroll-data.js","node_modules/@ionic/core/dist/collection/utils/input-shims/hacks/scroll-padding.js","node_modules/@ionic/core/dist/collection/utils/input-shims/hacks/scroll-assist.js","node_modules/@ionic/core/dist/collection/utils/input-shims/input-shims.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nconst cloneMap = new WeakMap();\nexport const relocateInput = (componentEl, inputEl, shouldRelocate, inputRelativeY = 0, disabledClonedInput = false) => {\n    if (cloneMap.has(componentEl) === shouldRelocate) {\n        return;\n    }\n    if (shouldRelocate) {\n        addClone(componentEl, inputEl, inputRelativeY, disabledClonedInput);\n    }\n    else {\n        removeClone(componentEl, inputEl);\n    }\n};\nexport const isFocused = (input) => {\n    /**\n     * https://developer.mozilla.org/en-US/docs/Web/API/Node/getRootNode\n     * Calling getRootNode on an element in standard web page will return HTMLDocument.\n     * Calling getRootNode on an element inside of the Shadow DOM will return the associated ShadowRoot.\n     * Calling getRootNode on an element that is not attached to a document/shadow tree will return\n     * the root of the DOM tree it belongs to.\n     * isFocused is used for the hide-caret utility which only considers input/textarea elements\n     * that are present in the DOM, so we don't set types for that final case since it does not apply.\n     */\n    return input === input.getRootNode().activeElement;\n};\nconst addClone = (componentEl, inputEl, inputRelativeY, disabledClonedInput = false) => {\n    // this allows for the actual input to receive the focus from\n    // the user's touch event, but before it receives focus, it\n    // moves the actual input to a location that will not screw\n    // up the app's layout, and does not allow the native browser\n    // to attempt to scroll the input into place (messing up headers/footers)\n    // the cloned input fills the area of where native input should be\n    // while the native input fakes out the browser by relocating itself\n    // before it receives the actual focus event\n    // We hide the focused input (with the visible caret) invisible by making it scale(0),\n    const parentEl = inputEl.parentNode;\n    // DOM WRITES\n    const clonedEl = inputEl.cloneNode(false);\n    clonedEl.classList.add('cloned-input');\n    clonedEl.tabIndex = -1;\n    /**\n     * Making the cloned input disabled prevents\n     * Chrome for Android from still scrolling\n     * the entire page since this cloned input\n     * will briefly be hidden by the keyboard\n     * even though it is not focused.\n     *\n     * This is not needed on iOS. While this\n     * does not cause functional issues on iOS,\n     * the input still appears slightly dimmed even\n     * if we set opacity: 1.\n     */\n    if (disabledClonedInput) {\n        clonedEl.disabled = true;\n    }\n    parentEl.appendChild(clonedEl);\n    cloneMap.set(componentEl, clonedEl);\n    const doc = componentEl.ownerDocument;\n    const tx = doc.dir === 'rtl' ? 9999 : -9999;\n    componentEl.style.pointerEvents = 'none';\n    inputEl.style.transform = `translate3d(${tx}px,${inputRelativeY}px,0) scale(0)`;\n};\nconst removeClone = (componentEl, inputEl) => {\n    const clone = cloneMap.get(componentEl);\n    if (clone) {\n        cloneMap.delete(componentEl);\n        clone.remove();\n    }\n    componentEl.style.pointerEvents = '';\n    inputEl.style.transform = '';\n};\n/**\n * Factoring in 50px gives us some room\n * in case the keyboard shows password/autofill bars\n * asynchronously.\n */\nexport const SCROLL_AMOUNT_PADDING = 50;\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { addEventListener, removeEventListener } from \"../../helpers\";\nimport { isFocused, relocateInput } from \"./common\";\nexport const enableHideCaretOnScroll = (componentEl, inputEl, scrollEl) => {\n    if (!scrollEl || !inputEl) {\n        return () => {\n            return;\n        };\n    }\n    const scrollHideCaret = (shouldHideCaret) => {\n        if (isFocused(inputEl)) {\n            relocateInput(componentEl, inputEl, shouldHideCaret);\n        }\n    };\n    const onBlur = () => relocateInput(componentEl, inputEl, false);\n    const hideCaret = () => scrollHideCaret(true);\n    const showCaret = () => scrollHideCaret(false);\n    addEventListener(scrollEl, 'ionScrollStart', hideCaret);\n    addEventListener(scrollEl, 'ionScrollEnd', showCaret);\n    inputEl.addEventListener('blur', onBlur);\n    return () => {\n        removeEventListener(scrollEl, 'ionScrollStart', hideCaret);\n        removeEventListener(scrollEl, 'ionScrollEnd', showCaret);\n        inputEl.removeEventListener('blur', onBlur);\n    };\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { addEventListener, removeEventListener } from \"../../helpers\";\nconst SKIP_SELECTOR = 'input, textarea, [no-blur], [contenteditable]';\nexport const enableInputBlurring = () => {\n    let focused = true;\n    let didScroll = false;\n    const doc = document;\n    const onScroll = () => {\n        didScroll = true;\n    };\n    const onFocusin = () => {\n        focused = true;\n    };\n    const onTouchend = (ev) => {\n        // if app did scroll return early\n        if (didScroll) {\n            didScroll = false;\n            return;\n        }\n        const active = doc.activeElement;\n        if (!active) {\n            return;\n        }\n        // only blur if the active element is a text-input or a textarea\n        if (active.matches(SKIP_SELECTOR)) {\n            return;\n        }\n        // if the selected target is the active element, do not blur\n        const tapped = ev.target;\n        if (tapped === active) {\n            return;\n        }\n        if (tapped.matches(SKIP_SELECTOR) || tapped.closest(SKIP_SELECTOR)) {\n            return;\n        }\n        focused = false;\n        // TODO FW-2796: find a better way, why 50ms?\n        setTimeout(() => {\n            if (!focused) {\n                active.blur();\n            }\n        }, 50);\n    };\n    addEventListener(doc, 'ionScrollStart', onScroll);\n    doc.addEventListener('focusin', onFocusin, true);\n    doc.addEventListener('touchend', onTouchend, false);\n    return () => {\n        removeEventListener(doc, 'ionScrollStart', onScroll, true);\n        doc.removeEventListener('focusin', onFocusin, true);\n        doc.removeEventListener('touchend', onTouchend, false);\n    };\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { SCROLL_AMOUNT_PADDING } from \"./common\";\nconst SCROLL_ASSIST_SPEED = 0.3;\nexport const getScrollData = (componentEl, contentEl, keyboardHeight, platformHeight) => {\n    var _a;\n    const itemEl = (_a = componentEl.closest('ion-item,[ion-item]')) !== null && _a !== void 0 ? _a : componentEl;\n    return calcScrollData(itemEl.getBoundingClientRect(), contentEl.getBoundingClientRect(), keyboardHeight, platformHeight);\n};\nconst calcScrollData = (inputRect, contentRect, keyboardHeight, platformHeight) => {\n    // compute input's Y values relative to the body\n    const inputTop = inputRect.top;\n    const inputBottom = inputRect.bottom;\n    // compute visible area\n    const visibleAreaTop = contentRect.top;\n    const visibleAreaBottom = Math.min(contentRect.bottom, platformHeight - keyboardHeight);\n    // compute safe area\n    const safeAreaTop = visibleAreaTop + 15;\n    const safeAreaBottom = visibleAreaBottom - SCROLL_AMOUNT_PADDING;\n    // figure out if each edge of the input is within the safe area\n    const distanceToBottom = safeAreaBottom - inputBottom;\n    const distanceToTop = safeAreaTop - inputTop;\n    // desiredScrollAmount is the negated distance to the safe area according to our calculations.\n    const desiredScrollAmount = Math.round(distanceToBottom < 0 ? -distanceToBottom : distanceToTop > 0 ? -distanceToTop : 0);\n    // our calculations make some assumptions that aren't always true, like the keyboard being closed when an input\n    // gets focus, so make sure we don't scroll the input above the visible area\n    const scrollAmount = Math.min(desiredScrollAmount, inputTop - visibleAreaTop);\n    const distance = Math.abs(scrollAmount);\n    const duration = distance / SCROLL_ASSIST_SPEED;\n    const scrollDuration = Math.min(400, Math.max(150, duration));\n    return {\n        scrollAmount,\n        scrollDuration,\n        scrollPadding: keyboardHeight,\n        inputSafeY: -(inputTop - safeAreaTop) + 4,\n    };\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nconst PADDING_TIMER_KEY = '$ionPaddingTimer';\n/**\n * Scroll padding adds additional padding to the bottom\n * of ion-content so that there is enough scroll space\n * for an input to be scrolled above the keyboard. This\n * is needed in environments where the webview does not\n * resize when the keyboard opens.\n *\n * Example: If an input at the bottom of ion-content is\n * focused, there is no additional scrolling space below\n * it, so the input cannot be scrolled above the keyboard.\n * Scroll padding fixes this by adding padding equal to the\n * height of the keyboard to the bottom of the content.\n *\n * Common environments where this is needed:\n * - Mobile Safari: The keyboard overlays the content\n * - Capacitor/Cordova on iOS: The keyboard overlays the content\n * when the KeyboardResize mode is set to 'none'.\n */\nexport const setScrollPadding = (contentEl, paddingAmount, clearCallback) => {\n    const timer = contentEl[PADDING_TIMER_KEY];\n    if (timer) {\n        clearTimeout(timer);\n    }\n    if (paddingAmount > 0) {\n        contentEl.style.setProperty('--keyboard-offset', `${paddingAmount}px`);\n    }\n    else {\n        contentEl[PADDING_TIMER_KEY] = setTimeout(() => {\n            contentEl.style.setProperty('--keyboard-offset', '0px');\n            if (clearCallback) {\n                clearCallback();\n            }\n        }, 120);\n    }\n};\n/**\n * When an input is about to be focused,\n * set a timeout to clear any scroll padding\n * on the content. Note: The clearing\n * is done on a timeout so that if users\n * are moving focus from one input to the next\n * then re-adding scroll padding to the new\n * input with cancel the timeout to clear the\n * scroll padding.\n */\nexport const setClearScrollPaddingListener = (inputEl, contentEl, doneCallback) => {\n    const clearScrollPadding = () => {\n        if (contentEl) {\n            setScrollPadding(contentEl, 0, doneCallback);\n        }\n    };\n    inputEl.addEventListener('focusout', clearScrollPadding, { once: true });\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { win } from \"../../browser/index\";\nimport { getScrollElement, scrollByPoint } from \"../../content\";\nimport { raf } from \"../../helpers\";\nimport { KeyboardResize } from \"../../native/keyboard\";\nimport { relocateInput, SCROLL_AMOUNT_PADDING } from \"./common\";\nimport { getScrollData } from \"./scroll-data\";\nimport { setScrollPadding, setClearScrollPaddingListener } from \"./scroll-padding\";\nlet currentPadding = 0;\nconst SKIP_SCROLL_ASSIST = 'data-ionic-skip-scroll-assist';\nexport const enableScrollAssist = (componentEl, inputEl, contentEl, footerEl, keyboardHeight, enableScrollPadding, keyboardResize, disableClonedInput = false) => {\n    /**\n     * Scroll padding should only be added if:\n     * 1. The global scrollPadding config option\n     * is set to true.\n     * 2. The native keyboard resize mode is either \"none\"\n     * (keyboard overlays webview) or undefined (resize\n     * information unavailable)\n     * Resize info is available on Capacitor 4+\n     */\n    const addScrollPadding = enableScrollPadding && (keyboardResize === undefined || keyboardResize.mode === KeyboardResize.None);\n    /**\n     * This tracks whether or not the keyboard has been\n     * presented for a single focused text field. Note\n     * that it does not track if the keyboard is open\n     * in general such as if the keyboard is open for\n     * a different focused text field.\n     */\n    let hasKeyboardBeenPresentedForTextField = false;\n    /**\n     * When adding scroll padding we need to know\n     * how much of the viewport the keyboard obscures.\n     * We do this by subtracting the keyboard height\n     * from the platform height.\n     *\n     * If we compute this value when switching between\n     * inputs then the webview may already be resized.\n     * At this point, `win.innerHeight` has already accounted\n     * for the keyboard meaning we would then subtract\n     * the keyboard height again. This will result in the input\n     * being scrolled more than it needs to.\n     */\n    const platformHeight = win !== undefined ? win.innerHeight : 0;\n    /**\n     * Scroll assist is run when a text field\n     * is focused. However, it may need to\n     * re-run when the keyboard size changes\n     * such that the text field is now hidden\n     * underneath the keyboard.\n     * This function re-runs scroll assist\n     * when that happens.\n     *\n     * One limitation of this is on a web browser\n     * where native keyboard APIs do not have cross-browser\n     * support. `ionKeyboardDidShow` relies on the Visual Viewport API.\n     * This means that if the keyboard changes but does not change\n     * geometry, then scroll assist will not re-run even if\n     * the user has scrolled the text field under the keyboard.\n     * This is not a problem when running in Cordova/Capacitor\n     * because `ionKeyboardDidShow` uses the native events\n     * which fire every time the keyboard changes.\n     */\n    const keyboardShow = (ev) => {\n        /**\n         * If the keyboard has not yet been presented\n         * for this text field then the text field has just\n         * received focus. In that case, the focusin listener\n         * will run scroll assist.\n         */\n        if (hasKeyboardBeenPresentedForTextField === false) {\n            hasKeyboardBeenPresentedForTextField = true;\n            return;\n        }\n        /**\n         * Otherwise, the keyboard has already been presented\n         * for the focused text field.\n         * This means that the keyboard likely changed\n         * geometry, and we need to re-run scroll assist.\n         * This can happen when the user rotates their device\n         * or when they switch keyboards.\n         *\n         * Make sure we pass in the computed keyboard height\n         * rather than the estimated keyboard height.\n         *\n         * Since the keyboard is already open then we do not\n         * need to wait for the webview to resize, so we pass\n         * \"waitForResize: false\".\n         */\n        jsSetFocus(componentEl, inputEl, contentEl, footerEl, ev.detail.keyboardHeight, addScrollPadding, disableClonedInput, platformHeight, false);\n    };\n    /**\n     * Reset the internal state when the text field loses focus.\n     */\n    const focusOut = () => {\n        hasKeyboardBeenPresentedForTextField = false;\n        win === null || win === void 0 ? void 0 : win.removeEventListener('ionKeyboardDidShow', keyboardShow);\n        componentEl.removeEventListener('focusout', focusOut);\n    };\n    /**\n     * When the input is about to receive\n     * focus, we need to move it to prevent\n     * mobile Safari from adjusting the viewport.\n     */\n    const focusIn = async () => {\n        /**\n         * Scroll assist should not run again\n         * on inputs that have been manually\n         * focused inside of the scroll assist\n         * implementation.\n         */\n        if (inputEl.hasAttribute(SKIP_SCROLL_ASSIST)) {\n            inputEl.removeAttribute(SKIP_SCROLL_ASSIST);\n            return;\n        }\n        jsSetFocus(componentEl, inputEl, contentEl, footerEl, keyboardHeight, addScrollPadding, disableClonedInput, platformHeight);\n        win === null || win === void 0 ? void 0 : win.addEventListener('ionKeyboardDidShow', keyboardShow);\n        componentEl.addEventListener('focusout', focusOut);\n    };\n    componentEl.addEventListener('focusin', focusIn);\n    return () => {\n        componentEl.removeEventListener('focusin', focusIn);\n        win === null || win === void 0 ? void 0 : win.removeEventListener('ionKeyboardDidShow', keyboardShow);\n        componentEl.removeEventListener('focusout', focusOut);\n    };\n};\n/**\n * Use this function when you want to manually\n * focus an input but not have scroll assist run again.\n */\nconst setManualFocus = (el) => {\n    /**\n     * If element is already focused then\n     * a new focusin event will not be dispatched\n     * to remove the SKIL_SCROLL_ASSIST attribute.\n     */\n    if (document.activeElement === el) {\n        return;\n    }\n    el.setAttribute(SKIP_SCROLL_ASSIST, 'true');\n    el.focus();\n};\nconst jsSetFocus = async (componentEl, inputEl, contentEl, footerEl, keyboardHeight, enableScrollPadding, disableClonedInput = false, platformHeight = 0, waitForResize = true) => {\n    if (!contentEl && !footerEl) {\n        return;\n    }\n    const scrollData = getScrollData(componentEl, (contentEl || footerEl), keyboardHeight, platformHeight);\n    if (contentEl && Math.abs(scrollData.scrollAmount) < 4) {\n        // the text input is in a safe position that doesn't\n        // require it to be scrolled into view, just set focus now\n        setManualFocus(inputEl);\n        /**\n         * Even though the input does not need\n         * scroll assist, we should preserve the\n         * the scroll padding as users could be moving\n         * focus from an input that needs scroll padding\n         * to an input that does not need scroll padding.\n         * If we remove the scroll padding now, users will\n         * see the page jump.\n         */\n        if (enableScrollPadding && contentEl !== null) {\n            setScrollPadding(contentEl, currentPadding);\n            setClearScrollPaddingListener(inputEl, contentEl, () => (currentPadding = 0));\n        }\n        return;\n    }\n    // temporarily move the focus to the focus holder so the browser\n    // doesn't freak out while it's trying to get the input in place\n    // at this point the native text input still does not have focus\n    relocateInput(componentEl, inputEl, true, scrollData.inputSafeY, disableClonedInput);\n    setManualFocus(inputEl);\n    /**\n     * Relocating/Focusing input causes the\n     * click event to be cancelled, so\n     * manually fire one here.\n     */\n    raf(() => componentEl.click());\n    /**\n     * If enabled, we can add scroll padding to\n     * the bottom of the content so that scroll assist\n     * has enough room to scroll the input above\n     * the keyboard.\n     */\n    if (enableScrollPadding && contentEl) {\n        currentPadding = scrollData.scrollPadding;\n        setScrollPadding(contentEl, currentPadding);\n    }\n    if (typeof window !== 'undefined') {\n        let scrollContentTimeout;\n        const scrollContent = async () => {\n            // clean up listeners and timeouts\n            if (scrollContentTimeout !== undefined) {\n                clearTimeout(scrollContentTimeout);\n            }\n            window.removeEventListener('ionKeyboardDidShow', doubleKeyboardEventListener);\n            window.removeEventListener('ionKeyboardDidShow', scrollContent);\n            // scroll the input into place\n            if (contentEl) {\n                await scrollByPoint(contentEl, 0, scrollData.scrollAmount, scrollData.scrollDuration);\n            }\n            // the scroll view is in the correct position now\n            // give the native text input focus\n            relocateInput(componentEl, inputEl, false, scrollData.inputSafeY);\n            // ensure this is the focused input\n            setManualFocus(inputEl);\n            /**\n             * When the input is about to be blurred\n             * we should set a timeout to remove\n             * any scroll padding.\n             */\n            if (enableScrollPadding) {\n                setClearScrollPaddingListener(inputEl, contentEl, () => (currentPadding = 0));\n            }\n        };\n        const doubleKeyboardEventListener = () => {\n            window.removeEventListener('ionKeyboardDidShow', doubleKeyboardEventListener);\n            window.addEventListener('ionKeyboardDidShow', scrollContent);\n        };\n        if (contentEl) {\n            const scrollEl = await getScrollElement(contentEl);\n            /**\n             * scrollData will only consider the amount we need\n             * to scroll in order to properly bring the input\n             * into view. It will not consider the amount\n             * we can scroll in the content element.\n             * As a result, scrollData may request a greater\n             * scroll position than is currently available\n             * in the DOM. If this is the case, we need to\n             * wait for the webview to resize/the keyboard\n             * to show in order for additional scroll\n             * bandwidth to become available.\n             */\n            const totalScrollAmount = scrollEl.scrollHeight - scrollEl.clientHeight;\n            if (waitForResize && scrollData.scrollAmount > totalScrollAmount - scrollEl.scrollTop) {\n                /**\n                 * On iOS devices, the system will show a \"Passwords\" bar above the keyboard\n                 * after the initial keyboard is shown. This prevents the webview from resizing\n                 * until the \"Passwords\" bar is shown, so we need to wait for that to happen first.\n                 */\n                if (inputEl.type === 'password') {\n                    // Add 50px to account for the \"Passwords\" bar\n                    scrollData.scrollAmount += SCROLL_AMOUNT_PADDING;\n                    window.addEventListener('ionKeyboardDidShow', doubleKeyboardEventListener);\n                }\n                else {\n                    window.addEventListener('ionKeyboardDidShow', scrollContent);\n                }\n                /**\n                 * This should only fire in 2 instances:\n                 * 1. The app is very slow.\n                 * 2. The app is running in a browser on an old OS\n                 * that does not support Ionic Keyboard Events\n                 */\n                scrollContentTimeout = setTimeout(scrollContent, 1000);\n                return;\n            }\n        }\n        scrollContent();\n    }\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { doc } from \"../browser/index\";\nimport { findClosestIonContent } from \"../content\";\nimport { componentOnReady } from \"../helpers\";\nimport { Keyboard } from \"../native/keyboard\";\nimport { enableHideCaretOnScroll } from \"./hacks/hide-caret\";\nimport { enableInputBlurring } from \"./hacks/input-blurring\";\nimport { enableScrollAssist } from \"./hacks/scroll-assist\";\nconst INPUT_BLURRING = true;\nconst SCROLL_ASSIST = true;\nconst HIDE_CARET = true;\nexport const startInputShims = async (config, platform) => {\n    /**\n     * If doc is undefined then we are in an SSR environment\n     * where input shims do not apply.\n     */\n    if (doc === undefined) {\n        return;\n    }\n    const isIOS = platform === 'ios';\n    const isAndroid = platform === 'android';\n    /**\n     * Hide Caret and Input Blurring are needed on iOS.\n     * Scroll Assist and Scroll Padding are needed on iOS and Android\n     * with Chrome web browser (not Chrome webview).\n     */\n    const keyboardHeight = config.getNumber('keyboardHeight', 290);\n    const scrollAssist = config.getBoolean('scrollAssist', true);\n    const hideCaret = config.getBoolean('hideCaretOnScroll', isIOS);\n    /**\n     * The team is evaluating if inputBlurring is still needed. As a result\n     * this feature is disabled by default as of Ionic 8.0. Developers are\n     * able to re-enable it temporarily. The team may remove this utility\n     * if it is determined that doing so would not bring any adverse side effects.\n     * TODO FW-6014 remove input blurring utility (including implementation)\n     */\n    const inputBlurring = config.getBoolean('inputBlurring', false);\n    const scrollPadding = config.getBoolean('scrollPadding', true);\n    const inputs = Array.from(doc.querySelectorAll('ion-input, ion-textarea'));\n    const hideCaretMap = new WeakMap();\n    const scrollAssistMap = new WeakMap();\n    /**\n     * Grab the native keyboard resize configuration\n     * and pass it to scroll assist. Scroll assist requires\n     * that we adjust the input right before the input\n     * is about to be focused. If we called `Keyboard.getResizeMode`\n     * on focusin in scroll assist, we could potentially adjust the\n     * input too late since this call is async.\n     */\n    const keyboardResizeMode = await Keyboard.getResizeMode();\n    const registerInput = async (componentEl) => {\n        await new Promise((resolve) => componentOnReady(componentEl, resolve));\n        const inputRoot = componentEl.shadowRoot || componentEl;\n        const inputEl = inputRoot.querySelector('input') || inputRoot.querySelector('textarea');\n        const scrollEl = findClosestIonContent(componentEl);\n        const footerEl = !scrollEl ? componentEl.closest('ion-footer') : null;\n        if (!inputEl) {\n            return;\n        }\n        if (HIDE_CARET && !!scrollEl && hideCaret && !hideCaretMap.has(componentEl)) {\n            const rmFn = enableHideCaretOnScroll(componentEl, inputEl, scrollEl);\n            hideCaretMap.set(componentEl, rmFn);\n        }\n        /**\n         * date/datetime-locale inputs on mobile devices show date picker\n         * overlays instead of keyboards. As a result, scroll assist is\n         * not needed. This also works around a bug in iOS <16 where\n         * scroll assist causes the browser to lock up. See FW-1997.\n         */\n        const isDateInput = inputEl.type === 'date' || inputEl.type === 'datetime-local';\n        if (SCROLL_ASSIST &&\n            !isDateInput &&\n            (!!scrollEl || !!footerEl) &&\n            scrollAssist &&\n            !scrollAssistMap.has(componentEl)) {\n            const rmFn = enableScrollAssist(componentEl, inputEl, scrollEl, footerEl, keyboardHeight, scrollPadding, keyboardResizeMode, isAndroid);\n            scrollAssistMap.set(componentEl, rmFn);\n        }\n    };\n    const unregisterInput = (componentEl) => {\n        if (HIDE_CARET && hideCaret) {\n            const fn = hideCaretMap.get(componentEl);\n            if (fn) {\n                fn();\n            }\n            hideCaretMap.delete(componentEl);\n        }\n        if (SCROLL_ASSIST && scrollAssist) {\n            const fn = scrollAssistMap.get(componentEl);\n            if (fn) {\n                fn();\n            }\n            scrollAssistMap.delete(componentEl);\n        }\n    };\n    if (inputBlurring && INPUT_BLURRING) {\n        enableInputBlurring();\n    }\n    // Input might be already loaded in the DOM before ion-device-hacks did.\n    // At this point we need to look for all of the inputs not registered yet\n    // and register them.\n    for (const input of inputs) {\n        registerInput(input);\n    }\n    doc.addEventListener('ionInputDidLoad', (ev) => {\n        registerInput(ev.detail);\n    });\n    doc.addEventListener('ionInputDidUnload', (ev) => {\n        unregisterInput(ev.detail);\n    });\n};\n"],"version":3}