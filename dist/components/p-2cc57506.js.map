{"file":"p-2cc57506.js","mappings":"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","names":[],"sources":["node_modules/@ionic/core/dist/collection/components/item/item.ios.css?tag=ion-item&mode=ios&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/item/item.md.css?tag=ion-item&mode=md&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/item/item.js"],"sourcesContent":["/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the item\n   * @prop --background-activated: Background of the item when pressed. Note: setting this will interfere with the Material Design ripple.\n   * @prop --background-activated-opacity: Opacity of the item background when pressed\n   * @prop --background-focused: Background of the item when focused with the tab key\n   * @prop --background-focused-opacity: Opacity of the item background when focused with the tab key\n   * @prop --background-hover: Background of the item on hover\n   * @prop --background-hover-opacity: Opacity of the background of the item on hover\n   *\n   * @prop --border-color: Color of the item border\n   * @prop --border-radius: Radius of the item border\n   * @prop --border-style: Style of the item border\n   * @prop --border-width: Width of the item border\n   *\n   * @prop --color: Color of the item\n   * @prop --color-activated: Color of the item when pressed\n   * @prop --color-focused: Color of the item when focused with the tab key\n   * @prop --color-hover: Color of the item on hover\n   *\n   * @prop --detail-icon-color: Color of the item detail icon\n   * @prop --detail-icon-opacity: Opacity of the item detail icon\n   * @prop --detail-icon-font-size: Font size of the item detail icon\n   *\n   * @prop --inner-border-width: Width of the item inner border\n   * @prop --inner-box-shadow: Box shadow of the item inner\n   * @prop --inner-padding-top: Top padding of the item inner\n   * @prop --inner-padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the item inner\n   * @prop --inner-padding-bottom: Bottom padding of the item inner\n   * @prop --inner-padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the item inner\n   *\n   * @prop --min-height: Minimum height of the item\n   *\n   * @prop --padding-bottom: Bottom padding of the item\n   * @prop --padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the item\n   * @prop --padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the item\n   * @prop --padding-top: Top padding of the item\n   *\n   * @prop --transition: Transition of the item\n   *\n   * @prop --ripple-color: Color of the item ripple effect\n   *\n   */\n  --border-radius: 0px;\n  --border-width: 0px;\n  --border-style: solid;\n  --padding-top: 0px;\n  --padding-bottom: 0px;\n  --padding-end: 0px;\n  --padding-start: 0px;\n  --inner-border-width: 0px;\n  --inner-padding-top: 0px;\n  --inner-padding-bottom: 0px;\n  --inner-padding-start: 0px;\n  --inner-padding-end: 0px;\n  --inner-box-shadow: none;\n  --detail-icon-color: initial;\n  --detail-icon-font-size: 1.25em;\n  --detail-icon-opacity: 0.25;\n  --color-activated: var(--color);\n  --color-focused: var(--color);\n  --color-hover: var(--color);\n  --ripple-color: currentColor;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  display: block;\n  position: relative;\n  align-items: center;\n  justify-content: space-between;\n  outline: none;\n  color: var(--color);\n  font-family: var(--ion-font-family, inherit);\n  text-align: initial;\n  text-decoration: none;\n  overflow: hidden;\n  box-sizing: border-box;\n}\n\n:host(.ion-color) .item-native {\n  background: var(--ion-color-base);\n  color: var(--ion-color-contrast);\n}\n\n:host(.ion-color) .item-native,\n:host(.ion-color) .item-inner {\n  border-color: var(--ion-color-shade);\n}\n\n:host(.ion-activated) .item-native {\n  color: var(--color-activated);\n}\n:host(.ion-activated) .item-native::after {\n  background: var(--background-activated);\n  opacity: var(--background-activated-opacity);\n}\n\n:host(.ion-color.ion-activated) .item-native {\n  color: var(--ion-color-contrast);\n}\n\n:host(.ion-focused) .item-native {\n  color: var(--color-focused);\n}\n:host(.ion-focused) .item-native::after {\n  background: var(--background-focused);\n  opacity: var(--background-focused-opacity);\n}\n\n:host(.ion-color.ion-focused) .item-native {\n  color: var(--ion-color-contrast);\n}\n:host(.ion-color.ion-focused) .item-native::after {\n  background: var(--ion-color-contrast);\n}\n\n@media (any-hover: hover) {\n  :host(.ion-activatable:not(.ion-focused):hover) .item-native {\n    color: var(--color-hover);\n  }\n  :host(.ion-activatable:not(.ion-focused):hover) .item-native::after {\n    background: var(--background-hover);\n    opacity: var(--background-hover-opacity);\n  }\n  :host(.ion-color.ion-activatable:not(.ion-focused):hover) .item-native {\n    color: var(--ion-color-contrast);\n  }\n  :host(.ion-color.ion-activatable:not(.ion-focused):hover) .item-native::after {\n    background: var(--ion-color-contrast);\n  }\n}\n:host(.item-control-needs-pointer-cursor) {\n  cursor: pointer;\n}\n\n:host(.item-interactive-disabled:not(.item-multiple-inputs)) {\n  cursor: default;\n  pointer-events: none;\n}\n\n:host(.item-disabled) {\n  cursor: default;\n  opacity: 0.3;\n  pointer-events: none;\n}\n\n.item-native {\n  border-radius: var(--border-radius);\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-top: var(--padding-top);\n  padding-bottom: var(--padding-bottom);\n  font-family: inherit;\n  font-size: inherit;\n  font-style: inherit;\n  font-weight: inherit;\n  letter-spacing: inherit;\n  text-decoration: inherit;\n  text-indent: inherit;\n  text-overflow: inherit;\n  text-transform: inherit;\n  text-align: inherit;\n  white-space: inherit;\n  color: inherit;\n  /* stylelint-disable */\n  padding-right: var(--padding-end);\n  padding-left: calc(var(--padding-start) + var(--ion-safe-area-left, 0px));\n  /* stylelint-enable */\n  display: flex;\n  position: relative;\n  align-items: inherit;\n  justify-content: inherit;\n  width: 100%;\n  min-height: var(--min-height);\n  transition: var(--transition);\n  border-width: var(--border-width);\n  border-style: var(--border-style);\n  border-color: var(--border-color);\n  outline: none;\n  background: var(--background);\n  overflow: inherit;\n  z-index: 1;\n  box-sizing: border-box;\n}\n:host-context([dir=rtl]) .item-native {\n  padding-right: calc(var(--padding-start) + var(--ion-safe-area-right, 0px));\n  padding-left: var(--padding-end);\n}\n\n[dir=rtl] .item-native {\n  padding-right: calc(var(--padding-start) + var(--ion-safe-area-right, 0px));\n  padding-left: var(--padding-end);\n}\n\n@supports selector(:dir(rtl)) {\n  .item-native:dir(rtl) {\n    padding-right: calc(var(--padding-start) + var(--ion-safe-area-right, 0px));\n    padding-left: var(--padding-end);\n  }\n}\n\n.item-native::-moz-focus-inner {\n  border: 0;\n}\n\n.item-native::after {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  position: absolute;\n  content: \"\";\n  opacity: 0;\n  transition: var(--transition);\n  z-index: -1;\n}\n\nbutton,\na {\n  cursor: pointer;\n  user-select: none;\n  -webkit-user-drag: none;\n}\n\n.item-inner {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-top: var(--inner-padding-top);\n  padding-bottom: var(--inner-padding-bottom);\n  /* stylelint-disable */\n  padding-right: calc(var(--ion-safe-area-right, 0px) + var(--inner-padding-end));\n  padding-left: var(--inner-padding-start);\n  /* stylelint-enable */\n  display: flex;\n  position: relative;\n  flex: 1;\n  flex-direction: inherit;\n  align-items: inherit;\n  align-self: stretch;\n  min-height: inherit;\n  border-width: var(--inner-border-width);\n  border-style: var(--border-style);\n  border-color: var(--border-color);\n  box-shadow: var(--inner-box-shadow);\n  overflow: inherit;\n  box-sizing: border-box;\n}\n:host-context([dir=rtl]) .item-inner {\n  padding-right: var(--inner-padding-start);\n  padding-left: calc(var(--ion-safe-area-left, 0px) + var(--inner-padding-end));\n}\n\n[dir=rtl] .item-inner {\n  padding-right: var(--inner-padding-start);\n  padding-left: calc(var(--ion-safe-area-left, 0px) + var(--inner-padding-end));\n}\n\n@supports selector(:dir(rtl)) {\n  .item-inner:dir(rtl) {\n    padding-right: var(--inner-padding-start);\n    padding-left: calc(var(--ion-safe-area-left, 0px) + var(--inner-padding-end));\n  }\n}\n\n.item-detail-icon {\n  /**\n   * IonItem applies its own end padding. However,\n   * all IonIcons have the same bounding box meaning\n   * there may be white space for narrow icons. As\n   * a result, the white space gives the appearance\n   * that there is too much end margin. We move the default\n   * chevron icon over to account for this extra whitespace.\n   */\n  -webkit-margin-start: calc(var(--inner-padding-end) / 2);\n  margin-inline-start: calc(var(--inner-padding-end) / 2);\n  -webkit-margin-end: -6px;\n  margin-inline-end: -6px;\n  color: var(--detail-icon-color);\n  font-size: var(--detail-icon-font-size);\n  opacity: var(--detail-icon-opacity);\n}\n\n::slotted(ion-icon) {\n  font-size: 1.6em;\n}\n\n::slotted(ion-button) {\n  --margin-top: 0;\n  --margin-bottom: 0;\n  --margin-start: 0;\n  --margin-end: 0;\n  z-index: 1;\n}\n\n::slotted(ion-label:not([slot=end])) {\n  flex: 1;\n  width: min-content;\n  /**\n   * We allow labels in the default\n   * slot to grow. However, we do not\n   * want them to grow indefinitely.\n   */\n  max-width: 100%;\n}\n\n:host(.item-input) {\n  align-items: center;\n}\n\n.input-wrapper {\n  display: flex;\n  flex: 1;\n  flex-direction: inherit;\n  align-items: inherit;\n  align-self: stretch;\n  text-overflow: ellipsis;\n  overflow: inherit;\n  box-sizing: border-box;\n}\n\n:host(.item-label-stacked),\n:host(.item-label-floating) {\n  align-items: start;\n}\n\n:host(.item-label-stacked) .input-wrapper,\n:host(.item-label-floating) .input-wrapper {\n  flex: 1;\n  flex-direction: column;\n}\n\n:host(.item-multiple-inputs) ::slotted(ion-checkbox),\n:host(.item-multiple-inputs) ::slotted(ion-datetime),\n:host(.item-multiple-inputs) ::slotted(ion-radio) {\n  position: relative;\n}\n\n:host(.item-textarea) {\n  align-items: stretch;\n}\n\n::slotted(ion-reorder[slot]) {\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\nion-ripple-effect {\n  color: var(--ripple-color);\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --min-height: 44px;\n  --transition: background-color 200ms linear, opacity 200ms linear;\n  --padding-start: 16px;\n  --inner-padding-end: 16px;\n  --inner-border-width: 0px 0px 0.55px 0px;\n  --background: var(--ion-item-background, var(--ion-background-color, #fff));\n  /**\n   * The active/focus states need\n   * to be the opposite of the background color\n   * so there is enough contrast. The background\n   * defaults to var(--ion-background-color), so we\n   * default to var(--ion-text-color) which will give us\n   * the opposite color.\n   * i.e. if var(--ion-background-color) is #000\n   * then var(--ion-text-color) will be #fff.\n   */\n  --background-activated: var(--ion-text-color, #000);\n  --background-focused: var(--ion-text-color, #000);\n  --background-hover: currentColor;\n  --background-activated-opacity: .12;\n  --background-focused-opacity: .15;\n  --background-hover-opacity: .04;\n  --border-color: var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-250, var(--ion-background-color-step-250, #c8c7cc))));\n  --color: var(--ion-item-color, var(--ion-text-color, #000));\n  font-size: 1rem;\n}\n\n:host(.ion-activated) {\n  --transition: none;\n}\n\n:host(.ion-color.ion-focused) .item-native::after {\n  background: #000;\n  opacity: 0.15;\n}\n\n:host(.ion-color.ion-activated) .item-native::after {\n  background: #000;\n  opacity: 0.12;\n}\n\n:host(.item-lines-full) {\n  --border-width: 0px 0px 0.55px 0px;\n}\n\n:host(.item-lines-inset) {\n  --inner-border-width: 0px 0px 0.55px 0px;\n}\n\n:host(.item-lines-inset),\n:host(.item-lines-none) {\n  --border-width: 0px;\n}\n\n:host(.item-lines-full),\n:host(.item-lines-none) {\n  --inner-border-width: 0px;\n}\n\n::slotted([slot=start]) {\n  -webkit-margin-start: 0;\n  margin-inline-start: 0;\n  -webkit-margin-end: 16px;\n  margin-inline-end: 16px;\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\n\n::slotted(ion-icon[slot=start]),\n::slotted(ion-icon[slot=end]) {\n  margin-top: 7px;\n  margin-bottom: 7px;\n}\n\n::slotted(ion-toggle[slot=start]),\n::slotted(ion-toggle[slot=end]) {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n:host(.item-label-stacked) ::slotted([slot=end]),\n:host(.item-label-floating) ::slotted([slot=end]) {\n  margin-top: 7px;\n  margin-bottom: 7px;\n}\n\n::slotted(.button-small) {\n  --padding-top: 1px;\n  --padding-bottom: 1px;\n  --padding-start: .5em;\n  --padding-end: .5em;\n  min-height: 24px;\n  font-size: 0.8125rem;\n}\n\n::slotted(ion-avatar) {\n  width: 36px;\n  height: 36px;\n}\n\n::slotted(ion-thumbnail) {\n  --size: 56px;\n}\n\n::slotted(ion-avatar[slot=end]),\n::slotted(ion-thumbnail[slot=end]) {\n  -webkit-margin-start: 8px;\n  margin-inline-start: 8px;\n  -webkit-margin-end: 8px;\n  margin-inline-end: 8px;\n  margin-top: 8px;\n  margin-bottom: 8px;\n}\n\n:host(.item-radio) ::slotted(ion-label),\n:host(.item-toggle) ::slotted(ion-label) {\n  -webkit-margin-start: 0px;\n  margin-inline-start: 0px;\n}\n\n::slotted(ion-label) {\n  -webkit-margin-start: 0;\n  margin-inline-start: 0;\n  -webkit-margin-end: 8px;\n  margin-inline-end: 8px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n}\n\n:host(.item-label-floating),\n:host(.item-label-stacked) {\n  --min-height: 68px;\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the item\n   * @prop --background-activated: Background of the item when pressed. Note: setting this will interfere with the Material Design ripple.\n   * @prop --background-activated-opacity: Opacity of the item background when pressed\n   * @prop --background-focused: Background of the item when focused with the tab key\n   * @prop --background-focused-opacity: Opacity of the item background when focused with the tab key\n   * @prop --background-hover: Background of the item on hover\n   * @prop --background-hover-opacity: Opacity of the background of the item on hover\n   *\n   * @prop --border-color: Color of the item border\n   * @prop --border-radius: Radius of the item border\n   * @prop --border-style: Style of the item border\n   * @prop --border-width: Width of the item border\n   *\n   * @prop --color: Color of the item\n   * @prop --color-activated: Color of the item when pressed\n   * @prop --color-focused: Color of the item when focused with the tab key\n   * @prop --color-hover: Color of the item on hover\n   *\n   * @prop --detail-icon-color: Color of the item detail icon\n   * @prop --detail-icon-opacity: Opacity of the item detail icon\n   * @prop --detail-icon-font-size: Font size of the item detail icon\n   *\n   * @prop --inner-border-width: Width of the item inner border\n   * @prop --inner-box-shadow: Box shadow of the item inner\n   * @prop --inner-padding-top: Top padding of the item inner\n   * @prop --inner-padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the item inner\n   * @prop --inner-padding-bottom: Bottom padding of the item inner\n   * @prop --inner-padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the item inner\n   *\n   * @prop --min-height: Minimum height of the item\n   *\n   * @prop --padding-bottom: Bottom padding of the item\n   * @prop --padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the item\n   * @prop --padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the item\n   * @prop --padding-top: Top padding of the item\n   *\n   * @prop --transition: Transition of the item\n   *\n   * @prop --ripple-color: Color of the item ripple effect\n   *\n   */\n  --border-radius: 0px;\n  --border-width: 0px;\n  --border-style: solid;\n  --padding-top: 0px;\n  --padding-bottom: 0px;\n  --padding-end: 0px;\n  --padding-start: 0px;\n  --inner-border-width: 0px;\n  --inner-padding-top: 0px;\n  --inner-padding-bottom: 0px;\n  --inner-padding-start: 0px;\n  --inner-padding-end: 0px;\n  --inner-box-shadow: none;\n  --detail-icon-color: initial;\n  --detail-icon-font-size: 1.25em;\n  --detail-icon-opacity: 0.25;\n  --color-activated: var(--color);\n  --color-focused: var(--color);\n  --color-hover: var(--color);\n  --ripple-color: currentColor;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  display: block;\n  position: relative;\n  align-items: center;\n  justify-content: space-between;\n  outline: none;\n  color: var(--color);\n  font-family: var(--ion-font-family, inherit);\n  text-align: initial;\n  text-decoration: none;\n  overflow: hidden;\n  box-sizing: border-box;\n}\n\n:host(.ion-color) .item-native {\n  background: var(--ion-color-base);\n  color: var(--ion-color-contrast);\n}\n\n:host(.ion-color) .item-native,\n:host(.ion-color) .item-inner {\n  border-color: var(--ion-color-shade);\n}\n\n:host(.ion-activated) .item-native {\n  color: var(--color-activated);\n}\n:host(.ion-activated) .item-native::after {\n  background: var(--background-activated);\n  opacity: var(--background-activated-opacity);\n}\n\n:host(.ion-color.ion-activated) .item-native {\n  color: var(--ion-color-contrast);\n}\n\n:host(.ion-focused) .item-native {\n  color: var(--color-focused);\n}\n:host(.ion-focused) .item-native::after {\n  background: var(--background-focused);\n  opacity: var(--background-focused-opacity);\n}\n\n:host(.ion-color.ion-focused) .item-native {\n  color: var(--ion-color-contrast);\n}\n:host(.ion-color.ion-focused) .item-native::after {\n  background: var(--ion-color-contrast);\n}\n\n@media (any-hover: hover) {\n  :host(.ion-activatable:not(.ion-focused):hover) .item-native {\n    color: var(--color-hover);\n  }\n  :host(.ion-activatable:not(.ion-focused):hover) .item-native::after {\n    background: var(--background-hover);\n    opacity: var(--background-hover-opacity);\n  }\n  :host(.ion-color.ion-activatable:not(.ion-focused):hover) .item-native {\n    color: var(--ion-color-contrast);\n  }\n  :host(.ion-color.ion-activatable:not(.ion-focused):hover) .item-native::after {\n    background: var(--ion-color-contrast);\n  }\n}\n:host(.item-control-needs-pointer-cursor) {\n  cursor: pointer;\n}\n\n:host(.item-interactive-disabled:not(.item-multiple-inputs)) {\n  cursor: default;\n  pointer-events: none;\n}\n\n:host(.item-disabled) {\n  cursor: default;\n  opacity: 0.3;\n  pointer-events: none;\n}\n\n.item-native {\n  border-radius: var(--border-radius);\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-top: var(--padding-top);\n  padding-bottom: var(--padding-bottom);\n  font-family: inherit;\n  font-size: inherit;\n  font-style: inherit;\n  font-weight: inherit;\n  letter-spacing: inherit;\n  text-decoration: inherit;\n  text-indent: inherit;\n  text-overflow: inherit;\n  text-transform: inherit;\n  text-align: inherit;\n  white-space: inherit;\n  color: inherit;\n  /* stylelint-disable */\n  padding-right: var(--padding-end);\n  padding-left: calc(var(--padding-start) + var(--ion-safe-area-left, 0px));\n  /* stylelint-enable */\n  display: flex;\n  position: relative;\n  align-items: inherit;\n  justify-content: inherit;\n  width: 100%;\n  min-height: var(--min-height);\n  transition: var(--transition);\n  border-width: var(--border-width);\n  border-style: var(--border-style);\n  border-color: var(--border-color);\n  outline: none;\n  background: var(--background);\n  overflow: inherit;\n  z-index: 1;\n  box-sizing: border-box;\n}\n:host-context([dir=rtl]) .item-native {\n  padding-right: calc(var(--padding-start) + var(--ion-safe-area-right, 0px));\n  padding-left: var(--padding-end);\n}\n\n[dir=rtl] .item-native {\n  padding-right: calc(var(--padding-start) + var(--ion-safe-area-right, 0px));\n  padding-left: var(--padding-end);\n}\n\n@supports selector(:dir(rtl)) {\n  .item-native:dir(rtl) {\n    padding-right: calc(var(--padding-start) + var(--ion-safe-area-right, 0px));\n    padding-left: var(--padding-end);\n  }\n}\n\n.item-native::-moz-focus-inner {\n  border: 0;\n}\n\n.item-native::after {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  position: absolute;\n  content: \"\";\n  opacity: 0;\n  transition: var(--transition);\n  z-index: -1;\n}\n\nbutton,\na {\n  cursor: pointer;\n  user-select: none;\n  -webkit-user-drag: none;\n}\n\n.item-inner {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-top: var(--inner-padding-top);\n  padding-bottom: var(--inner-padding-bottom);\n  /* stylelint-disable */\n  padding-right: calc(var(--ion-safe-area-right, 0px) + var(--inner-padding-end));\n  padding-left: var(--inner-padding-start);\n  /* stylelint-enable */\n  display: flex;\n  position: relative;\n  flex: 1;\n  flex-direction: inherit;\n  align-items: inherit;\n  align-self: stretch;\n  min-height: inherit;\n  border-width: var(--inner-border-width);\n  border-style: var(--border-style);\n  border-color: var(--border-color);\n  box-shadow: var(--inner-box-shadow);\n  overflow: inherit;\n  box-sizing: border-box;\n}\n:host-context([dir=rtl]) .item-inner {\n  padding-right: var(--inner-padding-start);\n  padding-left: calc(var(--ion-safe-area-left, 0px) + var(--inner-padding-end));\n}\n\n[dir=rtl] .item-inner {\n  padding-right: var(--inner-padding-start);\n  padding-left: calc(var(--ion-safe-area-left, 0px) + var(--inner-padding-end));\n}\n\n@supports selector(:dir(rtl)) {\n  .item-inner:dir(rtl) {\n    padding-right: var(--inner-padding-start);\n    padding-left: calc(var(--ion-safe-area-left, 0px) + var(--inner-padding-end));\n  }\n}\n\n.item-detail-icon {\n  /**\n   * IonItem applies its own end padding. However,\n   * all IonIcons have the same bounding box meaning\n   * there may be white space for narrow icons. As\n   * a result, the white space gives the appearance\n   * that there is too much end margin. We move the default\n   * chevron icon over to account for this extra whitespace.\n   */\n  -webkit-margin-start: calc(var(--inner-padding-end) / 2);\n  margin-inline-start: calc(var(--inner-padding-end) / 2);\n  -webkit-margin-end: -6px;\n  margin-inline-end: -6px;\n  color: var(--detail-icon-color);\n  font-size: var(--detail-icon-font-size);\n  opacity: var(--detail-icon-opacity);\n}\n\n::slotted(ion-icon) {\n  font-size: 1.6em;\n}\n\n::slotted(ion-button) {\n  --margin-top: 0;\n  --margin-bottom: 0;\n  --margin-start: 0;\n  --margin-end: 0;\n  z-index: 1;\n}\n\n::slotted(ion-label:not([slot=end])) {\n  flex: 1;\n  width: min-content;\n  /**\n   * We allow labels in the default\n   * slot to grow. However, we do not\n   * want them to grow indefinitely.\n   */\n  max-width: 100%;\n}\n\n:host(.item-input) {\n  align-items: center;\n}\n\n.input-wrapper {\n  display: flex;\n  flex: 1;\n  flex-direction: inherit;\n  align-items: inherit;\n  align-self: stretch;\n  text-overflow: ellipsis;\n  overflow: inherit;\n  box-sizing: border-box;\n}\n\n:host(.item-label-stacked),\n:host(.item-label-floating) {\n  align-items: start;\n}\n\n:host(.item-label-stacked) .input-wrapper,\n:host(.item-label-floating) .input-wrapper {\n  flex: 1;\n  flex-direction: column;\n}\n\n:host(.item-multiple-inputs) ::slotted(ion-checkbox),\n:host(.item-multiple-inputs) ::slotted(ion-datetime),\n:host(.item-multiple-inputs) ::slotted(ion-radio) {\n  position: relative;\n}\n\n:host(.item-textarea) {\n  align-items: stretch;\n}\n\n::slotted(ion-reorder[slot]) {\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\nion-ripple-effect {\n  color: var(--ripple-color);\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --min-height: 48px;\n  --background: var(--ion-item-background, var(--ion-background-color, #fff));\n  --background-activated: transparent;\n  --background-focused: currentColor;\n  --background-hover: currentColor;\n  --background-activated-opacity: 0;\n  --background-focused-opacity: .12;\n  --background-hover-opacity: .04;\n  --border-color: var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-150, var(--ion-background-color-step-150, rgba(0, 0, 0, 0.13)))));\n  --color: var(--ion-item-color, var(--ion-text-color, #000));\n  --transition: opacity 15ms linear, background-color 15ms linear;\n  --padding-start: 16px;\n  --inner-padding-end: 16px;\n  --inner-border-width: 0 0 1px 0;\n  font-size: 1rem;\n  font-weight: normal;\n  text-transform: none;\n}\n\n:host(.ion-color.ion-activated) .item-native::after {\n  background: transparent;\n}\n\n:host(.item-interactive) {\n  --border-width: 0 0 1px 0;\n  --inner-border-width: 0;\n}\n\n:host(.item-lines-full) {\n  --border-width: 0 0 1px 0;\n}\n\n:host(.item-lines-inset) {\n  --inner-border-width: 0 0 1px 0;\n}\n\n:host(.item-lines-inset),\n:host(.item-lines-none) {\n  --border-width: 0;\n}\n\n:host(.item-lines-full),\n:host(.item-lines-none) {\n  --inner-border-width: 0;\n}\n\n:host(.item-multi-line) ::slotted([slot=start]),\n:host(.item-multi-line) ::slotted([slot=end]) {\n  margin-top: 16px;\n  margin-bottom: 16px;\n  align-self: flex-start;\n}\n\n::slotted([slot=start]) {\n  -webkit-margin-end: 16px;\n  margin-inline-end: 16px;\n}\n\n::slotted([slot=end]) {\n  -webkit-margin-start: 16px;\n  margin-inline-start: 16px;\n}\n\n::slotted(ion-icon) {\n  color: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.54);\n  font-size: 1.5em;\n}\n\n:host(.ion-color) ::slotted(ion-icon) {\n  color: var(--ion-color-contrast);\n}\n\n::slotted(ion-icon[slot]) {\n  margin-top: 12px;\n  margin-bottom: 12px;\n}\n\n::slotted(ion-icon[slot=start]) {\n  -webkit-margin-end: 32px;\n  margin-inline-end: 32px;\n}\n\n::slotted(ion-icon[slot=end]) {\n  -webkit-margin-start: 16px;\n  margin-inline-start: 16px;\n}\n\n::slotted(ion-toggle[slot=start]),\n::slotted(ion-toggle[slot=end]) {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n::slotted(ion-note) {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  align-self: flex-start;\n  font-size: 0.6875rem;\n}\n\n::slotted(ion-note[slot]) {\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 18px;\n  padding-bottom: 10px;\n}\n\n::slotted(ion-avatar) {\n  width: 40px;\n  height: 40px;\n}\n\n::slotted(ion-thumbnail) {\n  --size: 56px;\n}\n\n::slotted(ion-avatar),\n::slotted(ion-thumbnail) {\n  margin-top: 8px;\n  margin-bottom: 8px;\n}\n\n::slotted(ion-avatar[slot=start]),\n::slotted(ion-thumbnail[slot=start]) {\n  -webkit-margin-end: 16px;\n  margin-inline-end: 16px;\n}\n\n::slotted(ion-avatar[slot=end]),\n::slotted(ion-thumbnail[slot=end]) {\n  -webkit-margin-start: 16px;\n  margin-inline-start: 16px;\n}\n\n::slotted(ion-label) {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 10px;\n  margin-bottom: 10px;\n}\n\n:host(.item-label-stacked) ::slotted([slot=end]),\n:host(.item-label-floating) ::slotted([slot=end]) {\n  margin-top: 7px;\n  margin-bottom: 7px;\n}\n\n:host(.item-toggle) ::slotted(ion-label),\n:host(.item-radio) ::slotted(ion-label) {\n  -webkit-margin-start: 0;\n  margin-inline-start: 0;\n}\n\n::slotted(.button-small) {\n  --padding-top: 2px;\n  --padding-bottom: 2px;\n  --padding-start: .6em;\n  --padding-end: .6em;\n  min-height: 25px;\n  font-size: 0.75rem;\n}\n\n:host(.item-label-floating),\n:host(.item-label-stacked) {\n  --min-height: 55px;\n}\n\n:host(.ion-focused:not(.ion-color)) ::slotted(.label-stacked),\n:host(.ion-focused:not(.ion-color)) ::slotted(.label-floating),\n:host(.item-has-focus:not(.ion-color)) ::slotted(.label-stacked),\n:host(.item-has-focus:not(.ion-color)) ::slotted(.label-floating) {\n  color: var(--ion-color-primary, #0054e9);\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, forceUpdate, h } from \"@stencil/core\";\nimport { inheritAttributes, raf } from \"../../utils/helpers\";\nimport { createColorClasses, hostContext, openURL } from \"../../utils/theme\";\nimport { chevronForward } from \"ionicons/icons\";\nimport { getIonMode } from \"../../global/ionic-global\";\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n *\n * @slot - Content is placed between the named slots if provided without a slot.\n * @slot start - Content is placed to the left of the item text in LTR, and to the right in RTL.\n * @slot end - Content is placed to the right of the item text in LTR, and to the left in RTL.\n *\n * @part native - The native HTML button, anchor or div element that wraps all child elements.\n * @part detail-icon - The chevron icon for the item. Only applies when `detail=\"true\"`.\n */\nexport class Item {\n    constructor() {\n        this.labelColorStyles = {};\n        this.itemStyles = new Map();\n        this.inheritedAriaAttributes = {};\n        this.multipleInputs = false;\n        this.focusable = true;\n        this.color = undefined;\n        this.button = false;\n        this.detail = undefined;\n        this.detailIcon = chevronForward;\n        this.disabled = false;\n        this.download = undefined;\n        this.href = undefined;\n        this.rel = undefined;\n        this.lines = undefined;\n        this.routerAnimation = undefined;\n        this.routerDirection = 'forward';\n        this.target = undefined;\n        this.type = 'button';\n    }\n    buttonChanged() {\n        // Update the focusable option when the button option is changed\n        this.focusable = this.isFocusable();\n    }\n    labelColorChanged(ev) {\n        const { color } = this;\n        // There will be a conflict with item color if\n        // we apply the label color to item, so we ignore\n        // the label color if the user sets a color on item\n        if (color === undefined) {\n            this.labelColorStyles = ev.detail;\n        }\n    }\n    itemStyle(ev) {\n        ev.stopPropagation();\n        const tagName = ev.target.tagName;\n        const updatedStyles = ev.detail;\n        const newStyles = {};\n        const childStyles = this.itemStyles.get(tagName) || {};\n        let hasStyleChange = false;\n        Object.keys(updatedStyles).forEach((key) => {\n            if (updatedStyles[key]) {\n                const itemKey = `item-${key}`;\n                if (!childStyles[itemKey]) {\n                    hasStyleChange = true;\n                }\n                newStyles[itemKey] = true;\n            }\n        });\n        if (!hasStyleChange && Object.keys(newStyles).length !== Object.keys(childStyles).length) {\n            hasStyleChange = true;\n        }\n        if (hasStyleChange) {\n            this.itemStyles.set(tagName, newStyles);\n            forceUpdate(this);\n        }\n    }\n    connectedCallback() {\n        this.hasStartEl();\n    }\n    componentWillLoad() {\n        this.inheritedAriaAttributes = inheritAttributes(this.el, ['aria-label']);\n    }\n    componentDidLoad() {\n        raf(() => {\n            this.setMultipleInputs();\n            this.focusable = this.isFocusable();\n        });\n    }\n    // If the item contains multiple clickable elements and/or inputs, then the item\n    // should not have a clickable input cover over the entire item to prevent\n    // interfering with their individual click events\n    setMultipleInputs() {\n        // The following elements have a clickable cover that is relative to the entire item\n        const covers = this.el.querySelectorAll('ion-checkbox, ion-datetime, ion-select, ion-radio');\n        // The following elements can accept focus alongside the previous elements\n        // therefore if these elements are also a child of item, we don't want the\n        // input cover on top of those interfering with their clicks\n        const inputs = this.el.querySelectorAll('ion-input, ion-range, ion-searchbar, ion-segment, ion-textarea, ion-toggle');\n        // The following elements should also stay clickable when an input with cover is present\n        const clickables = this.el.querySelectorAll('ion-anchor, ion-button, a, button');\n        // Check for multiple inputs to change the position of the input cover to relative\n        // for all of the covered inputs above\n        this.multipleInputs =\n            covers.length + inputs.length > 1 ||\n                covers.length + clickables.length > 1 ||\n                (covers.length > 0 && this.isClickable());\n    }\n    // If the item contains an input including a checkbox, datetime, select, or radio\n    // then the item will have a clickable input cover that covers the item\n    // that should get the hover, focused and activated states UNLESS it has multiple\n    // inputs, then those need to individually get each click\n    hasCover() {\n        const inputs = this.el.querySelectorAll('ion-checkbox, ion-datetime, ion-select, ion-radio');\n        return inputs.length === 1 && !this.multipleInputs;\n    }\n    // If the item has an href or button property it will render a native\n    // anchor or button that is clickable\n    isClickable() {\n        return this.href !== undefined || this.button;\n    }\n    canActivate() {\n        return this.isClickable() || this.hasCover();\n    }\n    isFocusable() {\n        const focusableChild = this.el.querySelector('.ion-focusable');\n        return this.canActivate() || focusableChild !== null;\n    }\n    hasStartEl() {\n        const startEl = this.el.querySelector('[slot=\"start\"]');\n        if (startEl !== null) {\n            this.el.classList.add('item-has-start-slot');\n        }\n    }\n    getFirstInteractive() {\n        const controls = this.el.querySelectorAll('ion-toggle:not([disabled]), ion-checkbox:not([disabled]), ion-radio:not([disabled]), ion-select:not([disabled]), ion-input:not([disabled]), ion-textarea:not([disabled])');\n        return controls[0];\n    }\n    render() {\n        const { detail, detailIcon, download, labelColorStyles, lines, disabled, href, rel, target, routerAnimation, routerDirection, inheritedAriaAttributes, multipleInputs, } = this;\n        const childStyles = {};\n        const mode = getIonMode(this);\n        const clickable = this.isClickable();\n        const canActivate = this.canActivate();\n        const TagType = clickable ? (href === undefined ? 'button' : 'a') : 'div';\n        const attrs = TagType === 'button'\n            ? { type: this.type }\n            : {\n                download,\n                href,\n                rel,\n                target,\n            };\n        let clickFn = {};\n        const firstInteractive = this.getFirstInteractive();\n        // Only set onClick if the item is clickable to prevent screen\n        // readers from reading all items as clickable\n        if (clickable || (firstInteractive !== undefined && !multipleInputs)) {\n            clickFn = {\n                onClick: (ev) => {\n                    if (clickable) {\n                        openURL(href, ev, routerDirection, routerAnimation);\n                    }\n                    if (firstInteractive !== undefined && !multipleInputs) {\n                        const path = ev.composedPath();\n                        const target = path[0];\n                        if (ev.isTrusted) {\n                            /**\n                             * Dispatches a click event to the first interactive element,\n                             * when it is the result of a user clicking on the item.\n                             *\n                             * We check if the click target is in the shadow root,\n                             * which means the user clicked on the .item-native or\n                             * .item-inner padding.\n                             */\n                            const clickedWithinShadowRoot = this.el.shadowRoot.contains(target);\n                            if (clickedWithinShadowRoot) {\n                                /**\n                                 * For input/textarea clicking the padding should focus the\n                                 * text field (thus making it editable). For everything else,\n                                 * we want to click the control so it activates.\n                                 */\n                                if (firstInteractive.tagName === 'ION-INPUT' || firstInteractive.tagName === 'ION-TEXTAREA') {\n                                    firstInteractive.setFocus();\n                                }\n                                else {\n                                    firstInteractive.click();\n                                }\n                            }\n                        }\n                    }\n                },\n            };\n        }\n        const showDetail = detail !== undefined ? detail : mode === 'ios' && clickable;\n        this.itemStyles.forEach((value) => {\n            Object.assign(childStyles, value);\n        });\n        const ariaDisabled = disabled || childStyles['item-interactive-disabled'] ? 'true' : null;\n        const inList = hostContext('ion-list', this.el) && !hostContext('ion-radio-group', this.el);\n        /**\n         * Inputs and textareas do not need to show a cursor pointer.\n         * However, other form controls such as checkboxes and radios do.\n         */\n        const firstInteractiveNeedsPointerCursor = firstInteractive !== undefined && !['ION-INPUT', 'ION-TEXTAREA'].includes(firstInteractive.tagName);\n        return (h(Host, { key: '6fe6bae954259703482f175312a051ff1b315a95', \"aria-disabled\": ariaDisabled, class: Object.assign(Object.assign(Object.assign({}, childStyles), labelColorStyles), createColorClasses(this.color, {\n                item: true,\n                [mode]: true,\n                'item-lines-default': lines === undefined,\n                [`item-lines-${lines}`]: lines !== undefined,\n                'item-control-needs-pointer-cursor': firstInteractiveNeedsPointerCursor,\n                'item-disabled': disabled,\n                'in-list': inList,\n                'item-multiple-inputs': this.multipleInputs,\n                'ion-activatable': canActivate,\n                'ion-focusable': this.focusable,\n                'item-rtl': document.dir === 'rtl',\n            })), role: inList ? 'listitem' : null }, h(TagType, Object.assign({ key: 'fcfcffacb7d4e52f9458724332efa93d140cf637' }, attrs, inheritedAriaAttributes, { class: \"item-native\", part: \"native\", disabled: disabled }, clickFn), h(\"slot\", { key: '2c1be89990d1b4264f056f3afca2657dc25e868f', name: \"start\" }), h(\"div\", { key: 'a12010f2f251c29870806050357e247f297f752d', class: \"item-inner\" }, h(\"div\", { key: 'd0dc5901d634d3b7d8c9b4339ed02585b5b88828', class: \"input-wrapper\" }, h(\"slot\", { key: '5589d491f6058858310c72971de50ddf441379b1' })), h(\"slot\", { key: '7b2d2182336abef508d00882759df1a99a1cf93e', name: \"end\" }), showDetail && (h(\"ion-icon\", { key: 'f93f7e7166413f1f2691430dcda83ecf858f7e1f', icon: detailIcon, lazy: false, class: \"item-detail-icon\", part: \"detail-icon\", \"aria-hidden\": \"true\", \"flip-rtl\": detailIcon === chevronForward }))), canActivate && mode === 'md' && h(\"ion-ripple-effect\", { key: '3d13ce7623813d650ada97974b29a2e94e2405b1' }))));\n    }\n    static get is() { return \"ion-item\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"item.ios.scss\"],\n            \"md\": [\"item.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"item.ios.css\"],\n            \"md\": [\"item.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"color\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Color\",\n                    \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never> | undefined\",\n                    \"references\": {\n                        \"Color\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::Color\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The color to use from your application's color palette.\\nDefault options are: `\\\"primary\\\"`, `\\\"secondary\\\"`, `\\\"tertiary\\\"`, `\\\"success\\\"`, `\\\"warning\\\"`, `\\\"danger\\\"`, `\\\"light\\\"`, `\\\"medium\\\"`, and `\\\"dark\\\"`.\\nFor more information on colors, see [theming](/docs/theming/basics).\"\n                },\n                \"attribute\": \"color\",\n                \"reflect\": true\n            },\n            \"button\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, a button tag will be rendered and the item will be tappable.\"\n                },\n                \"attribute\": \"button\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"detail\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, a detail arrow will appear on the item. Defaults to `false` unless the `mode`\\nis `ios` and an `href` or `button` property is present.\"\n                },\n                \"attribute\": \"detail\",\n                \"reflect\": false\n            },\n            \"detailIcon\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The icon to use when `detail` is set to `true`.\"\n                },\n                \"attribute\": \"detail-icon\",\n                \"reflect\": false,\n                \"defaultValue\": \"chevronForward\"\n            },\n            \"disabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the user cannot interact with the item.\"\n                },\n                \"attribute\": \"disabled\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"download\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | undefined\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"This attribute instructs browsers to download a URL instead of navigating to\\nit, so the user will be prompted to save it as a local file. If the attribute\\nhas a value, it is used as the pre-filled file name in the Save prompt\\n(the user can still change the file name if they want).\"\n                },\n                \"attribute\": \"download\",\n                \"reflect\": false\n            },\n            \"href\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | undefined\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Contains a URL or a URL fragment that the hyperlink points to.\\nIf this property is set, an anchor tag will be rendered.\"\n                },\n                \"attribute\": \"href\",\n                \"reflect\": false\n            },\n            \"rel\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | undefined\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the relationship of the target object to the link object.\\nThe value is a space-separated list of [link types](https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types).\"\n                },\n                \"attribute\": \"rel\",\n                \"reflect\": false\n            },\n            \"lines\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'full' | 'inset' | 'none'\",\n                    \"resolved\": \"\\\"full\\\" | \\\"inset\\\" | \\\"none\\\" | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"How the bottom border should be displayed on the item.\"\n                },\n                \"attribute\": \"lines\",\n                \"reflect\": false\n            },\n            \"routerAnimation\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"AnimationBuilder | undefined\",\n                    \"resolved\": \"((baseEl: any, opts?: any) => Animation) | undefined\",\n                    \"references\": {\n                        \"AnimationBuilder\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::AnimationBuilder\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When using a router, it specifies the transition animation when navigating to\\nanother page using `href`.\"\n                }\n            },\n            \"routerDirection\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"RouterDirection\",\n                    \"resolved\": \"\\\"back\\\" | \\\"forward\\\" | \\\"root\\\"\",\n                    \"references\": {\n                        \"RouterDirection\": {\n                            \"location\": \"import\",\n                            \"path\": \"../router/utils/interface\",\n                            \"id\": \"src/components/router/utils/interface.ts::RouterDirection\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When using a router, it specifies the transition direction when navigating to\\nanother page using `href`.\"\n                },\n                \"attribute\": \"router-direction\",\n                \"reflect\": false,\n                \"defaultValue\": \"'forward'\"\n            },\n            \"target\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | undefined\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies where to display the linked URL.\\nOnly applies when an `href` is provided.\\nSpecial keywords: `\\\"_blank\\\"`, `\\\"_self\\\"`, `\\\"_parent\\\"`, `\\\"_top\\\"`.\"\n                },\n                \"attribute\": \"target\",\n                \"reflect\": false\n            },\n            \"type\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'submit' | 'reset' | 'button'\",\n                    \"resolved\": \"\\\"button\\\" | \\\"reset\\\" | \\\"submit\\\"\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The type of the button. Only used when an `onclick` or `button` property is present.\"\n                },\n                \"attribute\": \"type\",\n                \"reflect\": false,\n                \"defaultValue\": \"'button'\"\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"multipleInputs\": {},\n            \"focusable\": {}\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"button\",\n                \"methodName\": \"buttonChanged\"\n            }];\n    }\n    static get listeners() {\n        return [{\n                \"name\": \"ionColor\",\n                \"method\": \"labelColorChanged\",\n                \"target\": undefined,\n                \"capture\": false,\n                \"passive\": false\n            }, {\n                \"name\": \"ionStyle\",\n                \"method\": \"itemStyle\",\n                \"target\": undefined,\n                \"capture\": false,\n                \"passive\": false\n            }];\n    }\n}\n"],"version":3}