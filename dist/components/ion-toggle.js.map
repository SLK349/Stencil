{"file":"ion-toggle.js","mappings":"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","names":[],"sources":["node_modules/@ionic/core/dist/collection/components/toggle/toggle.ios.css?tag=ion-toggle&mode=ios&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/toggle/toggle.md.css?tag=ion-toggle&mode=md&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/toggle/toggle.js"],"sourcesContent":["/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --track-background: Background of the toggle track\n   * @prop --track-background-checked: Background of the toggle track when checked\n   * @prop --border-radius: Border radius of the toggle track\n   *\n   * @prop --handle-background: Background of the toggle handle\n   * @prop --handle-background-checked: Background of the toggle handle when checked\n   *\n   * @prop --handle-border-radius: Border radius of the toggle handle\n   * @prop --handle-box-shadow: Box shadow of the toggle handle\n   * @prop --handle-height: Height of the toggle handle\n   * @prop --handle-max-height: Maximum height of the toggle handle\n   * @prop --handle-width: Width of the toggle handle\n   * @prop --handle-spacing: Horizontal spacing around the toggle handle\n   * @prop --handle-transition: Transition of the toggle handle\n   */\n  /* stylelint-disable-next-line declaration-no-important */\n  box-sizing: content-box !important;\n  display: inline-block;\n  position: relative;\n  max-width: 100%;\n  outline: none;\n  cursor: pointer;\n  user-select: none;\n  z-index: 2;\n}\n\n:host(.in-item) {\n  flex: 1 1 0;\n  width: 100%;\n  height: 100%;\n}\n\n/**\n * Toggle can be slotted\n * in components such as item and\n * toolbar which is why we do not\n * limit the below behavior to just ion-item.\n */\n:host([slot=start]),\n:host([slot=end]) {\n  width: auto;\n}\n\n:host(.ion-focused) input {\n  border: 2px solid #5e9ed6;\n}\n\n:host(.toggle-disabled) {\n  pointer-events: none;\n}\n\ninput {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n  margin: 0;\n  padding: 0;\n  border: 0;\n  outline: 0;\n  clip: rect(0 0 0 0);\n  opacity: 0;\n  overflow: hidden;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n}\n\n.toggle-wrapper {\n  display: flex;\n  position: relative;\n  flex-grow: 1;\n  height: inherit;\n  transition: background-color 15ms linear;\n  cursor: inherit;\n}\n\n.label-text-wrapper {\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n}\n\n:host(.in-item) .label-text-wrapper {\n  margin-top: 10px;\n  margin-bottom: 10px;\n}\n\n:host(.in-item.toggle-label-placement-stacked) .label-text-wrapper {\n  margin-top: 10px;\n  margin-bottom: 16px;\n}\n\n:host(.in-item.toggle-label-placement-stacked) .native-wrapper {\n  margin-bottom: 10px;\n}\n\n/**\n * If no label text is placed into the slot\n * then the element should be hidden otherwise\n * there will be additional margins added.\n */\n.label-text-wrapper-hidden {\n  display: none;\n}\n\n.native-wrapper {\n  display: flex;\n  align-items: center;\n}\n\n:host(.toggle-justify-space-between) .toggle-wrapper {\n  justify-content: space-between;\n}\n\n:host(.toggle-justify-start) .toggle-wrapper {\n  justify-content: start;\n}\n\n:host(.toggle-justify-end) .toggle-wrapper {\n  justify-content: end;\n}\n\n:host(.toggle-alignment-start) .toggle-wrapper {\n  align-items: start;\n}\n\n:host(.toggle-alignment-center) .toggle-wrapper {\n  align-items: center;\n}\n\n/**\n * Label is on the left of the input in LTR and\n * on the right in RTL.\n */\n:host(.toggle-label-placement-start) .toggle-wrapper {\n  flex-direction: row;\n}\n\n:host(.toggle-label-placement-start) .label-text-wrapper {\n  /**\n   * The margin between the label and\n   * the input should be on the end\n   * when the label sits at the start.\n   */\n  -webkit-margin-start: 0;\n  margin-inline-start: 0;\n  -webkit-margin-end: 16px;\n  margin-inline-end: 16px;\n}\n\n/**\n * Label is on the right of the input in LTR and\n * on the left in RTL.\n */\n:host(.toggle-label-placement-end) .toggle-wrapper {\n  flex-direction: row-reverse;\n}\n\n/**\n * The margin between the label and\n * the input should be on the start\n * when the label sits at the end.\n */\n:host(.toggle-label-placement-end) .label-text-wrapper {\n  -webkit-margin-start: 16px;\n  margin-inline-start: 16px;\n  -webkit-margin-end: 0;\n  margin-inline-end: 0;\n}\n\n:host(.toggle-label-placement-fixed) .label-text-wrapper {\n  /**\n   * The margin between the label and\n   * the input should be on the end\n   * when the label sits at the start.\n   */\n  -webkit-margin-start: 0;\n  margin-inline-start: 0;\n  -webkit-margin-end: 16px;\n  margin-inline-end: 16px;\n}\n\n/**\n * Label is on the left of the input in LTR and\n * on the right in RTL. Label also has a fixed width.\n */\n:host(.toggle-label-placement-fixed) .label-text-wrapper {\n  flex: 0 0 100px;\n  width: 100px;\n  min-width: 100px;\n  max-width: 200px;\n}\n\n/**\n * Label is on top of the toggle.\n */\n:host(.toggle-label-placement-stacked) .toggle-wrapper {\n  flex-direction: column;\n}\n\n:host(.toggle-label-placement-stacked) .label-text-wrapper {\n  transform: scale(0.75);\n  /**\n   * The margin between the label and\n   * the toggle should be on the bottom\n   * when the label sits on top.\n   */\n  margin-left: 0;\n  margin-right: 0;\n  margin-bottom: 16px;\n  /**\n   * Label text should not extend\n   * beyond the bounds of the toggle.\n   */\n  max-width: calc(100% / 0.75);\n}\n\n:host(.toggle-label-placement-stacked.toggle-alignment-start) .label-text-wrapper {\n  transform-origin: left top;\n}\n:host-context([dir=rtl]):host(.toggle-label-placement-stacked.toggle-alignment-start) .label-text-wrapper, :host-context([dir=rtl]).toggle-label-placement-stacked.toggle-alignment-start .label-text-wrapper {\n  transform-origin: right top;\n}\n\n@supports selector(:dir(rtl)) {\n  :host(.toggle-label-placement-stacked.toggle-alignment-start:dir(rtl)) .label-text-wrapper {\n    transform-origin: right top;\n  }\n}\n\n:host(.toggle-label-placement-stacked.toggle-alignment-center) .label-text-wrapper {\n  transform-origin: center top;\n}\n:host-context([dir=rtl]):host(.toggle-label-placement-stacked.toggle-alignment-center) .label-text-wrapper, :host-context([dir=rtl]).toggle-label-placement-stacked.toggle-alignment-center .label-text-wrapper {\n  transform-origin: calc(100% - center) top;\n}\n\n@supports selector(:dir(rtl)) {\n  :host(.toggle-label-placement-stacked.toggle-alignment-center:dir(rtl)) .label-text-wrapper {\n    transform-origin: calc(100% - center) top;\n  }\n}\n\n.toggle-icon-wrapper {\n  display: flex;\n  position: relative;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  transition: var(--handle-transition);\n  will-change: transform;\n}\n\n.toggle-icon {\n  border-radius: var(--border-radius);\n  display: block;\n  position: relative;\n  width: 100%;\n  height: 100%;\n  background: var(--track-background);\n  overflow: inherit;\n}\n\n:host(.toggle-checked) .toggle-icon {\n  background: var(--track-background-checked);\n}\n\n.toggle-inner {\n  border-radius: var(--handle-border-radius);\n  position: absolute;\n  left: var(--handle-spacing);\n  width: var(--handle-width);\n  height: var(--handle-height);\n  max-height: var(--handle-max-height);\n  transition: var(--handle-transition);\n  background: var(--handle-background);\n  box-shadow: var(--handle-box-shadow);\n  contain: strict;\n}\n\n/**\n * We do not use the @ltr and @rtl mixins\n * here because ion-toggle uses the Shadow DOM\n * and WebKit does not support :host-context.\n */\n:host(.toggle-ltr) .toggle-inner {\n  left: var(--handle-spacing);\n}\n\n:host(.toggle-rtl) .toggle-inner {\n  right: var(--handle-spacing);\n}\n\n:host(.toggle-ltr.toggle-checked) .toggle-icon-wrapper {\n  transform: translate3d(calc(100% - var(--handle-width)), 0, 0);\n}\n\n:host(.toggle-rtl.toggle-checked) .toggle-icon-wrapper {\n  transform: translate3d(calc(-100% + var(--handle-width)), 0, 0);\n}\n\n:host(.toggle-checked) .toggle-inner {\n  background: var(--handle-background-checked);\n}\n\n:host(.toggle-ltr.toggle-checked) .toggle-inner {\n  transform: translate3d(calc(var(--handle-spacing) * -2), 0, 0);\n}\n\n:host(.toggle-rtl.toggle-checked) .toggle-inner {\n  transform: translate3d(calc(var(--handle-spacing) * 2), 0, 0);\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --track-background: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.088);\n  --track-background-checked: var(--ion-color-primary, #0054e9);\n  --border-radius: 15.5px;\n  --handle-background: #ffffff;\n  --handle-background-checked: #ffffff;\n  --handle-border-radius: 25.5px;\n  --handle-box-shadow: 0 3px 4px rgba(0, 0, 0, 0.06), 0 3px 8px rgba(0, 0, 0, 0.06);\n  --handle-height: calc(31px - (2px * 2));\n  --handle-max-height: calc(100% - var(--handle-spacing) * 2);\n  --handle-width: calc(31px - (2px * 2));\n  --handle-spacing: 2px;\n  --handle-transition: transform 300ms, width 120ms ease-in-out 80ms, left 110ms ease-in-out 80ms, right 110ms ease-in-out 80ms;\n}\n\n.native-wrapper .toggle-icon {\n  width: 51px;\n  height: 31px;\n  /**\n   * The handle box shadow should not\n   * overflow outside of the track container.\n   */\n  overflow: hidden;\n}\n\n:host(.ion-color.toggle-checked) .toggle-icon {\n  background: var(--ion-color-base);\n}\n\n:host(.toggle-activated) .toggle-switch-icon {\n  opacity: 0;\n}\n\n.toggle-icon {\n  transform: translate3d(0, 0, 0);\n  transition: background-color 300ms;\n}\n\n.toggle-inner {\n  will-change: transform;\n}\n\n.toggle-switch-icon {\n  position: absolute;\n  top: 50%;\n  width: 11px;\n  height: 11px;\n  transform: translateY(-50%);\n  transition: opacity 300ms, color 300ms;\n}\n\n.toggle-switch-icon {\n  position: absolute;\n  color: var(--ion-color-dark, #222428);\n}\n\n:host(.toggle-ltr) .toggle-switch-icon {\n  /* stylelint-disable-next-line property-disallowed-list */\n  right: 6px;\n}\n\n:host(.toggle-rtl) .toggle-switch-icon {\n  /* stylelint-disable property-disallowed-list */\n  right: initial;\n  left: 6px;\n  /* stylelint-enable property-disallowed-list */\n}\n\n:host(.toggle-checked) .toggle-switch-icon.toggle-switch-icon-checked {\n  color: var(--ion-color-contrast, #fff);\n}\n\n:host(.toggle-checked) .toggle-switch-icon:not(.toggle-switch-icon-checked) {\n  opacity: 0;\n}\n\n.toggle-switch-icon-checked {\n  position: absolute;\n  width: 15px;\n  height: 15px;\n  transform: translateY(-50%) rotate(90deg);\n}\n\n:host(.toggle-ltr) .toggle-switch-icon-checked {\n  /* stylelint-disable property-disallowed-list */\n  right: initial;\n  left: 4px;\n  /* stylelint-enable property-disallowed-list */\n}\n\n:host(.toggle-rtl) .toggle-switch-icon-checked {\n  /* stylelint-disable-next-line property-disallowed-list */\n  right: 4px;\n}\n\n:host(.toggle-activated) .toggle-icon::before,\n:host(.toggle-checked) .toggle-icon::before {\n  transform: scale3d(0, 0, 0);\n}\n\n:host(.toggle-activated.toggle-checked) .toggle-inner::before {\n  transform: scale3d(0, 0, 0);\n}\n\n:host(.toggle-activated) .toggle-inner {\n  width: calc(var(--handle-width) + 6px);\n}\n\n:host(.toggle-ltr.toggle-activated.toggle-checked) .toggle-icon-wrapper {\n  transform: translate3d(calc(100% - var(--handle-width) - 6px), 0, 0);\n}\n\n:host(.toggle-rtl.toggle-activated.toggle-checked) .toggle-icon-wrapper {\n  transform: translate3d(calc(-100% + var(--handle-width) + 6px), 0, 0);\n}\n\n:host(.toggle-disabled) {\n  opacity: 0.3;\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --track-background: Background of the toggle track\n   * @prop --track-background-checked: Background of the toggle track when checked\n   * @prop --border-radius: Border radius of the toggle track\n   *\n   * @prop --handle-background: Background of the toggle handle\n   * @prop --handle-background-checked: Background of the toggle handle when checked\n   *\n   * @prop --handle-border-radius: Border radius of the toggle handle\n   * @prop --handle-box-shadow: Box shadow of the toggle handle\n   * @prop --handle-height: Height of the toggle handle\n   * @prop --handle-max-height: Maximum height of the toggle handle\n   * @prop --handle-width: Width of the toggle handle\n   * @prop --handle-spacing: Horizontal spacing around the toggle handle\n   * @prop --handle-transition: Transition of the toggle handle\n   */\n  /* stylelint-disable-next-line declaration-no-important */\n  box-sizing: content-box !important;\n  display: inline-block;\n  position: relative;\n  max-width: 100%;\n  outline: none;\n  cursor: pointer;\n  user-select: none;\n  z-index: 2;\n}\n\n:host(.in-item) {\n  flex: 1 1 0;\n  width: 100%;\n  height: 100%;\n}\n\n/**\n * Toggle can be slotted\n * in components such as item and\n * toolbar which is why we do not\n * limit the below behavior to just ion-item.\n */\n:host([slot=start]),\n:host([slot=end]) {\n  width: auto;\n}\n\n:host(.ion-focused) input {\n  border: 2px solid #5e9ed6;\n}\n\n:host(.toggle-disabled) {\n  pointer-events: none;\n}\n\ninput {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n  margin: 0;\n  padding: 0;\n  border: 0;\n  outline: 0;\n  clip: rect(0 0 0 0);\n  opacity: 0;\n  overflow: hidden;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n}\n\n.toggle-wrapper {\n  display: flex;\n  position: relative;\n  flex-grow: 1;\n  height: inherit;\n  transition: background-color 15ms linear;\n  cursor: inherit;\n}\n\n.label-text-wrapper {\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n}\n\n:host(.in-item) .label-text-wrapper {\n  margin-top: 10px;\n  margin-bottom: 10px;\n}\n\n:host(.in-item.toggle-label-placement-stacked) .label-text-wrapper {\n  margin-top: 10px;\n  margin-bottom: 16px;\n}\n\n:host(.in-item.toggle-label-placement-stacked) .native-wrapper {\n  margin-bottom: 10px;\n}\n\n/**\n * If no label text is placed into the slot\n * then the element should be hidden otherwise\n * there will be additional margins added.\n */\n.label-text-wrapper-hidden {\n  display: none;\n}\n\n.native-wrapper {\n  display: flex;\n  align-items: center;\n}\n\n:host(.toggle-justify-space-between) .toggle-wrapper {\n  justify-content: space-between;\n}\n\n:host(.toggle-justify-start) .toggle-wrapper {\n  justify-content: start;\n}\n\n:host(.toggle-justify-end) .toggle-wrapper {\n  justify-content: end;\n}\n\n:host(.toggle-alignment-start) .toggle-wrapper {\n  align-items: start;\n}\n\n:host(.toggle-alignment-center) .toggle-wrapper {\n  align-items: center;\n}\n\n/**\n * Label is on the left of the input in LTR and\n * on the right in RTL.\n */\n:host(.toggle-label-placement-start) .toggle-wrapper {\n  flex-direction: row;\n}\n\n:host(.toggle-label-placement-start) .label-text-wrapper {\n  /**\n   * The margin between the label and\n   * the input should be on the end\n   * when the label sits at the start.\n   */\n  -webkit-margin-start: 0;\n  margin-inline-start: 0;\n  -webkit-margin-end: 16px;\n  margin-inline-end: 16px;\n}\n\n/**\n * Label is on the right of the input in LTR and\n * on the left in RTL.\n */\n:host(.toggle-label-placement-end) .toggle-wrapper {\n  flex-direction: row-reverse;\n}\n\n/**\n * The margin between the label and\n * the input should be on the start\n * when the label sits at the end.\n */\n:host(.toggle-label-placement-end) .label-text-wrapper {\n  -webkit-margin-start: 16px;\n  margin-inline-start: 16px;\n  -webkit-margin-end: 0;\n  margin-inline-end: 0;\n}\n\n:host(.toggle-label-placement-fixed) .label-text-wrapper {\n  /**\n   * The margin between the label and\n   * the input should be on the end\n   * when the label sits at the start.\n   */\n  -webkit-margin-start: 0;\n  margin-inline-start: 0;\n  -webkit-margin-end: 16px;\n  margin-inline-end: 16px;\n}\n\n/**\n * Label is on the left of the input in LTR and\n * on the right in RTL. Label also has a fixed width.\n */\n:host(.toggle-label-placement-fixed) .label-text-wrapper {\n  flex: 0 0 100px;\n  width: 100px;\n  min-width: 100px;\n  max-width: 200px;\n}\n\n/**\n * Label is on top of the toggle.\n */\n:host(.toggle-label-placement-stacked) .toggle-wrapper {\n  flex-direction: column;\n}\n\n:host(.toggle-label-placement-stacked) .label-text-wrapper {\n  transform: scale(0.75);\n  /**\n   * The margin between the label and\n   * the toggle should be on the bottom\n   * when the label sits on top.\n   */\n  margin-left: 0;\n  margin-right: 0;\n  margin-bottom: 16px;\n  /**\n   * Label text should not extend\n   * beyond the bounds of the toggle.\n   */\n  max-width: calc(100% / 0.75);\n}\n\n:host(.toggle-label-placement-stacked.toggle-alignment-start) .label-text-wrapper {\n  transform-origin: left top;\n}\n:host-context([dir=rtl]):host(.toggle-label-placement-stacked.toggle-alignment-start) .label-text-wrapper, :host-context([dir=rtl]).toggle-label-placement-stacked.toggle-alignment-start .label-text-wrapper {\n  transform-origin: right top;\n}\n\n@supports selector(:dir(rtl)) {\n  :host(.toggle-label-placement-stacked.toggle-alignment-start:dir(rtl)) .label-text-wrapper {\n    transform-origin: right top;\n  }\n}\n\n:host(.toggle-label-placement-stacked.toggle-alignment-center) .label-text-wrapper {\n  transform-origin: center top;\n}\n:host-context([dir=rtl]):host(.toggle-label-placement-stacked.toggle-alignment-center) .label-text-wrapper, :host-context([dir=rtl]).toggle-label-placement-stacked.toggle-alignment-center .label-text-wrapper {\n  transform-origin: calc(100% - center) top;\n}\n\n@supports selector(:dir(rtl)) {\n  :host(.toggle-label-placement-stacked.toggle-alignment-center:dir(rtl)) .label-text-wrapper {\n    transform-origin: calc(100% - center) top;\n  }\n}\n\n.toggle-icon-wrapper {\n  display: flex;\n  position: relative;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  transition: var(--handle-transition);\n  will-change: transform;\n}\n\n.toggle-icon {\n  border-radius: var(--border-radius);\n  display: block;\n  position: relative;\n  width: 100%;\n  height: 100%;\n  background: var(--track-background);\n  overflow: inherit;\n}\n\n:host(.toggle-checked) .toggle-icon {\n  background: var(--track-background-checked);\n}\n\n.toggle-inner {\n  border-radius: var(--handle-border-radius);\n  position: absolute;\n  left: var(--handle-spacing);\n  width: var(--handle-width);\n  height: var(--handle-height);\n  max-height: var(--handle-max-height);\n  transition: var(--handle-transition);\n  background: var(--handle-background);\n  box-shadow: var(--handle-box-shadow);\n  contain: strict;\n}\n\n/**\n * We do not use the @ltr and @rtl mixins\n * here because ion-toggle uses the Shadow DOM\n * and WebKit does not support :host-context.\n */\n:host(.toggle-ltr) .toggle-inner {\n  left: var(--handle-spacing);\n}\n\n:host(.toggle-rtl) .toggle-inner {\n  right: var(--handle-spacing);\n}\n\n:host(.toggle-ltr.toggle-checked) .toggle-icon-wrapper {\n  transform: translate3d(calc(100% - var(--handle-width)), 0, 0);\n}\n\n:host(.toggle-rtl.toggle-checked) .toggle-icon-wrapper {\n  transform: translate3d(calc(-100% + var(--handle-width)), 0, 0);\n}\n\n:host(.toggle-checked) .toggle-inner {\n  background: var(--handle-background-checked);\n}\n\n:host(.toggle-ltr.toggle-checked) .toggle-inner {\n  transform: translate3d(calc(var(--handle-spacing) * -2), 0, 0);\n}\n\n:host(.toggle-rtl.toggle-checked) .toggle-inner {\n  transform: translate3d(calc(var(--handle-spacing) * 2), 0, 0);\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --track-background: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.39);\n  --track-background-checked: rgba(var(--ion-color-primary-rgb, 0, 84, 233), 0.5);\n  --border-radius: 14px;\n  --handle-background: #ffffff;\n  --handle-background-checked: var(--ion-color-primary, #0054e9);\n  --handle-border-radius: 50%;\n  --handle-box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n  --handle-width: 20px;\n  --handle-height: 20px;\n  --handle-max-height: calc(100% + 6px);\n  --handle-spacing: 0;\n  --handle-transition: transform 160ms cubic-bezier(0.4, 0, 0.2, 1), background-color 160ms cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n.native-wrapper .toggle-icon {\n  width: 36px;\n  height: 14px;\n}\n\n:host(.ion-color.toggle-checked) .toggle-icon {\n  background: rgba(var(--ion-color-base-rgb), 0.5);\n}\n\n:host(.ion-color.toggle-checked) .toggle-inner {\n  background: var(--ion-color-base);\n}\n\n:host(.toggle-checked) .toggle-inner {\n  color: var(--ion-color-contrast, #fff);\n}\n\n.toggle-icon {\n  transition: background-color 160ms;\n}\n\n.toggle-inner {\n  will-change: background-color, transform;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #000;\n}\n\n.toggle-inner .toggle-switch-icon {\n  -webkit-padding-start: 1px;\n  padding-inline-start: 1px;\n  -webkit-padding-end: 1px;\n  padding-inline-end: 1px;\n  padding-top: 1px;\n  padding-bottom: 1px;\n  width: 100%;\n  height: 100%;\n}\n\n:host(.toggle-disabled) {\n  opacity: 0.38;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { renderHiddenInput, inheritAriaAttributes } from \"../../utils/helpers\";\nimport { hapticSelection } from \"../../utils/native/haptic\";\nimport { isRTL } from \"../../utils/rtl/index\";\nimport { createColorClasses, hostContext } from \"../../utils/theme\";\nimport { checkmarkOutline, removeOutline, ellipseOutline } from \"ionicons/icons\";\nimport { config } from \"../../global/config\";\nimport { getIonMode } from \"../../global/ionic-global\";\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n *\n * @slot - The label text to associate with the toggle. Use the \"labelPlacement\" property to control where the label is placed relative to the toggle.\n *\n * @part track - The background track of the toggle.\n * @part handle - The toggle handle, or knob, used to change the checked state.\n * @part label - The label text describing the toggle.\n */\nexport class Toggle {\n    constructor() {\n        this.inputId = `ion-tg-${toggleIds++}`;\n        this.lastDrag = 0;\n        this.inheritedAttributes = {};\n        this.didLoad = false;\n        this.setupGesture = async () => {\n            const { toggleTrack } = this;\n            if (toggleTrack) {\n                this.gesture = (await import('../../utils/gesture')).createGesture({\n                    el: toggleTrack,\n                    gestureName: 'toggle',\n                    gesturePriority: 100,\n                    threshold: 5,\n                    passive: false,\n                    onStart: () => this.onStart(),\n                    onMove: (ev) => this.onMove(ev),\n                    onEnd: (ev) => this.onEnd(ev),\n                });\n                this.disabledChanged();\n            }\n        };\n        this.onClick = (ev) => {\n            if (this.disabled) {\n                return;\n            }\n            ev.preventDefault();\n            if (this.lastDrag + 300 < Date.now()) {\n                this.toggleChecked();\n            }\n        };\n        this.onFocus = () => {\n            this.ionFocus.emit();\n        };\n        this.onBlur = () => {\n            this.ionBlur.emit();\n        };\n        this.getSwitchLabelIcon = (mode, checked) => {\n            if (mode === 'md') {\n                return checked ? checkmarkOutline : removeOutline;\n            }\n            return checked ? removeOutline : ellipseOutline;\n        };\n        this.activated = false;\n        this.color = undefined;\n        this.name = this.inputId;\n        this.checked = false;\n        this.disabled = false;\n        this.value = 'on';\n        this.enableOnOffLabels = config.get('toggleOnOffLabels');\n        this.labelPlacement = 'start';\n        this.justify = 'space-between';\n        this.alignment = 'center';\n    }\n    disabledChanged() {\n        if (this.gesture) {\n            this.gesture.enable(!this.disabled);\n        }\n    }\n    toggleChecked() {\n        const { checked, value } = this;\n        const isNowChecked = !checked;\n        this.checked = isNowChecked;\n        this.ionChange.emit({\n            checked: isNowChecked,\n            value,\n        });\n    }\n    async connectedCallback() {\n        /**\n         * If we have not yet rendered\n         * ion-toggle, then toggleTrack is not defined.\n         * But if we are moving ion-toggle via appendChild,\n         * then toggleTrack will be defined.\n         */\n        if (this.didLoad) {\n            this.setupGesture();\n        }\n    }\n    componentDidLoad() {\n        this.setupGesture();\n        this.didLoad = true;\n    }\n    disconnectedCallback() {\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n    }\n    componentWillLoad() {\n        this.inheritedAttributes = Object.assign({}, inheritAriaAttributes(this.el));\n    }\n    onStart() {\n        this.activated = true;\n        // touch-action does not work in iOS\n        this.setFocus();\n    }\n    onMove(detail) {\n        if (shouldToggle(isRTL(this.el), this.checked, detail.deltaX, -10)) {\n            this.toggleChecked();\n            hapticSelection();\n        }\n    }\n    onEnd(ev) {\n        this.activated = false;\n        this.lastDrag = Date.now();\n        ev.event.preventDefault();\n        ev.event.stopImmediatePropagation();\n    }\n    getValue() {\n        return this.value || '';\n    }\n    setFocus() {\n        if (this.focusEl) {\n            this.focusEl.focus();\n        }\n    }\n    renderOnOffSwitchLabels(mode, checked) {\n        const icon = this.getSwitchLabelIcon(mode, checked);\n        return (h(\"ion-icon\", { class: {\n                'toggle-switch-icon': true,\n                'toggle-switch-icon-checked': checked,\n            }, icon: icon, \"aria-hidden\": \"true\" }));\n    }\n    renderToggleControl() {\n        const mode = getIonMode(this);\n        const { enableOnOffLabels, checked } = this;\n        return (h(\"div\", { class: \"toggle-icon\", part: \"track\", ref: (el) => (this.toggleTrack = el) }, enableOnOffLabels &&\n            mode === 'ios' && [this.renderOnOffSwitchLabels(mode, true), this.renderOnOffSwitchLabels(mode, false)], h(\"div\", { class: \"toggle-icon-wrapper\" }, h(\"div\", { class: \"toggle-inner\", part: \"handle\" }, enableOnOffLabels && mode === 'md' && this.renderOnOffSwitchLabels(mode, checked)))));\n    }\n    get hasLabel() {\n        return this.el.textContent !== '';\n    }\n    render() {\n        const { activated, color, checked, disabled, el, justify, labelPlacement, inputId, name, alignment } = this;\n        const mode = getIonMode(this);\n        const value = this.getValue();\n        const rtl = isRTL(el) ? 'rtl' : 'ltr';\n        renderHiddenInput(true, el, name, checked ? value : '', disabled);\n        return (h(Host, { key: 'c945ab955306b2fcb7833f7ff771ac943d73d27d', onClick: this.onClick, class: createColorClasses(color, {\n                [mode]: true,\n                'in-item': hostContext('ion-item', el),\n                'toggle-activated': activated,\n                'toggle-checked': checked,\n                'toggle-disabled': disabled,\n                [`toggle-justify-${justify}`]: true,\n                [`toggle-alignment-${alignment}`]: true,\n                [`toggle-label-placement-${labelPlacement}`]: true,\n                [`toggle-${rtl}`]: true,\n            }) }, h(\"label\", { key: '71fb6976e877639ca9f28c2103f6290917cdb6ce', class: \"toggle-wrapper\" }, h(\"input\", Object.assign({ key: 'ed2495568197928ef1f17fc60470f4d9754a6244', type: \"checkbox\", role: \"switch\", \"aria-checked\": `${checked}`, checked: checked, disabled: disabled, id: inputId, onFocus: () => this.onFocus(), onBlur: () => this.onBlur(), ref: (focusEl) => (this.focusEl = focusEl) }, this.inheritedAttributes)), h(\"div\", { key: '953ab9a29c432de4b869aeac296007e703bcdf27', class: {\n                'label-text-wrapper': true,\n                'label-text-wrapper-hidden': !this.hasLabel,\n            }, part: \"label\" }, h(\"slot\", { key: '718b24b4d59b979c11edfb1d90fa0270ac248b2f' })), h(\"div\", { key: '293595f9dc291df38a54e23f81797b89428ff2c5', class: \"native-wrapper\" }, this.renderToggleControl()))));\n    }\n    static get is() { return \"ion-toggle\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"toggle.ios.scss\"],\n            \"md\": [\"toggle.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"toggle.ios.css\"],\n            \"md\": [\"toggle.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"color\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Color\",\n                    \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never> | undefined\",\n                    \"references\": {\n                        \"Color\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::Color\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The color to use from your application's color palette.\\nDefault options are: `\\\"primary\\\"`, `\\\"secondary\\\"`, `\\\"tertiary\\\"`, `\\\"success\\\"`, `\\\"warning\\\"`, `\\\"danger\\\"`, `\\\"light\\\"`, `\\\"medium\\\"`, and `\\\"dark\\\"`.\\nFor more information on colors, see [theming](/docs/theming/basics).\"\n                },\n                \"attribute\": \"color\",\n                \"reflect\": true\n            },\n            \"name\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The name of the control, which is submitted with the form data.\"\n                },\n                \"attribute\": \"name\",\n                \"reflect\": false,\n                \"defaultValue\": \"this.inputId\"\n            },\n            \"checked\": {\n                \"type\": \"boolean\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the toggle is selected.\"\n                },\n                \"attribute\": \"checked\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"disabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the user cannot interact with the toggle.\"\n                },\n                \"attribute\": \"disabled\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"value\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | null\",\n                    \"resolved\": \"null | string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The value of the toggle does not mean if it's checked or not, use the `checked`\\nproperty for that.\\n\\nThe value of a toggle is analogous to the value of a `<input type=\\\"checkbox\\\">`,\\nit's only used when the toggle participates in a native `<form>`.\"\n                },\n                \"attribute\": \"value\",\n                \"reflect\": false,\n                \"defaultValue\": \"'on'\"\n            },\n            \"enableOnOffLabels\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean | undefined\",\n                    \"resolved\": \"boolean | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Enables the on/off accessibility switch labels within the toggle.\"\n                },\n                \"attribute\": \"enable-on-off-labels\",\n                \"reflect\": false,\n                \"defaultValue\": \"config.get('toggleOnOffLabels')\"\n            },\n            \"labelPlacement\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'start' | 'end' | 'fixed' | 'stacked'\",\n                    \"resolved\": \"\\\"end\\\" | \\\"fixed\\\" | \\\"stacked\\\" | \\\"start\\\"\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Where to place the label relative to the input.\\n`\\\"start\\\"`: The label will appear to the left of the toggle in LTR and to the right in RTL.\\n`\\\"end\\\"`: The label will appear to the right of the toggle in LTR and to the left in RTL.\\n`\\\"fixed\\\"`: The label has the same behavior as `\\\"start\\\"` except it also has a fixed width. Long text will be truncated with ellipses (\\\"...\\\").\\n`\\\"stacked\\\"`: The label will appear above the toggle regardless of the direction. The alignment of the label can be controlled with the `alignment` property.\"\n                },\n                \"attribute\": \"label-placement\",\n                \"reflect\": false,\n                \"defaultValue\": \"'start'\"\n            },\n            \"justify\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'start' | 'end' | 'space-between'\",\n                    \"resolved\": \"\\\"end\\\" | \\\"space-between\\\" | \\\"start\\\"\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"How to pack the label and toggle within a line.\\n`\\\"start\\\"`: The label and toggle will appear on the left in LTR and\\non the right in RTL.\\n`\\\"end\\\"`: The label and toggle will appear on the right in LTR and\\non the left in RTL.\\n`\\\"space-between\\\"`: The label and toggle will appear on opposite\\nends of the line with space between the two elements.\"\n                },\n                \"attribute\": \"justify\",\n                \"reflect\": false,\n                \"defaultValue\": \"'space-between'\"\n            },\n            \"alignment\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'start' | 'center'\",\n                    \"resolved\": \"\\\"center\\\" | \\\"start\\\"\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"How to control the alignment of the toggle and label on the cross axis.\\n`\\\"start\\\"`: The label and control will appear on the left of the cross axis in LTR, and on the right side in RTL.\\n`\\\"center\\\"`: The label and control will appear at the center of the cross axis in both LTR and RTL.\"\n                },\n                \"attribute\": \"alignment\",\n                \"reflect\": false,\n                \"defaultValue\": \"'center'\"\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"activated\": {}\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"ionChange\",\n                \"name\": \"ionChange\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the user switches the toggle on or off. Does not emit\\nwhen programmatically changing the value of the `checked` property.\"\n                },\n                \"complexType\": {\n                    \"original\": \"ToggleChangeEventDetail\",\n                    \"resolved\": \"ToggleChangeEventDetail<any>\",\n                    \"references\": {\n                        \"ToggleChangeEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"./toggle-interface\",\n                            \"id\": \"src/components/toggle/toggle-interface.ts::ToggleChangeEventDetail\"\n                        }\n                    }\n                }\n            }, {\n                \"method\": \"ionFocus\",\n                \"name\": \"ionFocus\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the toggle has focus.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"ionBlur\",\n                \"name\": \"ionBlur\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the toggle loses focus.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }];\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"disabled\",\n                \"methodName\": \"disabledChanged\"\n            }];\n    }\n}\nconst shouldToggle = (rtl, checked, deltaX, margin) => {\n    if (checked) {\n        return (!rtl && margin > deltaX) || (rtl && -margin < deltaX);\n    }\n    else {\n        return (!rtl && -margin < deltaX) || (rtl && margin > deltaX);\n    }\n};\nlet toggleIds = 0;\n"],"version":3}