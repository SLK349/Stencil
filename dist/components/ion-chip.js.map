{"file":"ion-chip.js","mappings":";;;;;AAAA,MAAM,UAAU,GAAG,+yFAA+yF,CAAC;AACn0F,yBAAe,UAAU;;ACDzB,MAAM,SAAS,GAAG,4xFAA4xF,CAAC;AAC/yF,wBAAe,SAAS;;MCQX,IAAI;IACb;;;;QACI,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;KACzB;IACD,MAAM;QACF,MAAM,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;QAC9B,QAAQ,CAAC,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,0CAA0C,EAAE,eAAe,EAAE,IAAI,CAAC,QAAQ,GAAG,MAAM,GAAG,IAAI,EAAE,KAAK,EAAE,kBAAkB,CAAC,IAAI,CAAC,KAAK,EAAE;gBACjJ,CAAC,IAAI,GAAG,IAAI;gBACZ,cAAc,EAAE,IAAI,CAAC,OAAO;gBAC5B,eAAe,EAAE,IAAI,CAAC,QAAQ;gBAC9B,iBAAiB,EAAE,IAAI;aAC1B,CAAC,EAAE,EAAE,CAAC,CAAC,MAAM,EAAE,EAAE,GAAG,EAAE,0CAA0C,EAAE,CAAC,EAAE,IAAI,KAAK,IAAI,IAAI,CAAC,CAAC,mBAAmB,EAAE,EAAE,GAAG,EAAE,0CAA0C,EAAE,CAAC,CAAC,EAAE;KAC5K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["node_modules/@ionic/core/dist/collection/components/chip/chip.ios.css?tag=ion-chip&mode=ios&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/chip/chip.md.css?tag=ion-chip&mode=md&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/chip/chip.js"],"sourcesContent":["/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the chip\n   * @prop --color: Color of the chip\n   */\n  --background: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.12);\n  --color: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.87);\n  border-radius: 16px;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  -webkit-margin-start: 4px;\n  margin-inline-start: 4px;\n  -webkit-margin-end: 4px;\n  margin-inline-end: 4px;\n  margin-top: 4px;\n  margin-bottom: 4px;\n  -webkit-padding-start: 12px;\n  padding-inline-start: 12px;\n  -webkit-padding-end: 12px;\n  padding-inline-end: 12px;\n  padding-top: 6px;\n  padding-bottom: 6px;\n  display: inline-flex;\n  position: relative;\n  align-items: center;\n  min-height: 32px;\n  background: var(--background);\n  color: var(--color);\n  font-family: var(--ion-font-family, inherit);\n  cursor: pointer;\n  overflow: hidden;\n  vertical-align: middle;\n  box-sizing: border-box;\n}\n\n:host(.chip-disabled) {\n  cursor: default;\n  opacity: 0.4;\n  pointer-events: none;\n}\n\n:host(.ion-color) {\n  background: rgba(var(--ion-color-base-rgb), 0.08);\n  color: var(--ion-color-shade);\n}\n\n:host(.ion-color:focus) {\n  background: rgba(var(--ion-color-base-rgb), 0.12);\n}\n\n:host(.ion-color.ion-activated) {\n  background: rgba(var(--ion-color-base-rgb), 0.16);\n}\n\n:host(.chip-outline) {\n  border-width: 1px;\n  border-style: solid;\n}\n\n:host(.chip-outline) {\n  border-color: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.32);\n  background: transparent;\n}\n\n:host(.chip-outline.ion-color) {\n  border-color: rgba(var(--ion-color-base-rgb), 0.32);\n}\n\n:host(.chip-outline:not(.ion-color):focus) {\n  background: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.04);\n}\n\n:host(.chip-outline.ion-activated:not(.ion-color)) {\n  background: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.08);\n}\n\n::slotted(ion-icon) {\n  font-size: 1.4285714286em;\n}\n\n:host(:not(.ion-color)) ::slotted(ion-icon) {\n  color: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.54);\n}\n\n::slotted(ion-icon:first-child) {\n  -webkit-margin-start: -4px;\n  margin-inline-start: -4px;\n  -webkit-margin-end: 8px;\n  margin-inline-end: 8px;\n  margin-top: -4px;\n  margin-bottom: -4px;\n}\n\n::slotted(ion-icon:last-child) {\n  -webkit-margin-start: 8px;\n  margin-inline-start: 8px;\n  -webkit-margin-end: -4px;\n  margin-inline-end: -4px;\n  margin-top: -4px;\n  margin-bottom: -4px;\n}\n\n::slotted(ion-avatar) {\n  flex-shrink: 0;\n  width: 1.7142857143em;\n  height: 1.7142857143em;\n}\n\n::slotted(ion-avatar:first-child) {\n  -webkit-margin-start: -8px;\n  margin-inline-start: -8px;\n  -webkit-margin-end: 8px;\n  margin-inline-end: 8px;\n  margin-top: -4px;\n  margin-bottom: -4px;\n}\n\n::slotted(ion-avatar:last-child) {\n  -webkit-margin-start: 8px;\n  margin-inline-start: 8px;\n  -webkit-margin-end: -8px;\n  margin-inline-end: -8px;\n  margin-top: -4px;\n  margin-bottom: -4px;\n}\n\n:host(:focus) {\n  outline: none;\n}\n\n:host(:focus) {\n  --background: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.16);\n}\n\n:host(.ion-activated) {\n  --background: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.2);\n}\n\n@media (any-hover: hover) {\n  :host(:hover) {\n    --background: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.16);\n  }\n  :host(.ion-color:hover) {\n    background: rgba(var(--ion-color-base-rgb), 0.12);\n  }\n  :host(.chip-outline:not(.ion-color):hover) {\n    background: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.04);\n  }\n}\n:host {\n  /**\n   * Main content should be prioritized on iOS,\n   * so we set max font size for chips.\n   * We add a min font size to keep the text legible.\n   */\n  font-size: clamp(13px, 0.875rem, 22px);\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the chip\n   * @prop --color: Color of the chip\n   */\n  --background: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.12);\n  --color: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.87);\n  border-radius: 16px;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  -webkit-margin-start: 4px;\n  margin-inline-start: 4px;\n  -webkit-margin-end: 4px;\n  margin-inline-end: 4px;\n  margin-top: 4px;\n  margin-bottom: 4px;\n  -webkit-padding-start: 12px;\n  padding-inline-start: 12px;\n  -webkit-padding-end: 12px;\n  padding-inline-end: 12px;\n  padding-top: 6px;\n  padding-bottom: 6px;\n  display: inline-flex;\n  position: relative;\n  align-items: center;\n  min-height: 32px;\n  background: var(--background);\n  color: var(--color);\n  font-family: var(--ion-font-family, inherit);\n  cursor: pointer;\n  overflow: hidden;\n  vertical-align: middle;\n  box-sizing: border-box;\n}\n\n:host(.chip-disabled) {\n  cursor: default;\n  opacity: 0.4;\n  pointer-events: none;\n}\n\n:host(.ion-color) {\n  background: rgba(var(--ion-color-base-rgb), 0.08);\n  color: var(--ion-color-shade);\n}\n\n:host(.ion-color:focus) {\n  background: rgba(var(--ion-color-base-rgb), 0.12);\n}\n\n:host(.ion-color.ion-activated) {\n  background: rgba(var(--ion-color-base-rgb), 0.16);\n}\n\n:host(.chip-outline) {\n  border-width: 1px;\n  border-style: solid;\n}\n\n:host(.chip-outline) {\n  border-color: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.32);\n  background: transparent;\n}\n\n:host(.chip-outline.ion-color) {\n  border-color: rgba(var(--ion-color-base-rgb), 0.32);\n}\n\n:host(.chip-outline:not(.ion-color):focus) {\n  background: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.04);\n}\n\n:host(.chip-outline.ion-activated:not(.ion-color)) {\n  background: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.08);\n}\n\n::slotted(ion-icon) {\n  font-size: 1.4285714286em;\n}\n\n:host(:not(.ion-color)) ::slotted(ion-icon) {\n  color: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.54);\n}\n\n::slotted(ion-icon:first-child) {\n  -webkit-margin-start: -4px;\n  margin-inline-start: -4px;\n  -webkit-margin-end: 8px;\n  margin-inline-end: 8px;\n  margin-top: -4px;\n  margin-bottom: -4px;\n}\n\n::slotted(ion-icon:last-child) {\n  -webkit-margin-start: 8px;\n  margin-inline-start: 8px;\n  -webkit-margin-end: -4px;\n  margin-inline-end: -4px;\n  margin-top: -4px;\n  margin-bottom: -4px;\n}\n\n::slotted(ion-avatar) {\n  flex-shrink: 0;\n  width: 1.7142857143em;\n  height: 1.7142857143em;\n}\n\n::slotted(ion-avatar:first-child) {\n  -webkit-margin-start: -8px;\n  margin-inline-start: -8px;\n  -webkit-margin-end: 8px;\n  margin-inline-end: 8px;\n  margin-top: -4px;\n  margin-bottom: -4px;\n}\n\n::slotted(ion-avatar:last-child) {\n  -webkit-margin-start: 8px;\n  margin-inline-start: 8px;\n  -webkit-margin-end: -8px;\n  margin-inline-end: -8px;\n  margin-top: -4px;\n  margin-bottom: -4px;\n}\n\n:host(:focus) {\n  outline: none;\n}\n\n:host(:focus) {\n  --background: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.16);\n}\n\n:host(.ion-activated) {\n  --background: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.2);\n}\n\n@media (any-hover: hover) {\n  :host(:hover) {\n    --background: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.16);\n  }\n  :host(.ion-color:hover) {\n    background: rgba(var(--ion-color-base-rgb), 0.12);\n  }\n  :host(.chip-outline:not(.ion-color):hover) {\n    background: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.04);\n  }\n}\n:host {\n  font-size: 0.875rem;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { createColorClasses } from \"../../utils/theme\";\nimport { getIonMode } from \"../../global/ionic-global\";\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n */\nexport class Chip {\n    constructor() {\n        this.color = undefined;\n        this.outline = false;\n        this.disabled = false;\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { key: '7dd923c1b28d1eb1efa348f66f49cec067645af9', \"aria-disabled\": this.disabled ? 'true' : null, class: createColorClasses(this.color, {\n                [mode]: true,\n                'chip-outline': this.outline,\n                'chip-disabled': this.disabled,\n                'ion-activatable': true,\n            }) }, h(\"slot\", { key: '7ede838bf109dc27a898ee2dcdeabc3f439c8e6f' }), mode === 'md' && h(\"ion-ripple-effect\", { key: '5acb073029544e73fcc0db4cc4e661ec1df4d231' })));\n    }\n    static get is() { return \"ion-chip\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"chip.ios.scss\"],\n            \"md\": [\"chip.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"chip.ios.css\"],\n            \"md\": [\"chip.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"color\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Color\",\n                    \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never> | undefined\",\n                    \"references\": {\n                        \"Color\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::Color\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The color to use from your application's color palette.\\nDefault options are: `\\\"primary\\\"`, `\\\"secondary\\\"`, `\\\"tertiary\\\"`, `\\\"success\\\"`, `\\\"warning\\\"`, `\\\"danger\\\"`, `\\\"light\\\"`, `\\\"medium\\\"`, and `\\\"dark\\\"`.\\nFor more information on colors, see [theming](/docs/theming/basics).\"\n                },\n                \"attribute\": \"color\",\n                \"reflect\": true\n            },\n            \"outline\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Display an outline style button.\"\n                },\n                \"attribute\": \"outline\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"disabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the user cannot interact with the chip.\"\n                },\n                \"attribute\": \"disabled\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            }\n        };\n    }\n}\n"],"version":3}