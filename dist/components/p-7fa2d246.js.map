{"file":"p-7fa2d246.js","mappings":"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","names":[],"sources":["node_modules/@ionic/core/dist/collection/components/spinner/spinner-configs.js","node_modules/@ionic/core/dist/collection/components/spinner/spinner.css?tag=ion-spinner&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/spinner/spinner.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nconst spinners = {\n    bubbles: {\n        dur: 1000,\n        circles: 9,\n        fn: (dur, index, total) => {\n            const animationDelay = `${(dur * index) / total - dur}ms`;\n            const angle = (2 * Math.PI * index) / total;\n            return {\n                r: 5,\n                style: {\n                    top: `${32 * Math.sin(angle)}%`,\n                    left: `${32 * Math.cos(angle)}%`,\n                    'animation-delay': animationDelay,\n                },\n            };\n        },\n    },\n    circles: {\n        dur: 1000,\n        circles: 8,\n        fn: (dur, index, total) => {\n            const step = index / total;\n            const animationDelay = `${dur * step - dur}ms`;\n            const angle = 2 * Math.PI * step;\n            return {\n                r: 5,\n                style: {\n                    top: `${32 * Math.sin(angle)}%`,\n                    left: `${32 * Math.cos(angle)}%`,\n                    'animation-delay': animationDelay,\n                },\n            };\n        },\n    },\n    circular: {\n        dur: 1400,\n        elmDuration: true,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 20,\n                cx: 48,\n                cy: 48,\n                fill: 'none',\n                viewBox: '24 24 48 48',\n                transform: 'translate(0,0)',\n                style: {},\n            };\n        },\n    },\n    crescent: {\n        dur: 750,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 26,\n                style: {},\n            };\n        },\n    },\n    dots: {\n        dur: 750,\n        circles: 3,\n        fn: (_, index) => {\n            const animationDelay = -(110 * index) + 'ms';\n            return {\n                r: 6,\n                style: {\n                    left: `${32 - 32 * index}%`,\n                    'animation-delay': animationDelay,\n                },\n            };\n        },\n    },\n    lines: {\n        dur: 1000,\n        lines: 8,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${(360 / total) * index + (index < total / 2 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index) / total - dur}ms`;\n            return {\n                y1: 14,\n                y2: 26,\n                style: {\n                    transform: transform,\n                    'animation-delay': animationDelay,\n                },\n            };\n        },\n    },\n    'lines-small': {\n        dur: 1000,\n        lines: 8,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${(360 / total) * index + (index < total / 2 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index) / total - dur}ms`;\n            return {\n                y1: 12,\n                y2: 20,\n                style: {\n                    transform: transform,\n                    'animation-delay': animationDelay,\n                },\n            };\n        },\n    },\n    'lines-sharp': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index) / total - dur}ms`;\n            return {\n                y1: 17,\n                y2: 29,\n                style: {\n                    transform: transform,\n                    'animation-delay': animationDelay,\n                },\n            };\n        },\n    },\n    'lines-sharp-small': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index) / total - dur}ms`;\n            return {\n                y1: 12,\n                y2: 20,\n                style: {\n                    transform: transform,\n                    'animation-delay': animationDelay,\n                },\n            };\n        },\n    },\n};\nexport const SPINNERS = spinners;\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --color: Color of the spinner\n   */\n  display: inline-block;\n  position: relative;\n  width: 28px;\n  height: 28px;\n  color: var(--color);\n  user-select: none;\n}\n\n:host(.ion-color) {\n  color: var(--ion-color-base);\n}\n\nsvg {\n  transform-origin: center;\n  position: absolute;\n  /**\n   * Do not use @include position\n   * as the alignment of the elements with\n   * a spinner should not be RTL aware.\n   */\n  top: 0;\n  /* stylelint-disable-next-line property-disallowed-list */\n  left: 0;\n  width: 100%;\n  height: 100%;\n  transform: translateZ(0);\n}\n:host-context([dir=rtl]) svg {\n  transform-origin: calc(100% - center);\n}\n\n[dir=rtl] svg {\n  transform-origin: calc(100% - center);\n}\n\n@supports selector(:dir(rtl)) {\n  svg:dir(rtl) {\n    transform-origin: calc(100% - center);\n  }\n}\n\n:host(.spinner-lines) line,\n:host(.spinner-lines-small) line {\n  stroke-width: 7px;\n}\n\n:host(.spinner-lines-sharp) line,\n:host(.spinner-lines-sharp-small) line {\n  stroke-width: 4px;\n}\n\n:host(.spinner-lines) line,\n:host(.spinner-lines-small) line,\n:host(.spinner-lines-sharp) line,\n:host(.spinner-lines-sharp-small) line {\n  stroke-linecap: round;\n  stroke: currentColor;\n}\n\n:host(.spinner-lines) svg,\n:host(.spinner-lines-small) svg,\n:host(.spinner-lines-sharp) svg,\n:host(.spinner-lines-sharp-small) svg {\n  animation: spinner-fade-out 1s linear infinite;\n}\n\n:host(.spinner-bubbles) svg {\n  animation: spinner-scale-out 1s linear infinite;\n  fill: currentColor;\n}\n\n:host(.spinner-circles) svg {\n  animation: spinner-fade-out 1s linear infinite;\n  fill: currentColor;\n}\n\n:host(.spinner-crescent) circle {\n  fill: transparent;\n  stroke-width: 4px;\n  stroke-dasharray: 128px;\n  stroke-dashoffset: 82px;\n  stroke: currentColor;\n}\n\n:host(.spinner-crescent) svg {\n  animation: spinner-rotate 1s linear infinite;\n}\n\n:host(.spinner-dots) circle {\n  stroke-width: 0;\n  fill: currentColor;\n}\n\n:host(.spinner-dots) svg {\n  animation: spinner-dots 1s linear infinite;\n}\n\n:host(.spinner-circular) svg {\n  animation: spinner-circular linear infinite;\n}\n\n:host(.spinner-circular) circle {\n  animation: spinner-circular-inner ease-in-out infinite;\n  stroke: currentColor;\n  stroke-dasharray: 80px, 200px;\n  stroke-dashoffset: 0px;\n  stroke-width: 5.6;\n  fill: none;\n}\n\n:host(.spinner-paused),\n:host(.spinner-paused) svg,\n:host(.spinner-paused) circle {\n  animation-play-state: paused;\n}\n\n@keyframes spinner-fade-out {\n  0% {\n    opacity: 1;\n  }\n  100% {\n    opacity: 0;\n  }\n}\n@keyframes spinner-scale-out {\n  0% {\n    transform: scale(1, 1);\n  }\n  100% {\n    transform: scale(0, 0);\n  }\n}\n@keyframes spinner-rotate {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n@keyframes spinner-dots {\n  0% {\n    transform: scale(1, 1);\n    opacity: 0.9;\n  }\n  50% {\n    transform: scale(0.4, 0.4);\n    opacity: 0.3;\n  }\n  100% {\n    transform: scale(1, 1);\n    opacity: 0.9;\n  }\n}\n@keyframes spinner-circular {\n  100% {\n    transform: rotate(360deg);\n  }\n}\n@keyframes spinner-circular-inner {\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0px;\n  }\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { createColorClasses } from \"../../utils/theme\";\nimport { config } from \"../../global/config\";\nimport { getIonMode } from \"../../global/ionic-global\";\nimport { SPINNERS } from \"./spinner-configs\";\nexport class Spinner {\n    constructor() {\n        this.color = undefined;\n        this.duration = undefined;\n        this.name = undefined;\n        this.paused = false;\n    }\n    getName() {\n        const spinnerName = this.name || config.get('spinner');\n        const mode = getIonMode(this);\n        if (spinnerName) {\n            return spinnerName;\n        }\n        return mode === 'ios' ? 'lines' : 'circular';\n    }\n    render() {\n        var _a;\n        const self = this;\n        const mode = getIonMode(self);\n        const spinnerName = self.getName();\n        const spinner = (_a = SPINNERS[spinnerName]) !== null && _a !== void 0 ? _a : SPINNERS['lines'];\n        const duration = typeof self.duration === 'number' && self.duration > 10 ? self.duration : spinner.dur;\n        const svgs = [];\n        if (spinner.circles !== undefined) {\n            for (let i = 0; i < spinner.circles; i++) {\n                svgs.push(buildCircle(spinner, duration, i, spinner.circles));\n            }\n        }\n        else if (spinner.lines !== undefined) {\n            for (let i = 0; i < spinner.lines; i++) {\n                svgs.push(buildLine(spinner, duration, i, spinner.lines));\n            }\n        }\n        return (h(Host, { key: '9422c25aadfdf08861e26bb1aa336c94391d10a3', class: createColorClasses(self.color, {\n                [mode]: true,\n                [`spinner-${spinnerName}`]: true,\n                'spinner-paused': self.paused || config.getBoolean('_testing'),\n            }), role: \"progressbar\", style: spinner.elmDuration ? { animationDuration: duration + 'ms' } : {} }, svgs));\n    }\n    static get is() { return \"ion-spinner\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"spinner.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"spinner.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"color\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Color\",\n                    \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never> | undefined\",\n                    \"references\": {\n                        \"Color\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::Color\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The color to use from your application's color palette.\\nDefault options are: `\\\"primary\\\"`, `\\\"secondary\\\"`, `\\\"tertiary\\\"`, `\\\"success\\\"`, `\\\"warning\\\"`, `\\\"danger\\\"`, `\\\"light\\\"`, `\\\"medium\\\"`, and `\\\"dark\\\"`.\\nFor more information on colors, see [theming](/docs/theming/basics).\"\n                },\n                \"attribute\": \"color\",\n                \"reflect\": true\n            },\n            \"duration\": {\n                \"type\": \"number\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Duration of the spinner animation in milliseconds. The default varies based on the spinner.\"\n                },\n                \"attribute\": \"duration\",\n                \"reflect\": false\n            },\n            \"name\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"SpinnerTypes\",\n                    \"resolved\": \"\\\"bubbles\\\" | \\\"circles\\\" | \\\"circular\\\" | \\\"crescent\\\" | \\\"dots\\\" | \\\"lines\\\" | \\\"lines-sharp\\\" | \\\"lines-sharp-small\\\" | \\\"lines-small\\\" | undefined\",\n                    \"references\": {\n                        \"SpinnerTypes\": {\n                            \"location\": \"import\",\n                            \"path\": \"./spinner-configs\",\n                            \"id\": \"src/components/spinner/spinner-configs.ts::SpinnerTypes\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The name of the SVG spinner to use. If a name is not provided, the platform's default\\nspinner will be used.\"\n                },\n                \"attribute\": \"name\",\n                \"reflect\": false\n            },\n            \"paused\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the spinner's animation will be paused.\"\n                },\n                \"attribute\": \"paused\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            }\n        };\n    }\n}\nconst buildCircle = (spinner, duration, index, total) => {\n    const data = spinner.fn(duration, index, total);\n    data.style['animation-duration'] = duration + 'ms';\n    return (h(\"svg\", { viewBox: data.viewBox || '0 0 64 64', style: data.style }, h(\"circle\", { transform: data.transform || 'translate(32,32)', cx: data.cx, cy: data.cy, r: data.r, style: spinner.elmDuration ? { animationDuration: duration + 'ms' } : {} })));\n};\nconst buildLine = (spinner, duration, index, total) => {\n    const data = spinner.fn(duration, index, total);\n    data.style['animation-duration'] = duration + 'ms';\n    return (h(\"svg\", { viewBox: data.viewBox || '0 0 64 64', style: data.style }, h(\"line\", { transform: \"translate(32,32)\", y1: data.y1, y2: data.y2 })));\n};\n"],"version":3}