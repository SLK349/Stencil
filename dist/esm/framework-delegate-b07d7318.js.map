{"file":"framework-delegate-b07d7318.js","mappings":"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","names":[],"sources":["node_modules/@ionic/core/dist/collection/utils/framework-delegate.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { componentOnReady } from \"./helpers\";\n// TODO(FW-2832): types\nexport const attachComponent = async (delegate, container, component, cssClasses, componentProps, inline) => {\n    var _a;\n    if (delegate) {\n        return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n    }\n    if (!inline && typeof component !== 'string' && !(component instanceof HTMLElement)) {\n        throw new Error('framework delegate is missing');\n    }\n    const el = typeof component === 'string' ? (_a = container.ownerDocument) === null || _a === void 0 ? void 0 : _a.createElement(component) : component;\n    if (cssClasses) {\n        cssClasses.forEach((c) => el.classList.add(c));\n    }\n    if (componentProps) {\n        Object.assign(el, componentProps);\n    }\n    container.appendChild(el);\n    await new Promise((resolve) => componentOnReady(el, resolve));\n    return el;\n};\nexport const detachComponent = (delegate, element) => {\n    if (element) {\n        if (delegate) {\n            const container = element.parentElement;\n            return delegate.removeViewFromDom(container, element);\n        }\n        element.remove();\n    }\n    return Promise.resolve();\n};\nexport const CoreDelegate = () => {\n    let BaseComponent;\n    let Reference;\n    const attachViewToDom = async (parentElement, userComponent, userComponentProps = {}, cssClasses = []) => {\n        var _a, _b;\n        BaseComponent = parentElement;\n        let ChildComponent;\n        /**\n         * If passing in a component via the `component` props\n         * we need to append it inside of our overlay component.\n         */\n        if (userComponent) {\n            /**\n             * If passing in the tag name, create\n             * the element otherwise just get a reference\n             * to the component.\n             */\n            const el = typeof userComponent === 'string' ? (_a = BaseComponent.ownerDocument) === null || _a === void 0 ? void 0 : _a.createElement(userComponent) : userComponent;\n            /**\n             * Add any css classes passed in\n             * via the cssClasses prop on the overlay.\n             */\n            cssClasses.forEach((c) => el.classList.add(c));\n            /**\n             * Add any props passed in\n             * via the componentProps prop on the overlay.\n             */\n            Object.assign(el, userComponentProps);\n            /**\n             * Finally, append the component\n             * inside of the overlay component.\n             */\n            BaseComponent.appendChild(el);\n            ChildComponent = el;\n            await new Promise((resolve) => componentOnReady(el, resolve));\n        }\n        else if (BaseComponent.children.length > 0 &&\n            (BaseComponent.tagName === 'ION-MODAL' || BaseComponent.tagName === 'ION-POPOVER')) {\n            /**\n             * The delegate host wrapper el is only needed for modals and popovers\n             * because they allow the dev to provide custom content to the overlay.\n             */\n            const root = (ChildComponent = BaseComponent.children[0]);\n            if (!root.classList.contains('ion-delegate-host')) {\n                /**\n                 * If the root element is not a delegate host, it means\n                 * that the overlay has not been presented yet and we need\n                 * to create the containing element with the specified classes.\n                 */\n                const el = (_b = BaseComponent.ownerDocument) === null || _b === void 0 ? void 0 : _b.createElement('div');\n                // Add a class to track if the root element was created by the delegate.\n                el.classList.add('ion-delegate-host');\n                cssClasses.forEach((c) => el.classList.add(c));\n                // Move each child from the original template to the new parent element.\n                el.append(...BaseComponent.children);\n                // Append the new parent element to the original parent element.\n                BaseComponent.appendChild(el);\n                /**\n                 * Update the ChildComponent to be the\n                 * newly created div in the event that one\n                 * does not already exist.\n                 */\n                ChildComponent = el;\n            }\n        }\n        /**\n         * Get the root of the app and\n         * add the overlay there.\n         */\n        const app = document.querySelector('ion-app') || document.body;\n        /**\n         * Create a placeholder comment so that\n         * we can return this component to where\n         * it was previously.\n         */\n        Reference = document.createComment('ionic teleport');\n        BaseComponent.parentNode.insertBefore(Reference, BaseComponent);\n        app.appendChild(BaseComponent);\n        /**\n         * We return the child component rather than the overlay\n         * reference itself since modal and popover will\n         * use this to wait for any Ionic components in the child view\n         * to be ready (i.e. componentOnReady) when using the\n         * lazy loaded component bundle.\n         *\n         * However, we fall back to returning BaseComponent\n         * in the event that a modal or popover is presented\n         * with no child content.\n         */\n        return ChildComponent !== null && ChildComponent !== void 0 ? ChildComponent : BaseComponent;\n    };\n    const removeViewFromDom = () => {\n        /**\n         * Return component to where it was previously in the DOM.\n         */\n        if (BaseComponent && Reference) {\n            Reference.parentNode.insertBefore(BaseComponent, Reference);\n            Reference.remove();\n        }\n        return Promise.resolve();\n    };\n    return { attachViewToDom, removeViewFromDom };\n};\n"],"version":3}